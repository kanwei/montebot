// Compiled by ClojureScript 0.0-2985 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2985";
cljs.core._STAR_unchecked_if_STAR_ = false;
/**
 * @define {string}
 */
cljs.core._STAR_target_STAR_ = "default";
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
 * Each runtime environment provides a different way to print output.
 * Whatever function *print-fn* is bound to will be passed any
 * Strings which should be printed.
 */
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
 * Set *print-fn* to f.
 */
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
 * Set *print-fn* to console.log
 */
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__11068__delegate = function (args){
return console.log.apply(console,(function (){var G__11067 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__11067) : cljs.core.into_array.call(null,G__11067));
})());
};
var G__11068 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__11069__i = 0, G__11069__a = new Array(arguments.length -  0);
while (G__11069__i < G__11069__a.length) {G__11069__a[G__11069__i] = arguments[G__11069__i + 0]; ++G__11069__i;}
  args = new cljs.core.IndexedSeq(G__11069__a,0);
} 
return G__11068__delegate.call(this,args);};
G__11068.cljs$lang$maxFixedArity = 0;
G__11068.cljs$lang$applyTo = (function (arglist__11070){
var args = cljs.core.seq(arglist__11070);
return G__11068__delegate(args);
});
G__11068.cljs$core$IFn$_invoke$arity$variadic = G__11068__delegate;
return G__11068;
})()
;
});
/**
 * Internal - do not use!
 */
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
 * Tests if 2 arguments are the same object
 */
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
 * Returns true if x is nil, false otherwise.
 */
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
 * Returns true if x is logical false, false otherwise.
 */
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
 * Returns true if x is not nil, false otherwise.
 */
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__11072 = x;
return goog.isString(G__11072);
});
/**
 * Internal - do not use!
 */
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__11074 = x__$1;
return goog.typeOf(G__11074);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
 * When compiled for a command-line target, whatever
 * function *main-fn* is set to will be called with the command-line
 * argv as arguments
 */
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__5185__auto__ = ty;
if(cljs.core.truth_(and__5185__auto__)){
return ty.cljs$lang$type;
} else {
return and__5185__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__11076 = obj;
return goog.typeOf(G__11076);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4404__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4404__auto__)){
var s = temp__4404__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__11078 = Symbol;
return goog.typeOf(G__11078);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
 * Returns a javascript array, cloned from the passed in array
 */
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__6084__auto___11080 = len;
var i_11081 = (0);
while(true){
if((i_11081 < n__6084__auto___11080)){
(new_arr[i_11081] = (arr[i_11081]));

var G__11082 = (i_11081 + (1));
i_11081 = G__11082;
continue;
} else {
}
break;
}

return new_arr;
});
/**
 * Creates a new javascript array.
 * @param {...*} var_args
 */
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__11083 = (i + (1));
i = G__11083;
continue;
} else {
return a;
}
break;
}
});
/**
 * Returns the value at the index.
 * @param {...*} var_args
 */
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__11092__delegate = function (array,i,idxs){
var G__11089 = aget;
var G__11090 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__11091 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__11089,G__11090,G__11091) : cljs.core.apply.call(null,G__11089,G__11090,G__11091));
};
var G__11092 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__11093__i = 0, G__11093__a = new Array(arguments.length -  2);
while (G__11093__i < G__11093__a.length) {G__11093__a[G__11093__i] = arguments[G__11093__i + 2]; ++G__11093__i;}
  idxs = new cljs.core.IndexedSeq(G__11093__a,0);
} 
return G__11092__delegate.call(this,array,i,idxs);};
G__11092.cljs$lang$maxFixedArity = 2;
G__11092.cljs$lang$applyTo = (function (arglist__11094){
var array = cljs.core.first(arglist__11094);
arglist__11094 = cljs.core.next(arglist__11094);
var i = cljs.core.first(arglist__11094);
var idxs = cljs.core.rest(arglist__11094);
return G__11092__delegate(array,i,idxs);
});
G__11092.cljs$core$IFn$_invoke$arity$variadic = G__11092__delegate;
return G__11092;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__11095 = null;
if (arguments.length > 2) {
var G__11096__i = 0, G__11096__a = new Array(arguments.length -  2);
while (G__11096__i < G__11096__a.length) {G__11096__a[G__11096__i] = arguments[G__11096__i + 2]; ++G__11096__i;}
G__11095 = new cljs.core.IndexedSeq(G__11096__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__11095);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
 * Sets the value at the index.
 * @param {...*} var_args
 */
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__11105__delegate = function (array,idx,idx2,idxv){
var G__11101 = aset;
var G__11102 = (array[idx]);
var G__11103 = idx2;
var G__11104 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__11101,G__11102,G__11103,G__11104) : cljs.core.apply.call(null,G__11101,G__11102,G__11103,G__11104));
};
var G__11105 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__11106__i = 0, G__11106__a = new Array(arguments.length -  3);
while (G__11106__i < G__11106__a.length) {G__11106__a[G__11106__i] = arguments[G__11106__i + 3]; ++G__11106__i;}
  idxv = new cljs.core.IndexedSeq(G__11106__a,0);
} 
return G__11105__delegate.call(this,array,idx,idx2,idxv);};
G__11105.cljs$lang$maxFixedArity = 3;
G__11105.cljs$lang$applyTo = (function (arglist__11107){
var array = cljs.core.first(arglist__11107);
arglist__11107 = cljs.core.next(arglist__11107);
var idx = cljs.core.first(arglist__11107);
arglist__11107 = cljs.core.next(arglist__11107);
var idx2 = cljs.core.first(arglist__11107);
var idxv = cljs.core.rest(arglist__11107);
return G__11105__delegate(array,idx,idx2,idxv);
});
G__11105.cljs$core$IFn$_invoke$arity$variadic = G__11105__delegate;
return G__11105;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__11108 = null;
if (arguments.length > 3) {
var G__11109__i = 0, G__11109__a = new Array(arguments.length -  3);
while (G__11109__i < G__11109__a.length) {G__11109__a[G__11109__i] = arguments[G__11109__i + 3]; ++G__11109__i;}
G__11108 = new cljs.core.IndexedSeq(G__11109__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__11108);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
 * Returns the length of the array. Works on arrays of all types.
 */
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__11115 = (function (a,x){
a.push(x);

return a;
});
var G__11116 = [];
var G__11117 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__11115,G__11116,G__11117) : cljs.core.reduce.call(null,G__11115,G__11116,G__11117));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
 * Invoke JavaScript object method via string. Needed when the
 * string is not a valid unquoted property name.
 * @param {...*} var_args
 */
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__11118__i = 0, G__11118__a = new Array(arguments.length -  2);
while (G__11118__i < G__11118__a.length) {G__11118__a[G__11118__i] = arguments[G__11118__i + 2]; ++G__11118__i;}
  args = new cljs.core.IndexedSeq(G__11118__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__11119){
var obj = cljs.core.first(arglist__11119);
arglist__11119 = cljs.core.next(arglist__11119);
var s = cljs.core.first(arglist__11119);
var args = cljs.core.rest(arglist__11119);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj11121 = {};
return obj11121;
})();


cljs.core.IFn = (function (){var obj11123 = {};
return obj11123;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__5185__auto__ = this$;
if(and__5185__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__5185__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__5841__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5197__auto__ = (cljs.core._invoke[(function (){var G__11169 = x__5841__auto__;
return goog.typeOf(G__11169);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._invoke["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__5185__auto__ = this$;
if(and__5185__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__5185__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__5841__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5197__auto__ = (cljs.core._invoke[(function (){var G__11171 = x__5841__auto__;
return goog.typeOf(G__11171);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._invoke["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__5185__auto__ = this$;
if(and__5185__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__5185__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__5841__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5197__auto__ = (cljs.core._invoke[(function (){var G__11173 = x__5841__auto__;
return goog.typeOf(G__11173);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._invoke["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__5185__auto__ = this$;
if(and__5185__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__5185__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__5841__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5197__auto__ = (cljs.core._invoke[(function (){var G__11175 = x__5841__auto__;
return goog.typeOf(G__11175);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._invoke["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__5185__auto__ = this$;
if(and__5185__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__5185__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__5841__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5197__auto__ = (cljs.core._invoke[(function (){var G__11177 = x__5841__auto__;
return goog.typeOf(G__11177);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._invoke["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__5185__auto__ = this$;
if(and__5185__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__5185__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__5841__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5197__auto__ = (cljs.core._invoke[(function (){var G__11179 = x__5841__auto__;
return goog.typeOf(G__11179);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._invoke["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__5185__auto__ = this$;
if(and__5185__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__5185__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__5841__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5197__auto__ = (cljs.core._invoke[(function (){var G__11181 = x__5841__auto__;
return goog.typeOf(G__11181);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._invoke["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__5185__auto__ = this$;
if(and__5185__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__5185__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__5841__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5197__auto__ = (cljs.core._invoke[(function (){var G__11183 = x__5841__auto__;
return goog.typeOf(G__11183);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._invoke["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__5185__auto__ = this$;
if(and__5185__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__5185__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__5841__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5197__auto__ = (cljs.core._invoke[(function (){var G__11185 = x__5841__auto__;
return goog.typeOf(G__11185);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._invoke["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__5185__auto__ = this$;
if(and__5185__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__5185__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__5841__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5197__auto__ = (cljs.core._invoke[(function (){var G__11187 = x__5841__auto__;
return goog.typeOf(G__11187);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._invoke["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__5185__auto__ = this$;
if(and__5185__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__5185__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__5841__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5197__auto__ = (cljs.core._invoke[(function (){var G__11189 = x__5841__auto__;
return goog.typeOf(G__11189);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._invoke["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__5185__auto__ = this$;
if(and__5185__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__5185__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__5841__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5197__auto__ = (cljs.core._invoke[(function (){var G__11191 = x__5841__auto__;
return goog.typeOf(G__11191);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._invoke["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__5185__auto__ = this$;
if(and__5185__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__5185__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__5841__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5197__auto__ = (cljs.core._invoke[(function (){var G__11193 = x__5841__auto__;
return goog.typeOf(G__11193);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._invoke["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__5185__auto__ = this$;
if(and__5185__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__5185__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__5841__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5197__auto__ = (cljs.core._invoke[(function (){var G__11195 = x__5841__auto__;
return goog.typeOf(G__11195);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._invoke["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__5185__auto__ = this$;
if(and__5185__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__5185__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__5841__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5197__auto__ = (cljs.core._invoke[(function (){var G__11197 = x__5841__auto__;
return goog.typeOf(G__11197);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._invoke["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__5185__auto__ = this$;
if(and__5185__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__5185__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__5841__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5197__auto__ = (cljs.core._invoke[(function (){var G__11199 = x__5841__auto__;
return goog.typeOf(G__11199);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._invoke["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__5185__auto__ = this$;
if(and__5185__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__5185__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__5841__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5197__auto__ = (cljs.core._invoke[(function (){var G__11201 = x__5841__auto__;
return goog.typeOf(G__11201);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._invoke["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__5185__auto__ = this$;
if(and__5185__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__5185__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__5841__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5197__auto__ = (cljs.core._invoke[(function (){var G__11203 = x__5841__auto__;
return goog.typeOf(G__11203);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._invoke["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__5185__auto__ = this$;
if(and__5185__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__5185__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__5841__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5197__auto__ = (cljs.core._invoke[(function (){var G__11205 = x__5841__auto__;
return goog.typeOf(G__11205);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._invoke["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__5185__auto__ = this$;
if(and__5185__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__5185__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__5841__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5197__auto__ = (cljs.core._invoke[(function (){var G__11207 = x__5841__auto__;
return goog.typeOf(G__11207);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._invoke["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__5185__auto__ = this$;
if(and__5185__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__5185__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__5841__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5197__auto__ = (cljs.core._invoke[(function (){var G__11209 = x__5841__auto__;
return goog.typeOf(G__11209);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._invoke["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__5185__auto__ = this$;
if(and__5185__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__5185__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__5841__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5197__auto__ = (cljs.core._invoke[(function (){var G__11211 = x__5841__auto__;
return goog.typeOf(G__11211);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._invoke["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj11213 = {};
return obj11213;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__5185__auto__ = value;
if(and__5185__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__5185__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__5841__auto__ = (((value == null))?null:value);
return (function (){var or__5197__auto__ = (cljs.core._clone[(function (){var G__11217 = x__5841__auto__;
return goog.typeOf(G__11217);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._clone["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj11219 = {};
return obj11219;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__5185__auto__ = coll;
if(and__5185__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__5185__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__5841__auto__ = (((coll == null))?null:coll);
return (function (){var or__5197__auto__ = (cljs.core._count[(function (){var G__11223 = x__5841__auto__;
return goog.typeOf(G__11223);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._count["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj11225 = {};
return obj11225;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__5185__auto__ = coll;
if(and__5185__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__5185__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__5841__auto__ = (((coll == null))?null:coll);
return (function (){var or__5197__auto__ = (cljs.core._empty[(function (){var G__11229 = x__5841__auto__;
return goog.typeOf(G__11229);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._empty["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj11231 = {};
return obj11231;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__5185__auto__ = coll;
if(and__5185__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__5185__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__5841__auto__ = (((coll == null))?null:coll);
return (function (){var or__5197__auto__ = (cljs.core._conj[(function (){var G__11235 = x__5841__auto__;
return goog.typeOf(G__11235);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._conj["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj11237 = {};
return obj11237;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__5185__auto__ = coll;
if(and__5185__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__5185__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__5841__auto__ = (((coll == null))?null:coll);
return (function (){var or__5197__auto__ = (cljs.core._nth[(function (){var G__11243 = x__5841__auto__;
return goog.typeOf(G__11243);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._nth["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__5185__auto__ = coll;
if(and__5185__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__5185__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__5841__auto__ = (((coll == null))?null:coll);
return (function (){var or__5197__auto__ = (cljs.core._nth[(function (){var G__11245 = x__5841__auto__;
return goog.typeOf(G__11245);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._nth["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj11247 = {};
return obj11247;
})();


cljs.core.ISeq = (function (){var obj11249 = {};
return obj11249;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__5185__auto__ = coll;
if(and__5185__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__5185__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__5841__auto__ = (((coll == null))?null:coll);
return (function (){var or__5197__auto__ = (cljs.core._first[(function (){var G__11253 = x__5841__auto__;
return goog.typeOf(G__11253);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._first["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__5185__auto__ = coll;
if(and__5185__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__5185__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__5841__auto__ = (((coll == null))?null:coll);
return (function (){var or__5197__auto__ = (cljs.core._rest[(function (){var G__11257 = x__5841__auto__;
return goog.typeOf(G__11257);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._rest["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj11259 = {};
return obj11259;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__5185__auto__ = coll;
if(and__5185__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__5185__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__5841__auto__ = (((coll == null))?null:coll);
return (function (){var or__5197__auto__ = (cljs.core._next[(function (){var G__11263 = x__5841__auto__;
return goog.typeOf(G__11263);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._next["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj11265 = {};
return obj11265;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__5185__auto__ = o;
if(and__5185__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__5185__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__5841__auto__ = (((o == null))?null:o);
return (function (){var or__5197__auto__ = (cljs.core._lookup[(function (){var G__11271 = x__5841__auto__;
return goog.typeOf(G__11271);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._lookup["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__5185__auto__ = o;
if(and__5185__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__5185__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__5841__auto__ = (((o == null))?null:o);
return (function (){var or__5197__auto__ = (cljs.core._lookup[(function (){var G__11273 = x__5841__auto__;
return goog.typeOf(G__11273);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._lookup["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj11275 = {};
return obj11275;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__5185__auto__ = coll;
if(and__5185__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__5185__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__5841__auto__ = (((coll == null))?null:coll);
return (function (){var or__5197__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__11279 = x__5841__auto__;
return goog.typeOf(G__11279);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__5185__auto__ = coll;
if(and__5185__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__5185__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__5841__auto__ = (((coll == null))?null:coll);
return (function (){var or__5197__auto__ = (cljs.core._assoc[(function (){var G__11283 = x__5841__auto__;
return goog.typeOf(G__11283);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._assoc["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj11285 = {};
return obj11285;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__5185__auto__ = coll;
if(and__5185__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__5185__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__5841__auto__ = (((coll == null))?null:coll);
return (function (){var or__5197__auto__ = (cljs.core._dissoc[(function (){var G__11289 = x__5841__auto__;
return goog.typeOf(G__11289);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._dissoc["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj11291 = {};
return obj11291;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__5185__auto__ = coll;
if(and__5185__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__5185__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__5841__auto__ = (((coll == null))?null:coll);
return (function (){var or__5197__auto__ = (cljs.core._key[(function (){var G__11295 = x__5841__auto__;
return goog.typeOf(G__11295);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._key["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__5185__auto__ = coll;
if(and__5185__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__5185__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__5841__auto__ = (((coll == null))?null:coll);
return (function (){var or__5197__auto__ = (cljs.core._val[(function (){var G__11299 = x__5841__auto__;
return goog.typeOf(G__11299);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._val["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj11301 = {};
return obj11301;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__5185__auto__ = coll;
if(and__5185__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__5185__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__5841__auto__ = (((coll == null))?null:coll);
return (function (){var or__5197__auto__ = (cljs.core._disjoin[(function (){var G__11305 = x__5841__auto__;
return goog.typeOf(G__11305);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._disjoin["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj11307 = {};
return obj11307;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__5185__auto__ = coll;
if(and__5185__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__5185__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__5841__auto__ = (((coll == null))?null:coll);
return (function (){var or__5197__auto__ = (cljs.core._peek[(function (){var G__11311 = x__5841__auto__;
return goog.typeOf(G__11311);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._peek["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__5185__auto__ = coll;
if(and__5185__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__5185__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__5841__auto__ = (((coll == null))?null:coll);
return (function (){var or__5197__auto__ = (cljs.core._pop[(function (){var G__11315 = x__5841__auto__;
return goog.typeOf(G__11315);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._pop["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj11317 = {};
return obj11317;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__5185__auto__ = coll;
if(and__5185__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__5185__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__5841__auto__ = (((coll == null))?null:coll);
return (function (){var or__5197__auto__ = (cljs.core._assoc_n[(function (){var G__11321 = x__5841__auto__;
return goog.typeOf(G__11321);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj11323 = {};
return obj11323;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__5185__auto__ = o;
if(and__5185__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__5185__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__5841__auto__ = (((o == null))?null:o);
return (function (){var or__5197__auto__ = (cljs.core._deref[(function (){var G__11327 = x__5841__auto__;
return goog.typeOf(G__11327);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._deref["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj11329 = {};
return obj11329;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__5185__auto__ = o;
if(and__5185__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__5185__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__5841__auto__ = (((o == null))?null:o);
return (function (){var or__5197__auto__ = (cljs.core._deref_with_timeout[(function (){var G__11333 = x__5841__auto__;
return goog.typeOf(G__11333);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj11335 = {};
return obj11335;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__5185__auto__ = o;
if(and__5185__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__5185__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__5841__auto__ = (((o == null))?null:o);
return (function (){var or__5197__auto__ = (cljs.core._meta[(function (){var G__11339 = x__5841__auto__;
return goog.typeOf(G__11339);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._meta["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj11341 = {};
return obj11341;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__5185__auto__ = o;
if(and__5185__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__5185__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__5841__auto__ = (((o == null))?null:o);
return (function (){var or__5197__auto__ = (cljs.core._with_meta[(function (){var G__11345 = x__5841__auto__;
return goog.typeOf(G__11345);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._with_meta["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj11347 = {};
return obj11347;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__5185__auto__ = coll;
if(and__5185__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__5185__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__5841__auto__ = (((coll == null))?null:coll);
return (function (){var or__5197__auto__ = (cljs.core._reduce[(function (){var G__11353 = x__5841__auto__;
return goog.typeOf(G__11353);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._reduce["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__5185__auto__ = coll;
if(and__5185__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__5185__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__5841__auto__ = (((coll == null))?null:coll);
return (function (){var or__5197__auto__ = (cljs.core._reduce[(function (){var G__11355 = x__5841__auto__;
return goog.typeOf(G__11355);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._reduce["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj11357 = {};
return obj11357;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__5185__auto__ = coll;
if(and__5185__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__5185__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__5841__auto__ = (((coll == null))?null:coll);
return (function (){var or__5197__auto__ = (cljs.core._kv_reduce[(function (){var G__11361 = x__5841__auto__;
return goog.typeOf(G__11361);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj11363 = {};
return obj11363;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__5185__auto__ = o;
if(and__5185__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__5185__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__5841__auto__ = (((o == null))?null:o);
return (function (){var or__5197__auto__ = (cljs.core._equiv[(function (){var G__11367 = x__5841__auto__;
return goog.typeOf(G__11367);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._equiv["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj11369 = {};
return obj11369;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__5185__auto__ = o;
if(and__5185__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__5185__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__5841__auto__ = (((o == null))?null:o);
return (function (){var or__5197__auto__ = (cljs.core._hash[(function (){var G__11373 = x__5841__auto__;
return goog.typeOf(G__11373);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._hash["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj11375 = {};
return obj11375;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__5185__auto__ = o;
if(and__5185__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__5185__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__5841__auto__ = (((o == null))?null:o);
return (function (){var or__5197__auto__ = (cljs.core._seq[(function (){var G__11379 = x__5841__auto__;
return goog.typeOf(G__11379);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._seq["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj11381 = {};
return obj11381;
})();


cljs.core.IList = (function (){var obj11383 = {};
return obj11383;
})();


cljs.core.IRecord = (function (){var obj11385 = {};
return obj11385;
})();


cljs.core.IReversible = (function (){var obj11387 = {};
return obj11387;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__5185__auto__ = coll;
if(and__5185__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__5185__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__5841__auto__ = (((coll == null))?null:coll);
return (function (){var or__5197__auto__ = (cljs.core._rseq[(function (){var G__11391 = x__5841__auto__;
return goog.typeOf(G__11391);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._rseq["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj11393 = {};
return obj11393;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__5185__auto__ = coll;
if(and__5185__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__5185__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__5841__auto__ = (((coll == null))?null:coll);
return (function (){var or__5197__auto__ = (cljs.core._sorted_seq[(function (){var G__11397 = x__5841__auto__;
return goog.typeOf(G__11397);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__5185__auto__ = coll;
if(and__5185__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__5185__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__5841__auto__ = (((coll == null))?null:coll);
return (function (){var or__5197__auto__ = (cljs.core._sorted_seq_from[(function (){var G__11401 = x__5841__auto__;
return goog.typeOf(G__11401);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__5185__auto__ = coll;
if(and__5185__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__5185__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__5841__auto__ = (((coll == null))?null:coll);
return (function (){var or__5197__auto__ = (cljs.core._entry_key[(function (){var G__11405 = x__5841__auto__;
return goog.typeOf(G__11405);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._entry_key["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__5185__auto__ = coll;
if(and__5185__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__5185__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__5841__auto__ = (((coll == null))?null:coll);
return (function (){var or__5197__auto__ = (cljs.core._comparator[(function (){var G__11409 = x__5841__auto__;
return goog.typeOf(G__11409);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._comparator["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj11411 = {};
return obj11411;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__5185__auto__ = writer;
if(and__5185__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__5185__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__5841__auto__ = (((writer == null))?null:writer);
return (function (){var or__5197__auto__ = (cljs.core._write[(function (){var G__11415 = x__5841__auto__;
return goog.typeOf(G__11415);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._write["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__5185__auto__ = writer;
if(and__5185__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__5185__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__5841__auto__ = (((writer == null))?null:writer);
return (function (){var or__5197__auto__ = (cljs.core._flush[(function (){var G__11419 = x__5841__auto__;
return goog.typeOf(G__11419);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._flush["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj11421 = {};
return obj11421;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__5185__auto__ = o;
if(and__5185__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__5185__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__5841__auto__ = (((o == null))?null:o);
return (function (){var or__5197__auto__ = (cljs.core._pr_writer[(function (){var G__11425 = x__5841__auto__;
return goog.typeOf(G__11425);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj11427 = {};
return obj11427;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__5185__auto__ = d;
if(and__5185__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__5185__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__5841__auto__ = (((d == null))?null:d);
return (function (){var or__5197__auto__ = (cljs.core._realized_QMARK_[(function (){var G__11431 = x__5841__auto__;
return goog.typeOf(G__11431);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj11433 = {};
return obj11433;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__5185__auto__ = this$;
if(and__5185__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__5185__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__5841__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5197__auto__ = (cljs.core._notify_watches[(function (){var G__11437 = x__5841__auto__;
return goog.typeOf(G__11437);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__5185__auto__ = this$;
if(and__5185__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__5185__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__5841__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5197__auto__ = (cljs.core._add_watch[(function (){var G__11441 = x__5841__auto__;
return goog.typeOf(G__11441);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._add_watch["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__5185__auto__ = this$;
if(and__5185__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__5185__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__5841__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5197__auto__ = (cljs.core._remove_watch[(function (){var G__11445 = x__5841__auto__;
return goog.typeOf(G__11445);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj11447 = {};
return obj11447;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__5185__auto__ = coll;
if(and__5185__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__5185__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__5841__auto__ = (((coll == null))?null:coll);
return (function (){var or__5197__auto__ = (cljs.core._as_transient[(function (){var G__11451 = x__5841__auto__;
return goog.typeOf(G__11451);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._as_transient["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj11453 = {};
return obj11453;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__5185__auto__ = tcoll;
if(and__5185__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__5185__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__5841__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__5197__auto__ = (cljs.core._conj_BANG_[(function (){var G__11457 = x__5841__auto__;
return goog.typeOf(G__11457);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__5185__auto__ = tcoll;
if(and__5185__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__5185__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__5841__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__5197__auto__ = (cljs.core._persistent_BANG_[(function (){var G__11461 = x__5841__auto__;
return goog.typeOf(G__11461);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj11463 = {};
return obj11463;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__5185__auto__ = tcoll;
if(and__5185__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__5185__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__5841__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__5197__auto__ = (cljs.core._assoc_BANG_[(function (){var G__11467 = x__5841__auto__;
return goog.typeOf(G__11467);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj11469 = {};
return obj11469;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__5185__auto__ = tcoll;
if(and__5185__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__5185__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__5841__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__5197__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__11473 = x__5841__auto__;
return goog.typeOf(G__11473);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj11475 = {};
return obj11475;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__5185__auto__ = tcoll;
if(and__5185__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__5185__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__5841__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__5197__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__11479 = x__5841__auto__;
return goog.typeOf(G__11479);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__5185__auto__ = tcoll;
if(and__5185__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__5185__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__5841__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__5197__auto__ = (cljs.core._pop_BANG_[(function (){var G__11483 = x__5841__auto__;
return goog.typeOf(G__11483);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj11485 = {};
return obj11485;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__5185__auto__ = tcoll;
if(and__5185__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__5185__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__5841__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__5197__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__11489 = x__5841__auto__;
return goog.typeOf(G__11489);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj11491 = {};
return obj11491;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__5185__auto__ = x;
if(and__5185__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__5185__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__5841__auto__ = (((x == null))?null:x);
return (function (){var or__5197__auto__ = (cljs.core._compare[(function (){var G__11495 = x__5841__auto__;
return goog.typeOf(G__11495);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._compare["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj11497 = {};
return obj11497;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__5185__auto__ = coll;
if(and__5185__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__5185__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__5841__auto__ = (((coll == null))?null:coll);
return (function (){var or__5197__auto__ = (cljs.core._drop_first[(function (){var G__11501 = x__5841__auto__;
return goog.typeOf(G__11501);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._drop_first["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj11503 = {};
return obj11503;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__5185__auto__ = coll;
if(and__5185__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__5185__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__5841__auto__ = (((coll == null))?null:coll);
return (function (){var or__5197__auto__ = (cljs.core._chunked_first[(function (){var G__11507 = x__5841__auto__;
return goog.typeOf(G__11507);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__5185__auto__ = coll;
if(and__5185__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__5185__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__5841__auto__ = (((coll == null))?null:coll);
return (function (){var or__5197__auto__ = (cljs.core._chunked_rest[(function (){var G__11511 = x__5841__auto__;
return goog.typeOf(G__11511);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj11513 = {};
return obj11513;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__5185__auto__ = coll;
if(and__5185__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__5185__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__5841__auto__ = (((coll == null))?null:coll);
return (function (){var or__5197__auto__ = (cljs.core._chunked_next[(function (){var G__11517 = x__5841__auto__;
return goog.typeOf(G__11517);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj11519 = {};
return obj11519;
})();

cljs.core._name = (function _name(x){
if((function (){var and__5185__auto__ = x;
if(and__5185__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__5185__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__5841__auto__ = (((x == null))?null:x);
return (function (){var or__5197__auto__ = (cljs.core._name[(function (){var G__11523 = x__5841__auto__;
return goog.typeOf(G__11523);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._name["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__5185__auto__ = x;
if(and__5185__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__5185__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__5841__auto__ = (((x == null))?null:x);
return (function (){var or__5197__auto__ = (cljs.core._namespace[(function (){var G__11527 = x__5841__auto__;
return goog.typeOf(G__11527);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._namespace["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj11529 = {};
return obj11529;
})();


cljs.core.IReset = (function (){var obj11531 = {};
return obj11531;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__5185__auto__ = o;
if(and__5185__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__5185__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__5841__auto__ = (((o == null))?null:o);
return (function (){var or__5197__auto__ = (cljs.core._reset_BANG_[(function (){var G__11535 = x__5841__auto__;
return goog.typeOf(G__11535);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj11537 = {};
return obj11537;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__5185__auto__ = o;
if(and__5185__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__5185__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__5841__auto__ = (((o == null))?null:o);
return (function (){var or__5197__auto__ = (cljs.core._swap_BANG_[(function (){var G__11547 = x__5841__auto__;
return goog.typeOf(G__11547);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__5185__auto__ = o;
if(and__5185__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__5185__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__5841__auto__ = (((o == null))?null:o);
return (function (){var or__5197__auto__ = (cljs.core._swap_BANG_[(function (){var G__11549 = x__5841__auto__;
return goog.typeOf(G__11549);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__5185__auto__ = o;
if(and__5185__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__5185__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__5841__auto__ = (((o == null))?null:o);
return (function (){var or__5197__auto__ = (cljs.core._swap_BANG_[(function (){var G__11551 = x__5841__auto__;
return goog.typeOf(G__11551);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__5185__auto__ = o;
if(and__5185__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__5185__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__5841__auto__ = (((o == null))?null:o);
return (function (){var or__5197__auto__ = (cljs.core._swap_BANG_[(function (){var G__11553 = x__5841__auto__;
return goog.typeOf(G__11553);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj11555 = {};
return obj11555;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__5185__auto__ = o;
if(and__5185__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__5185__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__5841__auto__ = (((o == null))?null:o);
return (function (){var or__5197__auto__ = (cljs.core._vreset_BANG_[(function (){var G__11559 = x__5841__auto__;
return goog.typeOf(G__11559);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj11561 = {};
return obj11561;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__5185__auto__ = coll;
if(and__5185__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__5185__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__5841__auto__ = (((coll == null))?null:coll);
return (function (){var or__5197__auto__ = (cljs.core._iterator[(function (){var G__11565 = x__5841__auto__;
return goog.typeOf(G__11565);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._iterator["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
 * Support so that collections can implement toString without
 * loading all the printing machinery.
 */
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__11568 = (4294967295);
var G__11569 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__11568,G__11569) : Math.imul.call(null,G__11568,G__11569));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__11572 = a;
var G__11573 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__11572,G__11573) : Math.imul.call(null,G__11572,G__11573));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = ((3432918353) | (0));
cljs.core.m3_C2 = ((461845907) | (0));
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul((k1 | (0)),cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return ((cljs.core.imul(cljs.core.int_rotate_left(((h1 | (0)) ^ (k1 | (0))),(13)),(5)) + ((3864292196) | (0))) | (0));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = (h1 | (0));
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,((2246822507) | (0)));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,((3266489909) | (0)));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__11574 = (i + (2));
var G__11575 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__11574;
h1 = G__11575;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj11577 = {};
return obj11577;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__11578 = (i + (1));
var G__11579 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__11578;
hash = G__11579;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj11583 = {};
return obj11583;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__11586 = o;
if(G__11586){
var bit__5871__auto__ = (G__11586.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__5871__auto__) || (G__11586.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__11587 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__11587) : Math.floor.call(null,G__11587));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__5185__auto__ = cljs.core.not(a.ns);
if(and__5185__auto__){
return b.ns;
} else {
return and__5185__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__11594 = a.ns;
var G__11595 = b.ns;
return goog.array.defaultCompare(G__11594,G__11595);
})();
if(((0) === nsc)){
var G__11596 = a.name;
var G__11597 = b.name;
return goog.array.defaultCompare(G__11596,G__11597);
} else {
return nsc;
}
}
} else {
var G__11598 = a.name;
var G__11599 = b.name;
return goog.array.defaultCompare(G__11598,G__11599);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__5618__auto__ = self__._hash;
if(!((h__5618__auto__ == null))){
return h__5618__auto__;
} else {
var h__5618__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__5618__auto____$1;

return h__5618__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__11601 = null;
var G__11601__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__11601__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__11601 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__11601__2.call(this,self__,coll);
case 3:
return G__11601__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11601.cljs$core$IFn$_invoke$arity$2 = G__11601__2;
G__11601.cljs$core$IFn$_invoke$arity$3 = G__11601__3;
return G__11601;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args11600){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11600)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__11649 = null;
var G__11649__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__11649__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__11649__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__11649__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__11649__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__11649__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__11649__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__11649__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__11649__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__11649__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__11649__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__11649__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__11649__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__11649__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__11649__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__11649__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__11649__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__11649__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__11649__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__11649__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__11649__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__11649__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11605 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__11606 = a;
var G__11607 = b;
var G__11608 = c;
var G__11609 = d;
var G__11610 = e;
var G__11611 = f;
var G__11612 = g;
var G__11613 = h;
var G__11614 = i;
var G__11615 = j;
var G__11616 = k;
var G__11617 = l;
var G__11618 = m;
var G__11619 = n;
var G__11620 = o;
var G__11621 = p;
var G__11622 = q;
var G__11623 = r;
var G__11624 = s;
var G__11625 = t;
var G__11626 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__11605,G__11606,G__11607,G__11608,G__11609,G__11610,G__11611,G__11612,G__11613,G__11614,G__11615,G__11616,G__11617,G__11618,G__11619,G__11620,G__11621,G__11622,G__11623,G__11624,G__11625,G__11626) : cljs.core.apply.call(null,G__11605,G__11606,G__11607,G__11608,G__11609,G__11610,G__11611,G__11612,G__11613,G__11614,G__11615,G__11616,G__11617,G__11618,G__11619,G__11620,G__11621,G__11622,G__11623,G__11624,G__11625,G__11626));
});
G__11649 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__11649__1.call(this,self__);
case 2:
return G__11649__2.call(this,self__,a);
case 3:
return G__11649__3.call(this,self__,a,b);
case 4:
return G__11649__4.call(this,self__,a,b,c);
case 5:
return G__11649__5.call(this,self__,a,b,c,d);
case 6:
return G__11649__6.call(this,self__,a,b,c,d,e);
case 7:
return G__11649__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__11649__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__11649__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__11649__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__11649__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__11649__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__11649__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__11649__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__11649__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__11649__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__11649__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__11649__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__11649__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__11649__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__11649__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__11649__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11649.cljs$core$IFn$_invoke$arity$1 = G__11649__1;
G__11649.cljs$core$IFn$_invoke$arity$2 = G__11649__2;
G__11649.cljs$core$IFn$_invoke$arity$3 = G__11649__3;
G__11649.cljs$core$IFn$_invoke$arity$4 = G__11649__4;
G__11649.cljs$core$IFn$_invoke$arity$5 = G__11649__5;
G__11649.cljs$core$IFn$_invoke$arity$6 = G__11649__6;
G__11649.cljs$core$IFn$_invoke$arity$7 = G__11649__7;
G__11649.cljs$core$IFn$_invoke$arity$8 = G__11649__8;
G__11649.cljs$core$IFn$_invoke$arity$9 = G__11649__9;
G__11649.cljs$core$IFn$_invoke$arity$10 = G__11649__10;
G__11649.cljs$core$IFn$_invoke$arity$11 = G__11649__11;
G__11649.cljs$core$IFn$_invoke$arity$12 = G__11649__12;
G__11649.cljs$core$IFn$_invoke$arity$13 = G__11649__13;
G__11649.cljs$core$IFn$_invoke$arity$14 = G__11649__14;
G__11649.cljs$core$IFn$_invoke$arity$15 = G__11649__15;
G__11649.cljs$core$IFn$_invoke$arity$16 = G__11649__16;
G__11649.cljs$core$IFn$_invoke$arity$17 = G__11649__17;
G__11649.cljs$core$IFn$_invoke$arity$18 = G__11649__18;
G__11649.cljs$core$IFn$_invoke$arity$19 = G__11649__19;
G__11649.cljs$core$IFn$_invoke$arity$20 = G__11649__20;
G__11649.cljs$core$IFn$_invoke$arity$21 = G__11649__21;
G__11649.cljs$core$IFn$_invoke$arity$22 = G__11649__22;
return G__11649;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args11604){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11604)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__11627 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__11628 = a;
var G__11629 = b;
var G__11630 = c;
var G__11631 = d;
var G__11632 = e;
var G__11633 = f;
var G__11634 = g;
var G__11635 = h;
var G__11636 = i;
var G__11637 = j;
var G__11638 = k;
var G__11639 = l;
var G__11640 = m;
var G__11641 = n;
var G__11642 = o;
var G__11643 = p;
var G__11644 = q;
var G__11645 = r;
var G__11646 = s;
var G__11647 = t;
var G__11648 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__11627,G__11628,G__11629,G__11630,G__11631,G__11632,G__11633,G__11634,G__11635,G__11636,G__11637,G__11638,G__11639,G__11640,G__11641,G__11642,G__11643,G__11644,G__11645,G__11646,G__11647,G__11648) : cljs.core.apply.call(null,G__11627,G__11628,G__11629,G__11630,G__11631,G__11632,G__11633,G__11634,G__11635,G__11636,G__11637,G__11638,G__11639,G__11640,G__11641,G__11642,G__11643,G__11644,G__11645,G__11646,G__11647,G__11648));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__11651 = x;
if(G__11651){
var bit__5878__auto__ = null;
if(cljs.core.truth_((function (){var or__5197__auto__ = bit__5878__auto__;
if(cljs.core.truth_(or__5197__auto__)){
return or__5197__auto__;
} else {
return G__11651.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__11651.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__11651);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__11651);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__11653 = value;
if(G__11653){
var bit__5878__auto__ = (G__11653.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__5878__auto__) || (G__11653.cljs$core$ICloneable$)){
return true;
} else {
if((!G__11653.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__11653);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__11653);
}
});
/**
 * Returns a seq on the collection. If the collection is
 * empty, returns nil.  (seq nil) returns nil. seq also works on
 * Strings.
 */
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__11655 = coll;
if(G__11655){
var bit__5871__auto__ = (G__11655.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__5871__auto__) || (G__11655.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
 * Returns the first item in the collection. Calls seq on its
 * argument. If coll is nil, returns nil.
 */
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__11657 = coll;
if(G__11657){
var bit__5871__auto__ = (G__11657.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__5871__auto__) || (G__11657.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
 * Returns a possibly empty seq of the items after the first. Calls seq on its
 * argument.
 */
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__11659 = coll;
if(G__11659){
var bit__5871__auto__ = (G__11659.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__5871__auto__) || (G__11659.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
 * Returns a seq of the items after the first. Calls seq on its
 * argument.  If there are no more items, returns nil
 */
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__11661 = coll;
if(G__11661){
var bit__5871__auto__ = (G__11661.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__5871__auto__) || (G__11661.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
 * Equality. Returns true if x equals y, false if not. Compares
 * numbers and collections in a type-independent manner.  Clojure's immutable data
 * structures define -equiv (and thus =) as a value, not an identity,
 * comparison.
 * @param {...*} var_args
 */
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__11666__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__11667 = y;
var G__11668 = cljs.core.first(more);
var G__11669 = cljs.core.next(more);
x = G__11667;
y = G__11668;
more = G__11669;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__11666 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11670__i = 0, G__11670__a = new Array(arguments.length -  2);
while (G__11670__i < G__11670__a.length) {G__11670__a[G__11670__i] = arguments[G__11670__i + 2]; ++G__11670__i;}
  more = new cljs.core.IndexedSeq(G__11670__a,0);
} 
return G__11666__delegate.call(this,x,y,more);};
G__11666.cljs$lang$maxFixedArity = 2;
G__11666.cljs$lang$applyTo = (function (arglist__11671){
var x = cljs.core.first(arglist__11671);
arglist__11671 = cljs.core.next(arglist__11671);
var y = cljs.core.first(arglist__11671);
var more = cljs.core.rest(arglist__11671);
return G__11666__delegate(x,y,more);
});
G__11666.cljs$core$IFn$_invoke$arity$variadic = G__11666__delegate;
return G__11666;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__11672 = null;
if (arguments.length > 2) {
var G__11673__i = 0, G__11673__a = new Array(arguments.length -  2);
while (G__11673__i < G__11673__a.length) {G__11673__a[G__11673__i] = arguments[G__11673__i + 2]; ++G__11673__i;}
G__11672 = new cljs.core.IndexedSeq(G__11673__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11672);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__11674 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__11674) : cljs.core.es6_iterator_seq.call(null,G__11674));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
 * Mix final collection hash for ordered or unordered collections.
 * hash-basis is the combined collection hash, count is the number
 * of elements included in the basis. Note this is the hash code
 * consistent with =, different from .hashCode.
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
 * Returns the hash code, consistent with =, for an external ordered
 * collection implementing Iterable.
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__11675 = (n + (1));
var G__11676 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__11677 = cljs.core.next(coll__$1);
n = G__11675;
hash_code = G__11676;
coll__$1 = G__11677;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
 * Returns the hash code, consistent with =, for an external unordered
 * collection implementing Iterable. For maps, the iterator should
 * return map entries whose hash is computed as
 * (hash-ordered-coll [k v]).
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__11678 = (n + (1));
var G__11679 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__11680 = cljs.core.next(coll__$1);
n = G__11678;
hash_code = G__11679;
coll__$1 = G__11680;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__11681 = o;
return goog.getUid(G__11681);
}));
/**
 * Returns a number one greater than num.
 */
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
 * Wraps x in a way such that a reduce will terminate with the value x
 */
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
 * Returns true if x is the result of a call to reduced
 */
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
 * If x is already reduced?, returns it, else returns (reduced x)
 */
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
 * If x is reduced?, returns (deref x), else returns x
 */
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__11683 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11683) : cljs.core.deref.call(null,G__11683));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
 * Accepts any collection which satisfies the ICount and IIndexed protocols and
 * reduces them without incurring seq initialization
 */
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__11690 = val;
var G__11691 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11690,G__11691) : f.call(null,G__11690,G__11691));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11696 = nval;
var G__11697 = (n + (1));
val = G__11696;
n = G__11697;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__11692 = val__$1;
var G__11693 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11692,G__11693) : f.call(null,G__11692,G__11693));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11698 = nval;
var G__11699 = (n + (1));
val__$1 = G__11698;
n = G__11699;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__11694 = val__$1;
var G__11695 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11694,G__11695) : f.call(null,G__11694,G__11695));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11700 = nval;
var G__11701 = (n + (1));
val__$1 = G__11700;
n = G__11701;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__11708 = val;
var G__11709 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11708,G__11709) : f.call(null,G__11708,G__11709));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11714 = nval;
var G__11715 = (n + (1));
val = G__11714;
n = G__11715;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__11710 = val__$1;
var G__11711 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11710,G__11711) : f.call(null,G__11710,G__11711));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11716 = nval;
var G__11717 = (n + (1));
val__$1 = G__11716;
n = G__11717;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__11712 = val__$1;
var G__11713 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11712,G__11713) : f.call(null,G__11712,G__11713));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11718 = nval;
var G__11719 = (n + (1));
val__$1 = G__11718;
n = G__11719;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
 * Returns true if coll implements count in constant time
 */
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__11721 = x;
if(G__11721){
var bit__5878__auto__ = (G__11721.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__5878__auto__) || (G__11721.cljs$core$ICounted$)){
return true;
} else {
if((!G__11721.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__11721);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__11721);
}
});
/**
 * Returns true if coll implements nth in constant time
 */
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__11723 = x;
if(G__11723){
var bit__5878__auto__ = (G__11723.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__5878__auto__) || (G__11723.cljs$core$IIndexed$)){
return true;
} else {
if((!G__11723.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__11723);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__11723);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__11724 = coll__$1;
var G__11725 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__11724,G__11725) : cljs.core.equiv_sequential.call(null,G__11724,G__11725));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__11726 = o;
var G__11727 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__11726,G__11727) : cljs.core.cons.call(null,G__11726,G__11727));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6175__auto__ = this;
return cljs.core.es6_iterator(this__6175__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__11730 = coll__$1;
var G__11731 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__11730,G__11731) : cljs.core.equiv_sequential.call(null,G__11730,G__11731));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__11732 = cljs.core.List.EMPTY;
var G__11733 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__11732,G__11733) : cljs.core.with_meta.call(null,G__11732,G__11733));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__11734 = f;
var G__11735 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__11734,G__11735) : cljs.core.seq_reduce.call(null,G__11734,G__11735));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__11736 = f;
var G__11737 = start;
var G__11738 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__11736,G__11737,G__11738) : cljs.core.seq_reduce.call(null,G__11736,G__11737,G__11738));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__11739 = o;
var G__11740 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__11739,G__11740) : cljs.core.cons.call(null,G__11739,G__11740));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6175__auto__ = this;
return cljs.core.es6_iterator(this__6175__auto__);
}));
/**
 * Same as (first (next x))
 */
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
 * Same as (first (first x))
 */
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
 * Same as (next (first x))
 */
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
 * Same as (first (next x))
 */
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
 * Same as (next (next x))
 */
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
 * Return the last item in coll, in linear time
 */
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__11741 = sn;
s = G__11741;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
 * conj[oin]. Returns a new collection with the xs
 * 'added'. (conj nil item) returns (item).  The 'addition' may
 * happen at different 'places' depending on the concrete type.
 * @param {...*} var_args
 */
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__11746__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__11747 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__11748 = cljs.core.first(xs);
var G__11749 = cljs.core.next(xs);
coll = G__11747;
x = G__11748;
xs = G__11749;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__11746 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__11750__i = 0, G__11750__a = new Array(arguments.length -  2);
while (G__11750__i < G__11750__a.length) {G__11750__a[G__11750__i] = arguments[G__11750__i + 2]; ++G__11750__i;}
  xs = new cljs.core.IndexedSeq(G__11750__a,0);
} 
return G__11746__delegate.call(this,coll,x,xs);};
G__11746.cljs$lang$maxFixedArity = 2;
G__11746.cljs$lang$applyTo = (function (arglist__11751){
var coll = cljs.core.first(arglist__11751);
arglist__11751 = cljs.core.next(arglist__11751);
var x = cljs.core.first(arglist__11751);
var xs = cljs.core.rest(arglist__11751);
return G__11746__delegate(coll,x,xs);
});
G__11746.cljs$core$IFn$_invoke$arity$variadic = G__11746__delegate;
return G__11746;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__11752 = null;
if (arguments.length > 2) {
var G__11753__i = 0, G__11753__a = new Array(arguments.length -  2);
while (G__11753__i < G__11753__a.length) {G__11753__a[G__11753__i] = arguments[G__11753__i + 2]; ++G__11753__i;}
G__11752 = new cljs.core.IndexedSeq(G__11753__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__11752);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
 * Returns an empty collection of the same category as coll, or nil
 */
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__11754 = cljs.core.next(s);
var G__11755 = (acc + (1));
s = G__11754;
acc = G__11755;
continue;
}
break;
}
});
/**
 * Returns the number of items in the collection. (count nil) returns
 * 0.  Also works on strings, arrays, and Maps
 */
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__11757 = coll;
if(G__11757){
var bit__5871__auto__ = (G__11757.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__5871__auto__) || (G__11757.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__11758 = cljs.core.next(coll);
var G__11759 = (n - (1));
coll = G__11758;
n = G__11759;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__11760 = cljs.core.next(coll);
var G__11761 = (n - (1));
var G__11762 = not_found;
coll = G__11760;
n = G__11761;
not_found = G__11762;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
 * Returns the value at the index. get returns nil if index out of
 * bounds, nth throws an exception unless not-found is supplied.  nth
 * also works for strings, arrays, regex Matchers and Lists, and,
 * in O(n) time, for sequences.
 */
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__11767 = coll;
if(G__11767){
var bit__5871__auto__ = (G__11767.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__5871__auto__) || (G__11767.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__11768 = coll;
if(G__11768){
var bit__5878__auto__ = (G__11768.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__5878__auto__) || (G__11768.cljs$core$ISeq$)){
return true;
} else {
if((!G__11768.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__11768);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__11768);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__11769 = coll;
if(G__11769){
var bit__5871__auto__ = (G__11769.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__5871__auto__) || (G__11769.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__11770 = coll;
if(G__11770){
var bit__5878__auto__ = (G__11770.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__5878__auto__) || (G__11770.cljs$core$ISeq$)){
return true;
} else {
if((!G__11770.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__11770);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__11770);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
 * Returns the nth rest of coll, coll when n is 0.
 */
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__11771 = (n__$1 - (1));
var G__11772 = cljs.core.rest(xs);
n__$1 = G__11771;
xs = G__11772;
continue;
} else {
return xs;
}
break;
}
});
/**
 * Returns the value mapped to key, not-found or nil if key not present.
 */
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__11775 = o;
if(G__11775){
var bit__5871__auto__ = (G__11775.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__5871__auto__) || (G__11775.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__11776 = o;
if(G__11776){
var bit__5871__auto__ = (G__11776.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__5871__auto__) || (G__11776.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
 * assoc[iate]. When applied to a map, returns a new map of the
 * same (hashed/sorted) type, that contains the mapping of key(s) to
 * val(s). When applied to a vector, returns a new vector that
 * contains val at index.
 * @param {...*} var_args
 */
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__11780__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__11781 = ret;
var G__11782 = cljs.core.first(kvs);
var G__11783 = cljs.core.second(kvs);
var G__11784 = cljs.core.nnext(kvs);
coll = G__11781;
k = G__11782;
v = G__11783;
kvs = G__11784;
continue;
} else {
return ret;
}
break;
}
};
var G__11780 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__11785__i = 0, G__11785__a = new Array(arguments.length -  3);
while (G__11785__i < G__11785__a.length) {G__11785__a[G__11785__i] = arguments[G__11785__i + 3]; ++G__11785__i;}
  kvs = new cljs.core.IndexedSeq(G__11785__a,0);
} 
return G__11780__delegate.call(this,coll,k,v,kvs);};
G__11780.cljs$lang$maxFixedArity = 3;
G__11780.cljs$lang$applyTo = (function (arglist__11786){
var coll = cljs.core.first(arglist__11786);
arglist__11786 = cljs.core.next(arglist__11786);
var k = cljs.core.first(arglist__11786);
arglist__11786 = cljs.core.next(arglist__11786);
var v = cljs.core.first(arglist__11786);
var kvs = cljs.core.rest(arglist__11786);
return G__11780__delegate(coll,k,v,kvs);
});
G__11780.cljs$core$IFn$_invoke$arity$variadic = G__11780__delegate;
return G__11780;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__11787 = null;
if (arguments.length > 3) {
var G__11788__i = 0, G__11788__a = new Array(arguments.length -  3);
while (G__11788__i < G__11788__a.length) {G__11788__a[G__11788__i] = arguments[G__11788__i + 3]; ++G__11788__i;}
G__11787 = new cljs.core.IndexedSeq(G__11788__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__11787);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
 * dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
 * that does not contain a mapping for key(s).
 * @param {...*} var_args
 */
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__11791__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__11792 = ret;
var G__11793 = cljs.core.first(ks);
var G__11794 = cljs.core.next(ks);
coll = G__11792;
k = G__11793;
ks = G__11794;
continue;
} else {
return ret;
}
}
break;
}
};
var G__11791 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__11795__i = 0, G__11795__a = new Array(arguments.length -  2);
while (G__11795__i < G__11795__a.length) {G__11795__a[G__11795__i] = arguments[G__11795__i + 2]; ++G__11795__i;}
  ks = new cljs.core.IndexedSeq(G__11795__a,0);
} 
return G__11791__delegate.call(this,coll,k,ks);};
G__11791.cljs$lang$maxFixedArity = 2;
G__11791.cljs$lang$applyTo = (function (arglist__11796){
var coll = cljs.core.first(arglist__11796);
arglist__11796 = cljs.core.next(arglist__11796);
var k = cljs.core.first(arglist__11796);
var ks = cljs.core.rest(arglist__11796);
return G__11791__delegate(coll,k,ks);
});
G__11791.cljs$core$IFn$_invoke$arity$variadic = G__11791__delegate;
return G__11791;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__11797 = null;
if (arguments.length > 2) {
var G__11798__i = 0, G__11798__a = new Array(arguments.length -  2);
while (G__11798__i < G__11798__a.length) {G__11798__a[G__11798__i] = arguments[G__11798__i + 2]; ++G__11798__i;}
G__11797 = new cljs.core.IndexedSeq(G__11798__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__11797);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__5197__auto__ = (function (){var G__11803 = f;
return goog.isFunction(G__11803);
})();
if(cljs.core.truth_(or__5197__auto__)){
return or__5197__auto__;
} else {
var G__11804 = f;
if(G__11804){
var bit__5878__auto__ = null;
if(cljs.core.truth_((function (){var or__5197__auto____$1 = bit__5878__auto__;
if(cljs.core.truth_(or__5197__auto____$1)){
return or__5197__auto____$1;
} else {
return G__11804.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__11804.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__11804);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__11804);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__12270 = null;
var G__12270__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__12270__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11806 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__11806) : self__.afn.call(null,G__11806));
});
var G__12270__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11807 = a;
var G__11808 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__11807,G__11808) : self__.afn.call(null,G__11807,G__11808));
});
var G__12270__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11809 = a;
var G__11810 = b;
var G__11811 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__11809,G__11810,G__11811) : self__.afn.call(null,G__11809,G__11810,G__11811));
});
var G__12270__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11812 = a;
var G__11813 = b;
var G__11814 = c;
var G__11815 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__11812,G__11813,G__11814,G__11815) : self__.afn.call(null,G__11812,G__11813,G__11814,G__11815));
});
var G__12270__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11816 = a;
var G__11817 = b;
var G__11818 = c;
var G__11819 = d;
var G__11820 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__11816,G__11817,G__11818,G__11819,G__11820) : self__.afn.call(null,G__11816,G__11817,G__11818,G__11819,G__11820));
});
var G__12270__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11821 = a;
var G__11822 = b;
var G__11823 = c;
var G__11824 = d;
var G__11825 = e;
var G__11826 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__11821,G__11822,G__11823,G__11824,G__11825,G__11826) : self__.afn.call(null,G__11821,G__11822,G__11823,G__11824,G__11825,G__11826));
});
var G__12270__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11827 = a;
var G__11828 = b;
var G__11829 = c;
var G__11830 = d;
var G__11831 = e;
var G__11832 = f;
var G__11833 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__11827,G__11828,G__11829,G__11830,G__11831,G__11832,G__11833) : self__.afn.call(null,G__11827,G__11828,G__11829,G__11830,G__11831,G__11832,G__11833));
});
var G__12270__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11834 = a;
var G__11835 = b;
var G__11836 = c;
var G__11837 = d;
var G__11838 = e;
var G__11839 = f;
var G__11840 = g;
var G__11841 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__11834,G__11835,G__11836,G__11837,G__11838,G__11839,G__11840,G__11841) : self__.afn.call(null,G__11834,G__11835,G__11836,G__11837,G__11838,G__11839,G__11840,G__11841));
});
var G__12270__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11842 = a;
var G__11843 = b;
var G__11844 = c;
var G__11845 = d;
var G__11846 = e;
var G__11847 = f;
var G__11848 = g;
var G__11849 = h;
var G__11850 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__11842,G__11843,G__11844,G__11845,G__11846,G__11847,G__11848,G__11849,G__11850) : self__.afn.call(null,G__11842,G__11843,G__11844,G__11845,G__11846,G__11847,G__11848,G__11849,G__11850));
});
var G__12270__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11851 = a;
var G__11852 = b;
var G__11853 = c;
var G__11854 = d;
var G__11855 = e;
var G__11856 = f;
var G__11857 = g;
var G__11858 = h;
var G__11859 = i;
var G__11860 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__11851,G__11852,G__11853,G__11854,G__11855,G__11856,G__11857,G__11858,G__11859,G__11860) : self__.afn.call(null,G__11851,G__11852,G__11853,G__11854,G__11855,G__11856,G__11857,G__11858,G__11859,G__11860));
});
var G__12270__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11861 = a;
var G__11862 = b;
var G__11863 = c;
var G__11864 = d;
var G__11865 = e;
var G__11866 = f;
var G__11867 = g;
var G__11868 = h;
var G__11869 = i;
var G__11870 = j;
var G__11871 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__11861,G__11862,G__11863,G__11864,G__11865,G__11866,G__11867,G__11868,G__11869,G__11870,G__11871) : self__.afn.call(null,G__11861,G__11862,G__11863,G__11864,G__11865,G__11866,G__11867,G__11868,G__11869,G__11870,G__11871));
});
var G__12270__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11872 = a;
var G__11873 = b;
var G__11874 = c;
var G__11875 = d;
var G__11876 = e;
var G__11877 = f;
var G__11878 = g;
var G__11879 = h;
var G__11880 = i;
var G__11881 = j;
var G__11882 = k;
var G__11883 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__11872,G__11873,G__11874,G__11875,G__11876,G__11877,G__11878,G__11879,G__11880,G__11881,G__11882,G__11883) : self__.afn.call(null,G__11872,G__11873,G__11874,G__11875,G__11876,G__11877,G__11878,G__11879,G__11880,G__11881,G__11882,G__11883));
});
var G__12270__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11884 = a;
var G__11885 = b;
var G__11886 = c;
var G__11887 = d;
var G__11888 = e;
var G__11889 = f;
var G__11890 = g;
var G__11891 = h;
var G__11892 = i;
var G__11893 = j;
var G__11894 = k;
var G__11895 = l;
var G__11896 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__11884,G__11885,G__11886,G__11887,G__11888,G__11889,G__11890,G__11891,G__11892,G__11893,G__11894,G__11895,G__11896) : self__.afn.call(null,G__11884,G__11885,G__11886,G__11887,G__11888,G__11889,G__11890,G__11891,G__11892,G__11893,G__11894,G__11895,G__11896));
});
var G__12270__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11897 = a;
var G__11898 = b;
var G__11899 = c;
var G__11900 = d;
var G__11901 = e;
var G__11902 = f;
var G__11903 = g;
var G__11904 = h;
var G__11905 = i;
var G__11906 = j;
var G__11907 = k;
var G__11908 = l;
var G__11909 = m;
var G__11910 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__11897,G__11898,G__11899,G__11900,G__11901,G__11902,G__11903,G__11904,G__11905,G__11906,G__11907,G__11908,G__11909,G__11910) : self__.afn.call(null,G__11897,G__11898,G__11899,G__11900,G__11901,G__11902,G__11903,G__11904,G__11905,G__11906,G__11907,G__11908,G__11909,G__11910));
});
var G__12270__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11911 = a;
var G__11912 = b;
var G__11913 = c;
var G__11914 = d;
var G__11915 = e;
var G__11916 = f;
var G__11917 = g;
var G__11918 = h;
var G__11919 = i;
var G__11920 = j;
var G__11921 = k;
var G__11922 = l;
var G__11923 = m;
var G__11924 = n;
var G__11925 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__11911,G__11912,G__11913,G__11914,G__11915,G__11916,G__11917,G__11918,G__11919,G__11920,G__11921,G__11922,G__11923,G__11924,G__11925) : self__.afn.call(null,G__11911,G__11912,G__11913,G__11914,G__11915,G__11916,G__11917,G__11918,G__11919,G__11920,G__11921,G__11922,G__11923,G__11924,G__11925));
});
var G__12270__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11926 = a;
var G__11927 = b;
var G__11928 = c;
var G__11929 = d;
var G__11930 = e;
var G__11931 = f;
var G__11932 = g;
var G__11933 = h;
var G__11934 = i;
var G__11935 = j;
var G__11936 = k;
var G__11937 = l;
var G__11938 = m;
var G__11939 = n;
var G__11940 = o;
var G__11941 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__11926,G__11927,G__11928,G__11929,G__11930,G__11931,G__11932,G__11933,G__11934,G__11935,G__11936,G__11937,G__11938,G__11939,G__11940,G__11941) : self__.afn.call(null,G__11926,G__11927,G__11928,G__11929,G__11930,G__11931,G__11932,G__11933,G__11934,G__11935,G__11936,G__11937,G__11938,G__11939,G__11940,G__11941));
});
var G__12270__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11942 = a;
var G__11943 = b;
var G__11944 = c;
var G__11945 = d;
var G__11946 = e;
var G__11947 = f;
var G__11948 = g;
var G__11949 = h;
var G__11950 = i;
var G__11951 = j;
var G__11952 = k;
var G__11953 = l;
var G__11954 = m;
var G__11955 = n;
var G__11956 = o;
var G__11957 = p;
var G__11958 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__11942,G__11943,G__11944,G__11945,G__11946,G__11947,G__11948,G__11949,G__11950,G__11951,G__11952,G__11953,G__11954,G__11955,G__11956,G__11957,G__11958) : self__.afn.call(null,G__11942,G__11943,G__11944,G__11945,G__11946,G__11947,G__11948,G__11949,G__11950,G__11951,G__11952,G__11953,G__11954,G__11955,G__11956,G__11957,G__11958));
});
var G__12270__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11959 = a;
var G__11960 = b;
var G__11961 = c;
var G__11962 = d;
var G__11963 = e;
var G__11964 = f;
var G__11965 = g;
var G__11966 = h;
var G__11967 = i;
var G__11968 = j;
var G__11969 = k;
var G__11970 = l;
var G__11971 = m;
var G__11972 = n;
var G__11973 = o;
var G__11974 = p;
var G__11975 = q;
var G__11976 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__11959,G__11960,G__11961,G__11962,G__11963,G__11964,G__11965,G__11966,G__11967,G__11968,G__11969,G__11970,G__11971,G__11972,G__11973,G__11974,G__11975,G__11976) : self__.afn.call(null,G__11959,G__11960,G__11961,G__11962,G__11963,G__11964,G__11965,G__11966,G__11967,G__11968,G__11969,G__11970,G__11971,G__11972,G__11973,G__11974,G__11975,G__11976));
});
var G__12270__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11977 = a;
var G__11978 = b;
var G__11979 = c;
var G__11980 = d;
var G__11981 = e;
var G__11982 = f;
var G__11983 = g;
var G__11984 = h;
var G__11985 = i;
var G__11986 = j;
var G__11987 = k;
var G__11988 = l;
var G__11989 = m;
var G__11990 = n;
var G__11991 = o;
var G__11992 = p;
var G__11993 = q;
var G__11994 = r;
var G__11995 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__11977,G__11978,G__11979,G__11980,G__11981,G__11982,G__11983,G__11984,G__11985,G__11986,G__11987,G__11988,G__11989,G__11990,G__11991,G__11992,G__11993,G__11994,G__11995) : self__.afn.call(null,G__11977,G__11978,G__11979,G__11980,G__11981,G__11982,G__11983,G__11984,G__11985,G__11986,G__11987,G__11988,G__11989,G__11990,G__11991,G__11992,G__11993,G__11994,G__11995));
});
var G__12270__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11996 = a;
var G__11997 = b;
var G__11998 = c;
var G__11999 = d;
var G__12000 = e;
var G__12001 = f;
var G__12002 = g;
var G__12003 = h;
var G__12004 = i;
var G__12005 = j;
var G__12006 = k;
var G__12007 = l;
var G__12008 = m;
var G__12009 = n;
var G__12010 = o;
var G__12011 = p;
var G__12012 = q;
var G__12013 = r;
var G__12014 = s;
var G__12015 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__11996,G__11997,G__11998,G__11999,G__12000,G__12001,G__12002,G__12003,G__12004,G__12005,G__12006,G__12007,G__12008,G__12009,G__12010,G__12011,G__12012,G__12013,G__12014,G__12015) : self__.afn.call(null,G__11996,G__11997,G__11998,G__11999,G__12000,G__12001,G__12002,G__12003,G__12004,G__12005,G__12006,G__12007,G__12008,G__12009,G__12010,G__12011,G__12012,G__12013,G__12014,G__12015));
});
var G__12270__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12016 = self__.afn;
var G__12017 = a;
var G__12018 = b;
var G__12019 = c;
var G__12020 = d;
var G__12021 = e;
var G__12022 = f;
var G__12023 = g;
var G__12024 = h;
var G__12025 = i;
var G__12026 = j;
var G__12027 = k;
var G__12028 = l;
var G__12029 = m;
var G__12030 = n;
var G__12031 = o;
var G__12032 = p;
var G__12033 = q;
var G__12034 = r;
var G__12035 = s;
var G__12036 = t;
var G__12037 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__12016,G__12017,G__12018,G__12019,G__12020,G__12021,G__12022,G__12023,G__12024,G__12025,G__12026,G__12027,G__12028,G__12029,G__12030,G__12031,G__12032,G__12033,G__12034,G__12035,G__12036,G__12037) : cljs.core.apply.call(null,G__12016,G__12017,G__12018,G__12019,G__12020,G__12021,G__12022,G__12023,G__12024,G__12025,G__12026,G__12027,G__12028,G__12029,G__12030,G__12031,G__12032,G__12033,G__12034,G__12035,G__12036,G__12037));
});
G__12270 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__12270__1.call(this,self__);
case 2:
return G__12270__2.call(this,self__,a);
case 3:
return G__12270__3.call(this,self__,a,b);
case 4:
return G__12270__4.call(this,self__,a,b,c);
case 5:
return G__12270__5.call(this,self__,a,b,c,d);
case 6:
return G__12270__6.call(this,self__,a,b,c,d,e);
case 7:
return G__12270__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__12270__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__12270__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__12270__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__12270__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__12270__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__12270__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__12270__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__12270__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__12270__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__12270__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__12270__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__12270__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__12270__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__12270__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__12270__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12270.cljs$core$IFn$_invoke$arity$1 = G__12270__1;
G__12270.cljs$core$IFn$_invoke$arity$2 = G__12270__2;
G__12270.cljs$core$IFn$_invoke$arity$3 = G__12270__3;
G__12270.cljs$core$IFn$_invoke$arity$4 = G__12270__4;
G__12270.cljs$core$IFn$_invoke$arity$5 = G__12270__5;
G__12270.cljs$core$IFn$_invoke$arity$6 = G__12270__6;
G__12270.cljs$core$IFn$_invoke$arity$7 = G__12270__7;
G__12270.cljs$core$IFn$_invoke$arity$8 = G__12270__8;
G__12270.cljs$core$IFn$_invoke$arity$9 = G__12270__9;
G__12270.cljs$core$IFn$_invoke$arity$10 = G__12270__10;
G__12270.cljs$core$IFn$_invoke$arity$11 = G__12270__11;
G__12270.cljs$core$IFn$_invoke$arity$12 = G__12270__12;
G__12270.cljs$core$IFn$_invoke$arity$13 = G__12270__13;
G__12270.cljs$core$IFn$_invoke$arity$14 = G__12270__14;
G__12270.cljs$core$IFn$_invoke$arity$15 = G__12270__15;
G__12270.cljs$core$IFn$_invoke$arity$16 = G__12270__16;
G__12270.cljs$core$IFn$_invoke$arity$17 = G__12270__17;
G__12270.cljs$core$IFn$_invoke$arity$18 = G__12270__18;
G__12270.cljs$core$IFn$_invoke$arity$19 = G__12270__19;
G__12270.cljs$core$IFn$_invoke$arity$20 = G__12270__20;
G__12270.cljs$core$IFn$_invoke$arity$21 = G__12270__21;
G__12270.cljs$core$IFn$_invoke$arity$22 = G__12270__22;
return G__12270;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args11805){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11805)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__12038 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__12038) : self__.afn.call(null,G__12038));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__12039 = a;
var G__12040 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__12039,G__12040) : self__.afn.call(null,G__12039,G__12040));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__12041 = a;
var G__12042 = b;
var G__12043 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__12041,G__12042,G__12043) : self__.afn.call(null,G__12041,G__12042,G__12043));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__12044 = a;
var G__12045 = b;
var G__12046 = c;
var G__12047 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__12044,G__12045,G__12046,G__12047) : self__.afn.call(null,G__12044,G__12045,G__12046,G__12047));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__12048 = a;
var G__12049 = b;
var G__12050 = c;
var G__12051 = d;
var G__12052 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__12048,G__12049,G__12050,G__12051,G__12052) : self__.afn.call(null,G__12048,G__12049,G__12050,G__12051,G__12052));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__12053 = a;
var G__12054 = b;
var G__12055 = c;
var G__12056 = d;
var G__12057 = e;
var G__12058 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__12053,G__12054,G__12055,G__12056,G__12057,G__12058) : self__.afn.call(null,G__12053,G__12054,G__12055,G__12056,G__12057,G__12058));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__12059 = a;
var G__12060 = b;
var G__12061 = c;
var G__12062 = d;
var G__12063 = e;
var G__12064 = f;
var G__12065 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__12059,G__12060,G__12061,G__12062,G__12063,G__12064,G__12065) : self__.afn.call(null,G__12059,G__12060,G__12061,G__12062,G__12063,G__12064,G__12065));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__12066 = a;
var G__12067 = b;
var G__12068 = c;
var G__12069 = d;
var G__12070 = e;
var G__12071 = f;
var G__12072 = g;
var G__12073 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__12066,G__12067,G__12068,G__12069,G__12070,G__12071,G__12072,G__12073) : self__.afn.call(null,G__12066,G__12067,G__12068,G__12069,G__12070,G__12071,G__12072,G__12073));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__12074 = a;
var G__12075 = b;
var G__12076 = c;
var G__12077 = d;
var G__12078 = e;
var G__12079 = f;
var G__12080 = g;
var G__12081 = h;
var G__12082 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__12074,G__12075,G__12076,G__12077,G__12078,G__12079,G__12080,G__12081,G__12082) : self__.afn.call(null,G__12074,G__12075,G__12076,G__12077,G__12078,G__12079,G__12080,G__12081,G__12082));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__12083 = a;
var G__12084 = b;
var G__12085 = c;
var G__12086 = d;
var G__12087 = e;
var G__12088 = f;
var G__12089 = g;
var G__12090 = h;
var G__12091 = i;
var G__12092 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__12083,G__12084,G__12085,G__12086,G__12087,G__12088,G__12089,G__12090,G__12091,G__12092) : self__.afn.call(null,G__12083,G__12084,G__12085,G__12086,G__12087,G__12088,G__12089,G__12090,G__12091,G__12092));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__12093 = a;
var G__12094 = b;
var G__12095 = c;
var G__12096 = d;
var G__12097 = e;
var G__12098 = f;
var G__12099 = g;
var G__12100 = h;
var G__12101 = i;
var G__12102 = j;
var G__12103 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__12093,G__12094,G__12095,G__12096,G__12097,G__12098,G__12099,G__12100,G__12101,G__12102,G__12103) : self__.afn.call(null,G__12093,G__12094,G__12095,G__12096,G__12097,G__12098,G__12099,G__12100,G__12101,G__12102,G__12103));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__12104 = a;
var G__12105 = b;
var G__12106 = c;
var G__12107 = d;
var G__12108 = e;
var G__12109 = f;
var G__12110 = g;
var G__12111 = h;
var G__12112 = i;
var G__12113 = j;
var G__12114 = k;
var G__12115 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__12104,G__12105,G__12106,G__12107,G__12108,G__12109,G__12110,G__12111,G__12112,G__12113,G__12114,G__12115) : self__.afn.call(null,G__12104,G__12105,G__12106,G__12107,G__12108,G__12109,G__12110,G__12111,G__12112,G__12113,G__12114,G__12115));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__12116 = a;
var G__12117 = b;
var G__12118 = c;
var G__12119 = d;
var G__12120 = e;
var G__12121 = f;
var G__12122 = g;
var G__12123 = h;
var G__12124 = i;
var G__12125 = j;
var G__12126 = k;
var G__12127 = l;
var G__12128 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__12116,G__12117,G__12118,G__12119,G__12120,G__12121,G__12122,G__12123,G__12124,G__12125,G__12126,G__12127,G__12128) : self__.afn.call(null,G__12116,G__12117,G__12118,G__12119,G__12120,G__12121,G__12122,G__12123,G__12124,G__12125,G__12126,G__12127,G__12128));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__12129 = a;
var G__12130 = b;
var G__12131 = c;
var G__12132 = d;
var G__12133 = e;
var G__12134 = f;
var G__12135 = g;
var G__12136 = h;
var G__12137 = i;
var G__12138 = j;
var G__12139 = k;
var G__12140 = l;
var G__12141 = m;
var G__12142 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__12129,G__12130,G__12131,G__12132,G__12133,G__12134,G__12135,G__12136,G__12137,G__12138,G__12139,G__12140,G__12141,G__12142) : self__.afn.call(null,G__12129,G__12130,G__12131,G__12132,G__12133,G__12134,G__12135,G__12136,G__12137,G__12138,G__12139,G__12140,G__12141,G__12142));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__12143 = a;
var G__12144 = b;
var G__12145 = c;
var G__12146 = d;
var G__12147 = e;
var G__12148 = f;
var G__12149 = g;
var G__12150 = h;
var G__12151 = i;
var G__12152 = j;
var G__12153 = k;
var G__12154 = l;
var G__12155 = m;
var G__12156 = n;
var G__12157 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__12143,G__12144,G__12145,G__12146,G__12147,G__12148,G__12149,G__12150,G__12151,G__12152,G__12153,G__12154,G__12155,G__12156,G__12157) : self__.afn.call(null,G__12143,G__12144,G__12145,G__12146,G__12147,G__12148,G__12149,G__12150,G__12151,G__12152,G__12153,G__12154,G__12155,G__12156,G__12157));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__12158 = a;
var G__12159 = b;
var G__12160 = c;
var G__12161 = d;
var G__12162 = e;
var G__12163 = f;
var G__12164 = g;
var G__12165 = h;
var G__12166 = i;
var G__12167 = j;
var G__12168 = k;
var G__12169 = l;
var G__12170 = m;
var G__12171 = n;
var G__12172 = o;
var G__12173 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__12158,G__12159,G__12160,G__12161,G__12162,G__12163,G__12164,G__12165,G__12166,G__12167,G__12168,G__12169,G__12170,G__12171,G__12172,G__12173) : self__.afn.call(null,G__12158,G__12159,G__12160,G__12161,G__12162,G__12163,G__12164,G__12165,G__12166,G__12167,G__12168,G__12169,G__12170,G__12171,G__12172,G__12173));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__12174 = a;
var G__12175 = b;
var G__12176 = c;
var G__12177 = d;
var G__12178 = e;
var G__12179 = f;
var G__12180 = g;
var G__12181 = h;
var G__12182 = i;
var G__12183 = j;
var G__12184 = k;
var G__12185 = l;
var G__12186 = m;
var G__12187 = n;
var G__12188 = o;
var G__12189 = p;
var G__12190 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__12174,G__12175,G__12176,G__12177,G__12178,G__12179,G__12180,G__12181,G__12182,G__12183,G__12184,G__12185,G__12186,G__12187,G__12188,G__12189,G__12190) : self__.afn.call(null,G__12174,G__12175,G__12176,G__12177,G__12178,G__12179,G__12180,G__12181,G__12182,G__12183,G__12184,G__12185,G__12186,G__12187,G__12188,G__12189,G__12190));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__12191 = a;
var G__12192 = b;
var G__12193 = c;
var G__12194 = d;
var G__12195 = e;
var G__12196 = f;
var G__12197 = g;
var G__12198 = h;
var G__12199 = i;
var G__12200 = j;
var G__12201 = k;
var G__12202 = l;
var G__12203 = m;
var G__12204 = n;
var G__12205 = o;
var G__12206 = p;
var G__12207 = q;
var G__12208 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__12191,G__12192,G__12193,G__12194,G__12195,G__12196,G__12197,G__12198,G__12199,G__12200,G__12201,G__12202,G__12203,G__12204,G__12205,G__12206,G__12207,G__12208) : self__.afn.call(null,G__12191,G__12192,G__12193,G__12194,G__12195,G__12196,G__12197,G__12198,G__12199,G__12200,G__12201,G__12202,G__12203,G__12204,G__12205,G__12206,G__12207,G__12208));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__12209 = a;
var G__12210 = b;
var G__12211 = c;
var G__12212 = d;
var G__12213 = e;
var G__12214 = f;
var G__12215 = g;
var G__12216 = h;
var G__12217 = i;
var G__12218 = j;
var G__12219 = k;
var G__12220 = l;
var G__12221 = m;
var G__12222 = n;
var G__12223 = o;
var G__12224 = p;
var G__12225 = q;
var G__12226 = r;
var G__12227 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__12209,G__12210,G__12211,G__12212,G__12213,G__12214,G__12215,G__12216,G__12217,G__12218,G__12219,G__12220,G__12221,G__12222,G__12223,G__12224,G__12225,G__12226,G__12227) : self__.afn.call(null,G__12209,G__12210,G__12211,G__12212,G__12213,G__12214,G__12215,G__12216,G__12217,G__12218,G__12219,G__12220,G__12221,G__12222,G__12223,G__12224,G__12225,G__12226,G__12227));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__12228 = a;
var G__12229 = b;
var G__12230 = c;
var G__12231 = d;
var G__12232 = e;
var G__12233 = f;
var G__12234 = g;
var G__12235 = h;
var G__12236 = i;
var G__12237 = j;
var G__12238 = k;
var G__12239 = l;
var G__12240 = m;
var G__12241 = n;
var G__12242 = o;
var G__12243 = p;
var G__12244 = q;
var G__12245 = r;
var G__12246 = s;
var G__12247 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__12228,G__12229,G__12230,G__12231,G__12232,G__12233,G__12234,G__12235,G__12236,G__12237,G__12238,G__12239,G__12240,G__12241,G__12242,G__12243,G__12244,G__12245,G__12246,G__12247) : self__.afn.call(null,G__12228,G__12229,G__12230,G__12231,G__12232,G__12233,G__12234,G__12235,G__12236,G__12237,G__12238,G__12239,G__12240,G__12241,G__12242,G__12243,G__12244,G__12245,G__12246,G__12247));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__12248 = self__.afn;
var G__12249 = a;
var G__12250 = b;
var G__12251 = c;
var G__12252 = d;
var G__12253 = e;
var G__12254 = f;
var G__12255 = g;
var G__12256 = h;
var G__12257 = i;
var G__12258 = j;
var G__12259 = k;
var G__12260 = l;
var G__12261 = m;
var G__12262 = n;
var G__12263 = o;
var G__12264 = p;
var G__12265 = q;
var G__12266 = r;
var G__12267 = s;
var G__12268 = t;
var G__12269 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__12248,G__12249,G__12250,G__12251,G__12252,G__12253,G__12254,G__12255,G__12256,G__12257,G__12258,G__12259,G__12260,G__12261,G__12262,G__12263,G__12264,G__12265,G__12266,G__12267,G__12268,G__12269) : cljs.core.apply.call(null,G__12248,G__12249,G__12250,G__12251,G__12252,G__12253,G__12254,G__12255,G__12256,G__12257,G__12258,G__12259,G__12260,G__12261,G__12262,G__12263,G__12264,G__12265,G__12266,G__12267,G__12268,G__12269));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
 * Returns an object of the same type and value as obj, with
 * map m as its metadata.
 */
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__12274 = o;
if(G__12274){
var bit__5878__auto__ = (G__12274.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__5878__auto__) || (G__12274.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__12274.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__12274);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__12274);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
 * Returns the metadata of obj, returns nil if there is no metadata.
 */
cljs.core.meta = (function meta(o){
if((function (){var and__5185__auto__ = !((o == null));
if(and__5185__auto__){
var G__12278 = o;
if(G__12278){
var bit__5878__auto__ = (G__12278.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__5878__auto__) || (G__12278.cljs$core$IMeta$)){
return true;
} else {
if((!G__12278.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__12278);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__12278);
}
} else {
return and__5185__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
 * For a list or queue, same as first, for a vector, same as, but much
 * more efficient than, last. If the collection is empty, returns nil.
 */
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
 * For a list or queue, returns a new list/queue without the first
 * item, for a vector, returns a new vector without the last item.
 * Note - not the same as next/butlast.
 */
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
 * disj[oin]. Returns a new set of the same (hashed/sorted) type, that
 * does not contain key(s).
 * @param {...*} var_args
 */
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__12281__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__12282 = ret;
var G__12283 = cljs.core.first(ks);
var G__12284 = cljs.core.next(ks);
coll = G__12282;
k = G__12283;
ks = G__12284;
continue;
} else {
return ret;
}
}
break;
}
};
var G__12281 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__12285__i = 0, G__12285__a = new Array(arguments.length -  2);
while (G__12285__i < G__12285__a.length) {G__12285__a[G__12285__i] = arguments[G__12285__i + 2]; ++G__12285__i;}
  ks = new cljs.core.IndexedSeq(G__12285__a,0);
} 
return G__12281__delegate.call(this,coll,k,ks);};
G__12281.cljs$lang$maxFixedArity = 2;
G__12281.cljs$lang$applyTo = (function (arglist__12286){
var coll = cljs.core.first(arglist__12286);
arglist__12286 = cljs.core.next(arglist__12286);
var k = cljs.core.first(arglist__12286);
var ks = cljs.core.rest(arglist__12286);
return G__12281__delegate(coll,k,ks);
});
G__12281.cljs$core$IFn$_invoke$arity$variadic = G__12281__delegate;
return G__12281;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__12287 = null;
if (arguments.length > 2) {
var G__12288__i = 0, G__12288__a = new Array(arguments.length -  2);
while (G__12288__i < G__12288__a.length) {G__12288__a[G__12288__i] = arguments[G__12288__i + 2]; ++G__12288__i;}
G__12287 = new cljs.core.IndexedSeq(G__12288__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__12287);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
 * Returns true if coll has no items - same as (not (seq coll)).
 * Please use the idiom (seq x) rather than (not (empty? x))
 */
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
 * Returns true if x satisfies ICollection
 */
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__12290 = x;
if(G__12290){
var bit__5878__auto__ = (G__12290.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__5878__auto__) || (G__12290.cljs$core$ICollection$)){
return true;
} else {
if((!G__12290.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__12290);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__12290);
}
}
});
/**
 * Returns true if x satisfies ISet
 */
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__12292 = x;
if(G__12292){
var bit__5878__auto__ = (G__12292.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__5878__auto__) || (G__12292.cljs$core$ISet$)){
return true;
} else {
if((!G__12292.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__12292);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__12292);
}
}
});
/**
 * Returns true if coll implements Associative
 */
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__12294 = x;
if(G__12294){
var bit__5878__auto__ = (G__12294.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__5878__auto__) || (G__12294.cljs$core$IAssociative$)){
return true;
} else {
if((!G__12294.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__12294);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__12294);
}
});
/**
 * Returns true if coll satisfies ISequential
 */
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__12296 = x;
if(G__12296){
var bit__5878__auto__ = (G__12296.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__5878__auto__) || (G__12296.cljs$core$ISequential$)){
return true;
} else {
if((!G__12296.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__12296);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__12296);
}
});
/**
 * Returns true if coll satisfies ISorted
 */
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__12298 = x;
if(G__12298){
var bit__5878__auto__ = (G__12298.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__5878__auto__) || (G__12298.cljs$core$ISorted$)){
return true;
} else {
if((!G__12298.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__12298);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__12298);
}
});
/**
 * Returns true if coll satisfies IReduce
 */
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__12300 = x;
if(G__12300){
var bit__5878__auto__ = (G__12300.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__5878__auto__) || (G__12300.cljs$core$IReduce$)){
return true;
} else {
if((!G__12300.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__12300);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__12300);
}
});
/**
 * Return true if x satisfies IMap
 */
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__12302 = x;
if(G__12302){
var bit__5878__auto__ = (G__12302.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__5878__auto__) || (G__12302.cljs$core$IMap$)){
return true;
} else {
if((!G__12302.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__12302);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__12302);
}
}
});
/**
 * Return true if x satisfies IVector
 */
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__12304 = x;
if(G__12304){
var bit__5878__auto__ = (G__12304.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__5878__auto__) || (G__12304.cljs$core$IVector$)){
return true;
} else {
if((!G__12304.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__12304);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__12304);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__12306 = x;
if(G__12306){
var bit__5871__auto__ = (G__12306.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__5871__auto__) || (G__12306.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
 * @param {...*} var_args
 */
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj12312 = {};
return obj12312;
});
var js_obj__1 = (function() { 
var G__12315__delegate = function (keyvals){
var G__12313 = goog.object.create;
var G__12314 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__12313,G__12314) : cljs.core.apply.call(null,G__12313,G__12314));
};
var G__12315 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__12316__i = 0, G__12316__a = new Array(arguments.length -  0);
while (G__12316__i < G__12316__a.length) {G__12316__a[G__12316__i] = arguments[G__12316__i + 0]; ++G__12316__i;}
  keyvals = new cljs.core.IndexedSeq(G__12316__a,0);
} 
return G__12315__delegate.call(this,keyvals);};
G__12315.cljs$lang$maxFixedArity = 0;
G__12315.cljs$lang$applyTo = (function (arglist__12317){
var keyvals = cljs.core.seq(arglist__12317);
return G__12315__delegate(keyvals);
});
G__12315.cljs$core$IFn$_invoke$arity$variadic = G__12315__delegate;
return G__12315;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__12318 = null;
if (arguments.length > 0) {
var G__12319__i = 0, G__12319__a = new Array(arguments.length -  0);
while (G__12319__i < G__12319__a.length) {G__12319__a[G__12319__i] = arguments[G__12319__i + 0]; ++G__12319__i;}
G__12318 = new cljs.core.IndexedSeq(G__12319__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__12318);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__12322_12324 = obj;
var G__12323_12325 = ((function (G__12322_12324,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__12322_12324,keys))
;
goog.object.forEach(G__12322_12324,G__12323_12325);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__12326 = (i__$1 + (1));
var G__12327 = (j__$1 + (1));
var G__12328 = (len__$1 - (1));
i__$1 = G__12326;
j__$1 = G__12327;
len__$1 = G__12328;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__12329 = (i__$1 - (1));
var G__12330 = (j__$1 - (1));
var G__12331 = (len__$1 - (1));
i__$1 = G__12329;
j__$1 = G__12330;
len__$1 = G__12331;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj12333 = {};
return obj12333;
})();
/**
 * Returns true if x is the value false, false otherwise.
 */
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
 * Returns true if x is the value true, false otherwise.
 */
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
 * Return true if s satisfies ISeq
 */
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__12335 = s;
if(G__12335){
var bit__5878__auto__ = (G__12335.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__5878__auto__) || (G__12335.cljs$core$ISeq$)){
return true;
} else {
if((!G__12335.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__12335);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__12335);
}
}
});
/**
 * Return true if s satisfies ISeqable
 */
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__12337 = s;
if(G__12337){
var bit__5878__auto__ = (G__12337.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__5878__auto__) || (G__12337.cljs$core$ISeqable$)){
return true;
} else {
if((!G__12337.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__12337);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__12337);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__5197__auto__ = cljs.core.fn_QMARK_(f);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var G__12341 = f;
if(G__12341){
var bit__5878__auto__ = (G__12341.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__5878__auto__) || (G__12341.cljs$core$IFn$)){
return true;
} else {
if((!G__12341.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__12341);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__12341);
}
}
});
/**
 * Returns true if n is an integer.
 */
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__12354 = n;
return isNaN(G__12354);
})())) && (!((n === Infinity))) && (((function (){var G__12355 = n;
return parseFloat(G__12355);
})() === (function (){var G__12356 = n;
var G__12357 = (10);
return parseInt(G__12356,G__12357);
})()));
});
/**
 * Returns true if key is present in the given collection, otherwise
 * returns false.  Note that for numerically indexed collections like
 * vectors and arrays, this tests if the numeric key is within the
 * range of indexes. 'contains?' operates constant or logarithmic time;
 * it will not perform a linear search for a value.  See also 'some'.
 */
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
 * Returns the map entry for key, or nil if key not present.
 */
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
 * Returns true if no two of the arguments are =
 * @param {...*} var_args
 */
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__12358__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__12359 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__12360 = etc;
s = G__12359;
xs = G__12360;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__12358 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12361__i = 0, G__12361__a = new Array(arguments.length -  2);
while (G__12361__i < G__12361__a.length) {G__12361__a[G__12361__i] = arguments[G__12361__i + 2]; ++G__12361__i;}
  more = new cljs.core.IndexedSeq(G__12361__a,0);
} 
return G__12358__delegate.call(this,x,y,more);};
G__12358.cljs$lang$maxFixedArity = 2;
G__12358.cljs$lang$applyTo = (function (arglist__12362){
var x = cljs.core.first(arglist__12362);
arglist__12362 = cljs.core.next(arglist__12362);
var y = cljs.core.first(arglist__12362);
var more = cljs.core.rest(arglist__12362);
return G__12358__delegate(x,y,more);
});
G__12358.cljs$core$IFn$_invoke$arity$variadic = G__12358__delegate;
return G__12358;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__12363 = null;
if (arguments.length > 2) {
var G__12364__i = 0, G__12364__a = new Array(arguments.length -  2);
while (G__12364__i < G__12364__a.length) {G__12364__a[G__12364__i] = arguments[G__12364__i + 2]; ++G__12364__i;}
G__12363 = new cljs.core.IndexedSeq(G__12364__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12363);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
 * Comparator. Returns a negative number, zero, or a positive number
 * when x is logically 'less than', 'equal to', or 'greater than'
 * y. Uses IComparable if available and google.array.defaultCompare for objects
 * of the same type and special-cases nil to be less than any other object.
 */
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__12368 = x;
if(G__12368){
var bit__5871__auto__ = (G__12368.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__5871__auto__) || (G__12368.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__12369 = x;
var G__12370 = y;
return goog.array.defaultCompare(G__12369,G__12370);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
 * Compare indexed collection.
 */
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__12375 = xs;
var G__12376 = ys;
var G__12377 = len;
var G__12378 = (n + (1));
xs = G__12375;
ys = G__12376;
len = G__12377;
n = G__12378;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
 * Given a fn that might be boolean valued or a comparator,
 * return a fn that is a comparator.
 */
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__12383 = x;
var G__12384 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12383,G__12384) : f.call(null,G__12383,G__12384));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__12385 = y;
var G__12386 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12385,G__12386) : f.call(null,G__12385,G__12386));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
 * Returns a sorted sequence of the items in coll. Comp can be
 * boolean-valued comparison function, or a -/0/+ valued comparator.
 * Comp defaults to compare.
 */
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__12392 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__12392) : cljs.core.to_array.call(null,G__12392));
})();
var G__12393_12395 = a;
var G__12394_12396 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__12393_12395,G__12394_12396);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
 * Returns a sorted sequence of the items in coll, where the sort
 * order is determined by comparing (keyfn item).  Comp can be
 * boolean-valued comparison funcion, or a -/0/+ valued comparator.
 * Comp defaults to compare.
 */
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__12402 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__12402) : keyfn.call(null,G__12402));
})(),(function (){var G__12403 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__12403) : keyfn.call(null,G__12403));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4404__auto__ = cljs.core.seq(coll);
if(temp__4404__auto__){
var s = temp__4404__auto__;
var G__12409 = f;
var G__12410 = cljs.core.first(s);
var G__12411 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__12409,G__12410,G__12411) : cljs.core.reduce.call(null,G__12409,G__12410,G__12411));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__12412 = val__$1;
var G__12413 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12412,G__12413) : f.call(null,G__12412,G__12413));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__12414 = nval;
var G__12415 = cljs.core.next(coll__$1);
val__$1 = G__12414;
coll__$1 = G__12415;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
 * Return a random permutation of coll
 */
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__12419 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__12419) : cljs.core.to_array.call(null,G__12419));
})();
var G__12420_12422 = a;
goog.array.shuffle(G__12420_12422);

var G__12421 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__12421) : cljs.core.vec.call(null,G__12421));
});
/**
 * f should be a function of 2 arguments. If val is not supplied,
 * returns the result of applying f to the first 2 items in coll, then
 * applying f to that result and the 3rd item, etc. If coll contains no
 * items, f must accept no arguments as well, and reduce returns the
 * result of calling f with no arguments.  If coll has only 1 item, it
 * is returned and f is not called.  If val is supplied, returns the
 * result of applying f to val and the first item in coll, then
 * applying f to that result and the 2nd item, etc. If coll contains no
 * items, returns val and f is not called.
 */
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__12425 = coll;
if(G__12425){
var bit__5871__auto__ = (G__12425.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__5871__auto__) || (G__12425.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__12426 = coll;
if(G__12426){
var bit__5871__auto__ = (G__12426.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__5871__auto__) || (G__12426.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
 * Reduces an associative collection. f should be a function of 3
 * arguments. Returns the result of applying f to init, the first key
 * and the first value in coll, then applying f to that result and the
 * 2nd key and value, etc. If coll contains no entries, returns init
 * and f is not called. Note that reduce-kv is supported on vectors,
 * where the keys will be the ordinals.
 */
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__12435 = null;
var G__12435__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__12435__1 = (function (x){
var G__12432 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__12432) : cf.call(null,G__12432));
});
var G__12435__2 = (function (x,y){
var G__12433 = x;
var G__12434 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12433,G__12434) : f.call(null,G__12433,G__12434));
});
G__12435 = function(x,y){
switch(arguments.length){
case 0:
return G__12435__0.call(this);
case 1:
return G__12435__1.call(this,x);
case 2:
return G__12435__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12435.cljs$core$IFn$_invoke$arity$0 = G__12435__0;
G__12435.cljs$core$IFn$_invoke$arity$1 = G__12435__1;
G__12435.cljs$core$IFn$_invoke$arity$2 = G__12435__2;
return G__12435;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
 * reduce with a transformation of f (xf). If init is not
 * supplied, (f) will be called to produce it. f should be a reducing
 * step function that accepts both 1 and 2 arguments, if it accepts
 * only 2 you can add the arity-1 with 'completing'. Returns the result
 * of applying (the transformed) xf to init and the first item in coll,
 * then applying xf to that result and the 2nd item, etc. If coll
 * contains no items, returns init and f is not called. Note that
 * certain transforms may inject or skip items.
 */
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__12442 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__12442) : xform.call(null,G__12442));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__12443 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__12443) : f__$1.call(null,G__12443));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__12444__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__12444 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12445__i = 0, G__12445__a = new Array(arguments.length -  2);
while (G__12445__i < G__12445__a.length) {G__12445__a[G__12445__i] = arguments[G__12445__i + 2]; ++G__12445__i;}
  more = new cljs.core.IndexedSeq(G__12445__a,0);
} 
return G__12444__delegate.call(this,x,y,more);};
G__12444.cljs$lang$maxFixedArity = 2;
G__12444.cljs$lang$applyTo = (function (arglist__12446){
var x = cljs.core.first(arglist__12446);
arglist__12446 = cljs.core.next(arglist__12446);
var y = cljs.core.first(arglist__12446);
var more = cljs.core.rest(arglist__12446);
return G__12444__delegate(x,y,more);
});
G__12444.cljs$core$IFn$_invoke$arity$variadic = G__12444__delegate;
return G__12444;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__12447 = null;
if (arguments.length > 2) {
var G__12448__i = 0, G__12448__a = new Array(arguments.length -  2);
while (G__12448__i < G__12448__a.length) {G__12448__a[G__12448__i] = arguments[G__12448__i + 2]; ++G__12448__i;}
G__12447 = new cljs.core.IndexedSeq(G__12448__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12447);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__12449__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__12449 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12450__i = 0, G__12450__a = new Array(arguments.length -  2);
while (G__12450__i < G__12450__a.length) {G__12450__a[G__12450__i] = arguments[G__12450__i + 2]; ++G__12450__i;}
  more = new cljs.core.IndexedSeq(G__12450__a,0);
} 
return G__12449__delegate.call(this,x,y,more);};
G__12449.cljs$lang$maxFixedArity = 2;
G__12449.cljs$lang$applyTo = (function (arglist__12451){
var x = cljs.core.first(arglist__12451);
arglist__12451 = cljs.core.next(arglist__12451);
var y = cljs.core.first(arglist__12451);
var more = cljs.core.rest(arglist__12451);
return G__12449__delegate(x,y,more);
});
G__12449.cljs$core$IFn$_invoke$arity$variadic = G__12449__delegate;
return G__12449;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__12452 = null;
if (arguments.length > 2) {
var G__12453__i = 0, G__12453__a = new Array(arguments.length -  2);
while (G__12453__i < G__12453__a.length) {G__12453__a[G__12453__i] = arguments[G__12453__i + 2]; ++G__12453__i;}
G__12452 = new cljs.core.IndexedSeq(G__12453__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12452);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__12454__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__12454 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12455__i = 0, G__12455__a = new Array(arguments.length -  2);
while (G__12455__i < G__12455__a.length) {G__12455__a[G__12455__i] = arguments[G__12455__i + 2]; ++G__12455__i;}
  more = new cljs.core.IndexedSeq(G__12455__a,0);
} 
return G__12454__delegate.call(this,x,y,more);};
G__12454.cljs$lang$maxFixedArity = 2;
G__12454.cljs$lang$applyTo = (function (arglist__12456){
var x = cljs.core.first(arglist__12456);
arglist__12456 = cljs.core.next(arglist__12456);
var y = cljs.core.first(arglist__12456);
var more = cljs.core.rest(arglist__12456);
return G__12454__delegate(x,y,more);
});
G__12454.cljs$core$IFn$_invoke$arity$variadic = G__12454__delegate;
return G__12454;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__12457 = null;
if (arguments.length > 2) {
var G__12458__i = 0, G__12458__a = new Array(arguments.length -  2);
while (G__12458__i < G__12458__a.length) {G__12458__a[G__12458__i] = arguments[G__12458__i + 2]; ++G__12458__i;}
G__12457 = new cljs.core.IndexedSeq(G__12458__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12457);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
 * If no denominators are supplied, returns 1/numerator,
 * else returns numerator divided by all of the denominators.
 * @param {...*} var_args
 */
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__12463__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__12463 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12464__i = 0, G__12464__a = new Array(arguments.length -  2);
while (G__12464__i < G__12464__a.length) {G__12464__a[G__12464__i] = arguments[G__12464__i + 2]; ++G__12464__i;}
  more = new cljs.core.IndexedSeq(G__12464__a,0);
} 
return G__12463__delegate.call(this,x,y,more);};
G__12463.cljs$lang$maxFixedArity = 2;
G__12463.cljs$lang$applyTo = (function (arglist__12465){
var x = cljs.core.first(arglist__12465);
arglist__12465 = cljs.core.next(arglist__12465);
var y = cljs.core.first(arglist__12465);
var more = cljs.core.rest(arglist__12465);
return G__12463__delegate(x,y,more);
});
G__12463.cljs$core$IFn$_invoke$arity$variadic = G__12463__delegate;
return G__12463;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__12466 = null;
if (arguments.length > 2) {
var G__12467__i = 0, G__12467__a = new Array(arguments.length -  2);
while (G__12467__i < G__12467__a.length) {G__12467__a[G__12467__i] = arguments[G__12467__i + 2]; ++G__12467__i;}
G__12466 = new cljs.core.IndexedSeq(G__12467__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12466);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
 * Returns non-nil if nums are in monotonically increasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__12468__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__12469 = y;
var G__12470 = cljs.core.first(more);
var G__12471 = cljs.core.next(more);
x = G__12469;
y = G__12470;
more = G__12471;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__12468 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12472__i = 0, G__12472__a = new Array(arguments.length -  2);
while (G__12472__i < G__12472__a.length) {G__12472__a[G__12472__i] = arguments[G__12472__i + 2]; ++G__12472__i;}
  more = new cljs.core.IndexedSeq(G__12472__a,0);
} 
return G__12468__delegate.call(this,x,y,more);};
G__12468.cljs$lang$maxFixedArity = 2;
G__12468.cljs$lang$applyTo = (function (arglist__12473){
var x = cljs.core.first(arglist__12473);
arglist__12473 = cljs.core.next(arglist__12473);
var y = cljs.core.first(arglist__12473);
var more = cljs.core.rest(arglist__12473);
return G__12468__delegate(x,y,more);
});
G__12468.cljs$core$IFn$_invoke$arity$variadic = G__12468__delegate;
return G__12468;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__12474 = null;
if (arguments.length > 2) {
var G__12475__i = 0, G__12475__a = new Array(arguments.length -  2);
while (G__12475__i < G__12475__a.length) {G__12475__a[G__12475__i] = arguments[G__12475__i + 2]; ++G__12475__i;}
G__12474 = new cljs.core.IndexedSeq(G__12475__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12474);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
 * Returns non-nil if nums are in monotonically non-decreasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__12476__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__12477 = y;
var G__12478 = cljs.core.first(more);
var G__12479 = cljs.core.next(more);
x = G__12477;
y = G__12478;
more = G__12479;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__12476 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12480__i = 0, G__12480__a = new Array(arguments.length -  2);
while (G__12480__i < G__12480__a.length) {G__12480__a[G__12480__i] = arguments[G__12480__i + 2]; ++G__12480__i;}
  more = new cljs.core.IndexedSeq(G__12480__a,0);
} 
return G__12476__delegate.call(this,x,y,more);};
G__12476.cljs$lang$maxFixedArity = 2;
G__12476.cljs$lang$applyTo = (function (arglist__12481){
var x = cljs.core.first(arglist__12481);
arglist__12481 = cljs.core.next(arglist__12481);
var y = cljs.core.first(arglist__12481);
var more = cljs.core.rest(arglist__12481);
return G__12476__delegate(x,y,more);
});
G__12476.cljs$core$IFn$_invoke$arity$variadic = G__12476__delegate;
return G__12476;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__12482 = null;
if (arguments.length > 2) {
var G__12483__i = 0, G__12483__a = new Array(arguments.length -  2);
while (G__12483__i < G__12483__a.length) {G__12483__a[G__12483__i] = arguments[G__12483__i + 2]; ++G__12483__i;}
G__12482 = new cljs.core.IndexedSeq(G__12483__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12482);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
 * Returns non-nil if nums are in monotonically decreasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__12484__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__12485 = y;
var G__12486 = cljs.core.first(more);
var G__12487 = cljs.core.next(more);
x = G__12485;
y = G__12486;
more = G__12487;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__12484 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12488__i = 0, G__12488__a = new Array(arguments.length -  2);
while (G__12488__i < G__12488__a.length) {G__12488__a[G__12488__i] = arguments[G__12488__i + 2]; ++G__12488__i;}
  more = new cljs.core.IndexedSeq(G__12488__a,0);
} 
return G__12484__delegate.call(this,x,y,more);};
G__12484.cljs$lang$maxFixedArity = 2;
G__12484.cljs$lang$applyTo = (function (arglist__12489){
var x = cljs.core.first(arglist__12489);
arglist__12489 = cljs.core.next(arglist__12489);
var y = cljs.core.first(arglist__12489);
var more = cljs.core.rest(arglist__12489);
return G__12484__delegate(x,y,more);
});
G__12484.cljs$core$IFn$_invoke$arity$variadic = G__12484__delegate;
return G__12484;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__12490 = null;
if (arguments.length > 2) {
var G__12491__i = 0, G__12491__a = new Array(arguments.length -  2);
while (G__12491__i < G__12491__a.length) {G__12491__a[G__12491__i] = arguments[G__12491__i + 2]; ++G__12491__i;}
G__12490 = new cljs.core.IndexedSeq(G__12491__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12490);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
 * Returns non-nil if nums are in monotonically non-increasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__12492__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__12493 = y;
var G__12494 = cljs.core.first(more);
var G__12495 = cljs.core.next(more);
x = G__12493;
y = G__12494;
more = G__12495;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__12492 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12496__i = 0, G__12496__a = new Array(arguments.length -  2);
while (G__12496__i < G__12496__a.length) {G__12496__a[G__12496__i] = arguments[G__12496__i + 2]; ++G__12496__i;}
  more = new cljs.core.IndexedSeq(G__12496__a,0);
} 
return G__12492__delegate.call(this,x,y,more);};
G__12492.cljs$lang$maxFixedArity = 2;
G__12492.cljs$lang$applyTo = (function (arglist__12497){
var x = cljs.core.first(arglist__12497);
arglist__12497 = cljs.core.next(arglist__12497);
var y = cljs.core.first(arglist__12497);
var more = cljs.core.rest(arglist__12497);
return G__12492__delegate(x,y,more);
});
G__12492.cljs$core$IFn$_invoke$arity$variadic = G__12492__delegate;
return G__12492;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__12498 = null;
if (arguments.length > 2) {
var G__12499__i = 0, G__12499__a = new Array(arguments.length -  2);
while (G__12499__i < G__12499__a.length) {G__12499__a[G__12499__i] = arguments[G__12499__i + 2]; ++G__12499__i;}
G__12498 = new cljs.core.IndexedSeq(G__12499__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12498);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
 * Returns a number one less than num.
 */
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
 * Returns the greatest of the nums.
 * @param {...*} var_args
 */
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__5514__auto__ = x;
var y__5515__auto__ = y;
return ((x__5514__auto__ > y__5515__auto__) ? x__5514__auto__ : y__5515__auto__);
});
var max__3 = (function() { 
var G__12500__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__5514__auto__ = x;
var y__5515__auto__ = y;
return ((x__5514__auto__ > y__5515__auto__) ? x__5514__auto__ : y__5515__auto__);
})(),more);
};
var G__12500 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12501__i = 0, G__12501__a = new Array(arguments.length -  2);
while (G__12501__i < G__12501__a.length) {G__12501__a[G__12501__i] = arguments[G__12501__i + 2]; ++G__12501__i;}
  more = new cljs.core.IndexedSeq(G__12501__a,0);
} 
return G__12500__delegate.call(this,x,y,more);};
G__12500.cljs$lang$maxFixedArity = 2;
G__12500.cljs$lang$applyTo = (function (arglist__12502){
var x = cljs.core.first(arglist__12502);
arglist__12502 = cljs.core.next(arglist__12502);
var y = cljs.core.first(arglist__12502);
var more = cljs.core.rest(arglist__12502);
return G__12500__delegate(x,y,more);
});
G__12500.cljs$core$IFn$_invoke$arity$variadic = G__12500__delegate;
return G__12500;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__12503 = null;
if (arguments.length > 2) {
var G__12504__i = 0, G__12504__a = new Array(arguments.length -  2);
while (G__12504__i < G__12504__a.length) {G__12504__a[G__12504__i] = arguments[G__12504__i + 2]; ++G__12504__i;}
G__12503 = new cljs.core.IndexedSeq(G__12504__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12503);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
 * Returns the least of the nums.
 * @param {...*} var_args
 */
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__5521__auto__ = x;
var y__5522__auto__ = y;
return ((x__5521__auto__ < y__5522__auto__) ? x__5521__auto__ : y__5522__auto__);
});
var min__3 = (function() { 
var G__12505__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__5521__auto__ = x;
var y__5522__auto__ = y;
return ((x__5521__auto__ < y__5522__auto__) ? x__5521__auto__ : y__5522__auto__);
})(),more);
};
var G__12505 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12506__i = 0, G__12506__a = new Array(arguments.length -  2);
while (G__12506__i < G__12506__a.length) {G__12506__a[G__12506__i] = arguments[G__12506__i + 2]; ++G__12506__i;}
  more = new cljs.core.IndexedSeq(G__12506__a,0);
} 
return G__12505__delegate.call(this,x,y,more);};
G__12505.cljs$lang$maxFixedArity = 2;
G__12505.cljs$lang$applyTo = (function (arglist__12507){
var x = cljs.core.first(arglist__12507);
arglist__12507 = cljs.core.next(arglist__12507);
var y = cljs.core.first(arglist__12507);
var more = cljs.core.rest(arglist__12507);
return G__12505__delegate(x,y,more);
});
G__12505.cljs$core$IFn$_invoke$arity$variadic = G__12505__delegate;
return G__12505;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__12508 = null;
if (arguments.length > 2) {
var G__12509__i = 0, G__12509__a = new Array(arguments.length -  2);
while (G__12509__i < G__12509__a.length) {G__12509__a[G__12509__i] = arguments[G__12509__i + 2]; ++G__12509__i;}
G__12508 = new cljs.core.IndexedSeq(G__12509__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12508);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
 * Coerce to char
 */
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__12510__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__12510 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12511__i = 0, G__12511__a = new Array(arguments.length -  2);
while (G__12511__i < G__12511__a.length) {G__12511__a[G__12511__i] = arguments[G__12511__i + 2]; ++G__12511__i;}
  more = new cljs.core.IndexedSeq(G__12511__a,0);
} 
return G__12510__delegate.call(this,x,y,more);};
G__12510.cljs$lang$maxFixedArity = 2;
G__12510.cljs$lang$applyTo = (function (arglist__12512){
var x = cljs.core.first(arglist__12512);
arglist__12512 = cljs.core.next(arglist__12512);
var y = cljs.core.first(arglist__12512);
var more = cljs.core.rest(arglist__12512);
return G__12510__delegate(x,y,more);
});
G__12510.cljs$core$IFn$_invoke$arity$variadic = G__12510__delegate;
return G__12510;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__12513 = null;
if (arguments.length > 2) {
var G__12514__i = 0, G__12514__a = new Array(arguments.length -  2);
while (G__12514__i < G__12514__a.length) {G__12514__a[G__12514__i] = arguments[G__12514__i + 2]; ++G__12514__i;}
G__12513 = new cljs.core.IndexedSeq(G__12514__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12513);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__12515__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__12515 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12516__i = 0, G__12516__a = new Array(arguments.length -  2);
while (G__12516__i < G__12516__a.length) {G__12516__a[G__12516__i] = arguments[G__12516__i + 2]; ++G__12516__i;}
  more = new cljs.core.IndexedSeq(G__12516__a,0);
} 
return G__12515__delegate.call(this,x,y,more);};
G__12515.cljs$lang$maxFixedArity = 2;
G__12515.cljs$lang$applyTo = (function (arglist__12517){
var x = cljs.core.first(arglist__12517);
arglist__12517 = cljs.core.next(arglist__12517);
var y = cljs.core.first(arglist__12517);
var more = cljs.core.rest(arglist__12517);
return G__12515__delegate(x,y,more);
});
G__12515.cljs$core$IFn$_invoke$arity$variadic = G__12515__delegate;
return G__12515;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__12518 = null;
if (arguments.length > 2) {
var G__12519__i = 0, G__12519__a = new Array(arguments.length -  2);
while (G__12519__i < G__12519__a.length) {G__12519__a[G__12519__i] = arguments[G__12519__i + 2]; ++G__12519__i;}
G__12518 = new cljs.core.IndexedSeq(G__12519__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12518);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
 * If no denominators are supplied, returns 1/numerator,
 * else returns numerator divided by all of the denominators.
 * @param {...*} var_args
 */
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__12524__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__12524 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12525__i = 0, G__12525__a = new Array(arguments.length -  2);
while (G__12525__i < G__12525__a.length) {G__12525__a[G__12525__i] = arguments[G__12525__i + 2]; ++G__12525__i;}
  more = new cljs.core.IndexedSeq(G__12525__a,0);
} 
return G__12524__delegate.call(this,x,y,more);};
G__12524.cljs$lang$maxFixedArity = 2;
G__12524.cljs$lang$applyTo = (function (arglist__12526){
var x = cljs.core.first(arglist__12526);
arglist__12526 = cljs.core.next(arglist__12526);
var y = cljs.core.first(arglist__12526);
var more = cljs.core.rest(arglist__12526);
return G__12524__delegate(x,y,more);
});
G__12524.cljs$core$IFn$_invoke$arity$variadic = G__12524__delegate;
return G__12524;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__12527 = null;
if (arguments.length > 2) {
var G__12528__i = 0, G__12528__a = new Array(arguments.length -  2);
while (G__12528__i < G__12528__a.length) {G__12528__a[G__12528__i] = arguments[G__12528__i + 2]; ++G__12528__i;}
G__12527 = new cljs.core.IndexedSeq(G__12528__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12527);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__12529__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__12529 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12530__i = 0, G__12530__a = new Array(arguments.length -  2);
while (G__12530__i < G__12530__a.length) {G__12530__a[G__12530__i] = arguments[G__12530__i + 2]; ++G__12530__i;}
  more = new cljs.core.IndexedSeq(G__12530__a,0);
} 
return G__12529__delegate.call(this,x,y,more);};
G__12529.cljs$lang$maxFixedArity = 2;
G__12529.cljs$lang$applyTo = (function (arglist__12531){
var x = cljs.core.first(arglist__12531);
arglist__12531 = cljs.core.next(arglist__12531);
var y = cljs.core.first(arglist__12531);
var more = cljs.core.rest(arglist__12531);
return G__12529__delegate(x,y,more);
});
G__12529.cljs$core$IFn$_invoke$arity$variadic = G__12529__delegate;
return G__12529;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__12532 = null;
if (arguments.length > 2) {
var G__12533__i = 0, G__12533__a = new Array(arguments.length -  2);
while (G__12533__i < G__12533__a.length) {G__12533__a[G__12533__i] = arguments[G__12533__i + 2]; ++G__12533__i;}
G__12532 = new cljs.core.IndexedSeq(G__12533__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12532);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__12534__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__12534 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12535__i = 0, G__12535__a = new Array(arguments.length -  2);
while (G__12535__i < G__12535__a.length) {G__12535__a[G__12535__i] = arguments[G__12535__i + 2]; ++G__12535__i;}
  more = new cljs.core.IndexedSeq(G__12535__a,0);
} 
return G__12534__delegate.call(this,x,y,more);};
G__12534.cljs$lang$maxFixedArity = 2;
G__12534.cljs$lang$applyTo = (function (arglist__12536){
var x = cljs.core.first(arglist__12536);
arglist__12536 = cljs.core.next(arglist__12536);
var y = cljs.core.first(arglist__12536);
var more = cljs.core.rest(arglist__12536);
return G__12534__delegate(x,y,more);
});
G__12534.cljs$core$IFn$_invoke$arity$variadic = G__12534__delegate;
return G__12534;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__12537 = null;
if (arguments.length > 2) {
var G__12538__i = 0, G__12538__a = new Array(arguments.length -  2);
while (G__12538__i < G__12538__a.length) {G__12538__a[G__12538__i] = arguments[G__12538__i + 2]; ++G__12538__i;}
G__12537 = new cljs.core.IndexedSeq(G__12538__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12537);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__12541 = x;
var G__12542 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__12541,G__12542) : cljs.core.mod.call(null,G__12541,G__12542));
});
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__12543__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__12543 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12544__i = 0, G__12544__a = new Array(arguments.length -  2);
while (G__12544__i < G__12544__a.length) {G__12544__a[G__12544__i] = arguments[G__12544__i + 2]; ++G__12544__i;}
  more = new cljs.core.IndexedSeq(G__12544__a,0);
} 
return G__12543__delegate.call(this,x,y,more);};
G__12543.cljs$lang$maxFixedArity = 2;
G__12543.cljs$lang$applyTo = (function (arglist__12545){
var x = cljs.core.first(arglist__12545);
arglist__12545 = cljs.core.next(arglist__12545);
var y = cljs.core.first(arglist__12545);
var more = cljs.core.rest(arglist__12545);
return G__12543__delegate(x,y,more);
});
G__12543.cljs$core$IFn$_invoke$arity$variadic = G__12543__delegate;
return G__12543;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__12546 = null;
if (arguments.length > 2) {
var G__12547__i = 0, G__12547__a = new Array(arguments.length -  2);
while (G__12547__i < G__12547__a.length) {G__12547__a[G__12547__i] = arguments[G__12547__i + 2]; ++G__12547__i;}
G__12546 = new cljs.core.IndexedSeq(G__12547__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12546);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__12548__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__12548 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12549__i = 0, G__12549__a = new Array(arguments.length -  2);
while (G__12549__i < G__12549__a.length) {G__12549__a[G__12549__i] = arguments[G__12549__i + 2]; ++G__12549__i;}
  more = new cljs.core.IndexedSeq(G__12549__a,0);
} 
return G__12548__delegate.call(this,x,y,more);};
G__12548.cljs$lang$maxFixedArity = 2;
G__12548.cljs$lang$applyTo = (function (arglist__12550){
var x = cljs.core.first(arglist__12550);
arglist__12550 = cljs.core.next(arglist__12550);
var y = cljs.core.first(arglist__12550);
var more = cljs.core.rest(arglist__12550);
return G__12548__delegate(x,y,more);
});
G__12548.cljs$core$IFn$_invoke$arity$variadic = G__12548__delegate;
return G__12548;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__12551 = null;
if (arguments.length > 2) {
var G__12552__i = 0, G__12552__a = new Array(arguments.length -  2);
while (G__12552__i < G__12552__a.length) {G__12552__a[G__12552__i] = arguments[G__12552__i + 2]; ++G__12552__i;}
G__12551 = new cljs.core.IndexedSeq(G__12552__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12551);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__12555 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__12555) : Math.floor.call(null,G__12555));
} else {
var G__12556 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__12556) : Math.ceil.call(null,G__12556));
}
});
/**
 * Coerce to int by stripping decimal places.
 */
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
 * Coerce to int by stripping decimal places.
 */
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
 * Coerce to long by stripping decimal places. Identical to `int'.
 */
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
 * Coerce to long by stripping decimal places. Identical to `int'.
 */
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
 * Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
 */
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
 * Modulus of num and div. Truncates toward negative infinity.
 */
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
 * quot[ient] of dividing numerator by denominator.
 */
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
 * remainder of dividing numerator by denominator.
 */
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
 * Bitwise exclusive or
 * @param {...*} var_args
 */
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__12557__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__12557 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12558__i = 0, G__12558__a = new Array(arguments.length -  2);
while (G__12558__i < G__12558__a.length) {G__12558__a[G__12558__i] = arguments[G__12558__i + 2]; ++G__12558__i;}
  more = new cljs.core.IndexedSeq(G__12558__a,0);
} 
return G__12557__delegate.call(this,x,y,more);};
G__12557.cljs$lang$maxFixedArity = 2;
G__12557.cljs$lang$applyTo = (function (arglist__12559){
var x = cljs.core.first(arglist__12559);
arglist__12559 = cljs.core.next(arglist__12559);
var y = cljs.core.first(arglist__12559);
var more = cljs.core.rest(arglist__12559);
return G__12557__delegate(x,y,more);
});
G__12557.cljs$core$IFn$_invoke$arity$variadic = G__12557__delegate;
return G__12557;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__12560 = null;
if (arguments.length > 2) {
var G__12561__i = 0, G__12561__a = new Array(arguments.length -  2);
while (G__12561__i < G__12561__a.length) {G__12561__a[G__12561__i] = arguments[G__12561__i + 2]; ++G__12561__i;}
G__12560 = new cljs.core.IndexedSeq(G__12561__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12560);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
 * Bitwise and
 * @param {...*} var_args
 */
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__12562__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__12562 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12563__i = 0, G__12563__a = new Array(arguments.length -  2);
while (G__12563__i < G__12563__a.length) {G__12563__a[G__12563__i] = arguments[G__12563__i + 2]; ++G__12563__i;}
  more = new cljs.core.IndexedSeq(G__12563__a,0);
} 
return G__12562__delegate.call(this,x,y,more);};
G__12562.cljs$lang$maxFixedArity = 2;
G__12562.cljs$lang$applyTo = (function (arglist__12564){
var x = cljs.core.first(arglist__12564);
arglist__12564 = cljs.core.next(arglist__12564);
var y = cljs.core.first(arglist__12564);
var more = cljs.core.rest(arglist__12564);
return G__12562__delegate(x,y,more);
});
G__12562.cljs$core$IFn$_invoke$arity$variadic = G__12562__delegate;
return G__12562;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__12565 = null;
if (arguments.length > 2) {
var G__12566__i = 0, G__12566__a = new Array(arguments.length -  2);
while (G__12566__i < G__12566__a.length) {G__12566__a[G__12566__i] = arguments[G__12566__i + 2]; ++G__12566__i;}
G__12565 = new cljs.core.IndexedSeq(G__12566__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12565);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
 * Bitwise or
 * @param {...*} var_args
 */
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__12567__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__12567 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12568__i = 0, G__12568__a = new Array(arguments.length -  2);
while (G__12568__i < G__12568__a.length) {G__12568__a[G__12568__i] = arguments[G__12568__i + 2]; ++G__12568__i;}
  more = new cljs.core.IndexedSeq(G__12568__a,0);
} 
return G__12567__delegate.call(this,x,y,more);};
G__12567.cljs$lang$maxFixedArity = 2;
G__12567.cljs$lang$applyTo = (function (arglist__12569){
var x = cljs.core.first(arglist__12569);
arglist__12569 = cljs.core.next(arglist__12569);
var y = cljs.core.first(arglist__12569);
var more = cljs.core.rest(arglist__12569);
return G__12567__delegate(x,y,more);
});
G__12567.cljs$core$IFn$_invoke$arity$variadic = G__12567__delegate;
return G__12567;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__12570 = null;
if (arguments.length > 2) {
var G__12571__i = 0, G__12571__a = new Array(arguments.length -  2);
while (G__12571__i < G__12571__a.length) {G__12571__a[G__12571__i] = arguments[G__12571__i + 2]; ++G__12571__i;}
G__12570 = new cljs.core.IndexedSeq(G__12571__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12570);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
 * Bitwise and
 * @param {...*} var_args
 */
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__12572__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__12572 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12573__i = 0, G__12573__a = new Array(arguments.length -  2);
while (G__12573__i < G__12573__a.length) {G__12573__a[G__12573__i] = arguments[G__12573__i + 2]; ++G__12573__i;}
  more = new cljs.core.IndexedSeq(G__12573__a,0);
} 
return G__12572__delegate.call(this,x,y,more);};
G__12572.cljs$lang$maxFixedArity = 2;
G__12572.cljs$lang$applyTo = (function (arglist__12574){
var x = cljs.core.first(arglist__12574);
arglist__12574 = cljs.core.next(arglist__12574);
var y = cljs.core.first(arglist__12574);
var more = cljs.core.rest(arglist__12574);
return G__12572__delegate(x,y,more);
});
G__12572.cljs$core$IFn$_invoke$arity$variadic = G__12572__delegate;
return G__12572;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__12575 = null;
if (arguments.length > 2) {
var G__12576__i = 0, G__12576__a = new Array(arguments.length -  2);
while (G__12576__i < G__12576__a.length) {G__12576__a[G__12576__i] = arguments[G__12576__i + 2]; ++G__12576__i;}
G__12575 = new cljs.core.IndexedSeq(G__12576__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12575);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
 * Clear bit at index n
 */
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
 * Flip bit at index n
 */
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
 * Bitwise complement
 */
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
 * Set bit at index n
 */
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
 * Test bit at index n
 */
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
 * Bitwise shift left
 */
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
 * Bitwise shift right
 */
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
 * DEPRECATED: Bitwise shift right with zero fill
 */
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
 * Bitwise shift right with zero fill
 */
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
 * Counts the number of bits set in n
 */
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
 * Returns non-nil if nums all have the equivalent
 * value, otherwise false. Behavior on non nums is
 * undefined.
 * @param {...*} var_args
 */
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__12581__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__12582 = y;
var G__12583 = cljs.core.first(more);
var G__12584 = cljs.core.next(more);
x = G__12582;
y = G__12583;
more = G__12584;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__12581 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12585__i = 0, G__12585__a = new Array(arguments.length -  2);
while (G__12585__i < G__12585__a.length) {G__12585__a[G__12585__i] = arguments[G__12585__i + 2]; ++G__12585__i;}
  more = new cljs.core.IndexedSeq(G__12585__a,0);
} 
return G__12581__delegate.call(this,x,y,more);};
G__12581.cljs$lang$maxFixedArity = 2;
G__12581.cljs$lang$applyTo = (function (arglist__12586){
var x = cljs.core.first(arglist__12586);
arglist__12586 = cljs.core.next(arglist__12586);
var y = cljs.core.first(arglist__12586);
var more = cljs.core.rest(arglist__12586);
return G__12581__delegate(x,y,more);
});
G__12581.cljs$core$IFn$_invoke$arity$variadic = G__12581__delegate;
return G__12581;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__12587 = null;
if (arguments.length > 2) {
var G__12588__i = 0, G__12588__a = new Array(arguments.length -  2);
while (G__12588__i < G__12588__a.length) {G__12588__a[G__12588__i] = arguments[G__12588__i + 2]; ++G__12588__i;}
G__12587 = new cljs.core.IndexedSeq(G__12588__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12587);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
 * Returns true if num is greater than zero, else false
 */
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
 * Returns true if num is less than zero, else false
 */
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
 * Returns the nth next of coll, (seq coll) when n is 0.
 */
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__12589 = (n__$1 - (1));
var G__12590 = cljs.core.next(xs);
n__$1 = G__12589;
xs = G__12590;
continue;
} else {
return xs;
}
break;
}
});
/**
 * With no args, returns the empty string. With one arg x, returns
 * x.toString().  (str nil) returns the empty string. With more than
 * one arg, returns the concatenation of the str values of the args.
 * @param {...*} var_args
 */
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__12594 = x;
return goog.string.buildString(G__12594);
}
});
var str__2 = (function() { 
var G__12595__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__12596 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__12597 = cljs.core.next(more);
sb = G__12596;
more = G__12597;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__12595 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__12598__i = 0, G__12598__a = new Array(arguments.length -  1);
while (G__12598__i < G__12598__a.length) {G__12598__a[G__12598__i] = arguments[G__12598__i + 1]; ++G__12598__i;}
  ys = new cljs.core.IndexedSeq(G__12598__a,0);
} 
return G__12595__delegate.call(this,x,ys);};
G__12595.cljs$lang$maxFixedArity = 1;
G__12595.cljs$lang$applyTo = (function (arglist__12599){
var x = cljs.core.first(arglist__12599);
var ys = cljs.core.rest(arglist__12599);
return G__12595__delegate(x,ys);
});
G__12595.cljs$core$IFn$_invoke$arity$variadic = G__12595__delegate;
return G__12595;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__12600 = null;
if (arguments.length > 1) {
var G__12601__i = 0, G__12601__a = new Array(arguments.length -  1);
while (G__12601__i < G__12601__a.length) {G__12601__a[G__12601__i] = arguments[G__12601__i + 1]; ++G__12601__i;}
G__12600 = new cljs.core.IndexedSeq(G__12601__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__12600);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
 * Returns the substring of s beginning at start inclusive, and ending
 * at end (defaults to length of string), exclusive.
 */
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
 * Assumes x is sequential. Returns true if x equals y, otherwise
 * returns false.
 */
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__12602 = cljs.core.next(xs);
var G__12603 = cljs.core.next(ys);
xs = G__12602;
ys = G__12603;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__12604 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__12605 = cljs.core.next(s);
res = G__12604;
s = G__12605;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__12610 = ((h + (cljs.core.hash((function (){var G__12608 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__12608) : cljs.core.key.call(null,G__12608));
})()) ^ cljs.core.hash((function (){var G__12609 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__12609) : cljs.core.val.call(null,G__12609));
})()))) % (4503599627370496));
var G__12611 = cljs.core.next(s);
h = G__12610;
s = G__12611;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__12612 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__12613 = cljs.core.next(s__$1);
h = G__12612;
s__$1 = G__12613;
continue;
} else {
return h;
}
break;
}
});


/**
 * Takes a JavaScript object and a map of names to functions and
 * attaches said functions as methods on the object.  Any references to
 * JavaScript's implicit this (via the this-as macro) will resolve to the
 * object that the function is attached.
 */
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__12624_12634 = cljs.core.seq(fn_map);
var chunk__12625_12635 = null;
var count__12626_12636 = (0);
var i__12627_12637 = (0);
while(true){
if((i__12627_12637 < count__12626_12636)){
var vec__12628_12638 = chunk__12625_12635.cljs$core$IIndexed$_nth$arity$2(null,i__12627_12637);
var key_name_12639 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12628_12638,(0),null);
var f_12640 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12628_12638,(1),null);
var str_name_12641 = (function (){var G__12629 = key_name_12639;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__12629) : cljs.core.name.call(null,G__12629));
})();
(obj[str_name_12641] = f_12640);

var G__12642 = seq__12624_12634;
var G__12643 = chunk__12625_12635;
var G__12644 = count__12626_12636;
var G__12645 = (i__12627_12637 + (1));
seq__12624_12634 = G__12642;
chunk__12625_12635 = G__12643;
count__12626_12636 = G__12644;
i__12627_12637 = G__12645;
continue;
} else {
var temp__4406__auto___12646 = cljs.core.seq(seq__12624_12634);
if(temp__4406__auto___12646){
var seq__12624_12647__$1 = temp__4406__auto___12646;
if(cljs.core.chunked_seq_QMARK_(seq__12624_12647__$1)){
var c__5984__auto___12648 = (function (){var G__12630 = seq__12624_12647__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__12630) : cljs.core.chunk_first.call(null,G__12630));
})();
var G__12649 = (function (){var G__12631 = seq__12624_12647__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__12631) : cljs.core.chunk_rest.call(null,G__12631));
})();
var G__12650 = c__5984__auto___12648;
var G__12651 = cljs.core.count(c__5984__auto___12648);
var G__12652 = (0);
seq__12624_12634 = G__12649;
chunk__12625_12635 = G__12650;
count__12626_12636 = G__12651;
i__12627_12637 = G__12652;
continue;
} else {
var vec__12632_12653 = cljs.core.first(seq__12624_12647__$1);
var key_name_12654 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12632_12653,(0),null);
var f_12655 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12632_12653,(1),null);
var str_name_12656 = (function (){var G__12633 = key_name_12654;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__12633) : cljs.core.name.call(null,G__12633));
})();
(obj[str_name_12656] = f_12655);

var G__12657 = cljs.core.next(seq__12624_12647__$1);
var G__12658 = null;
var G__12659 = (0);
var G__12660 = (0);
seq__12624_12634 = G__12657;
chunk__12625_12635 = G__12658;
count__12626_12636 = G__12659;
i__12627_12637 = G__12660;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5618__auto__ = self__.__hash;
if(!((h__5618__auto__ == null))){
return h__5618__auto__;
} else {
var h__5618__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5618__auto____$1;

return h__5618__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6175__auto__ = this;
return cljs.core.es6_iterator(this__6175__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6175__auto__ = this;
return cljs.core.es6_iterator(this__6175__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__12662 = coll;
if(G__12662){
var bit__5878__auto__ = (G__12662.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__5878__auto__) || (G__12662.cljs$core$IReversible$)){
return true;
} else {
if((!G__12662.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__12662);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__12662);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
 * Returns a seq of the items in coll in reverse order. Not lazy.
 */
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
 * @param {...*} var_args
 */
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__12663 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__12663;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__12664 = (i - (1));
var G__12665 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__12664;
r = G__12665;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__12666__i = 0, G__12666__a = new Array(arguments.length -  0);
while (G__12666__i < G__12666__a.length) {G__12666__a[G__12666__i] = arguments[G__12666__i + 0]; ++G__12666__i;}
  xs = new cljs.core.IndexedSeq(G__12666__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__12667){
var xs = cljs.core.seq(arglist__12667);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5618__auto__ = self__.__hash;
if(!((h__5618__auto__ == null))){
return h__5618__auto__;
} else {
var h__5618__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5618__auto____$1;

return h__5618__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6175__auto__ = this;
return cljs.core.es6_iterator(this__6175__auto__);
}));
/**
 * Returns a new seq where x is the first element and seq is the rest.
 */
cljs.core.cons = (function cons(x,coll){
if((function (){var or__5197__auto__ = (coll == null);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var G__12671 = coll;
if(G__12671){
var bit__5871__auto__ = (G__12671.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__5871__auto__) || (G__12671.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__12673 = x;
if(G__12673){
var bit__5878__auto__ = (G__12673.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__5878__auto__) || (G__12673.cljs$core$IList$)){
return true;
} else {
if((!G__12673.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__12673);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__12673);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__5185__auto__ = cljs.core.not(a.ns);
if(and__5185__auto__){
return b.ns;
} else {
return and__5185__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__12680 = a.ns;
var G__12681 = b.ns;
return goog.array.defaultCompare(G__12680,G__12681);
})();
if(((0) === nsc)){
var G__12682 = a.name;
var G__12683 = b.name;
return goog.array.defaultCompare(G__12682,G__12683);
} else {
return nsc;
}
}
} else {
var G__12684 = a.name;
var G__12685 = b.name;
return goog.array.defaultCompare(G__12684,G__12685);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__5618__auto__ = self__._hash;
if(!((h__5618__auto__ == null))){
return h__5618__auto__;
} else {
var h__5618__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__5618__auto____$1;

return h__5618__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__12687 = null;
var G__12687__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__12687__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__12687 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__12687__2.call(this,self__,coll);
case 3:
return G__12687__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12687.cljs$core$IFn$_invoke$arity$2 = G__12687__2;
G__12687.cljs$core$IFn$_invoke$arity$3 = G__12687__3;
return G__12687;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args12686){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args12686)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
 * Returns the namespace String of a symbol or keyword, or nil if not present.
 */
cljs.core.namespace = (function namespace(x){
if((function (){var G__12689 = x;
if(G__12689){
var bit__5871__auto__ = (G__12689.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__5871__auto__) || (G__12689.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
 * Returns a Keyword with the given namespace and name.  Do not use :
 * in the keyword strings, it will be added automatically.
 */
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__12691 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__12691) : cljs.core.name.call(null,G__12691));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5618__auto__ = self__.__hash;
if(!((h__5618__auto__ == null))){
return h__5618__auto__;
} else {
var h__5618__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5618__auto____$1;

return h__5618__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__12692 = ls.sval();
ls = G__12692;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6175__auto__ = this;
return cljs.core.es6_iterator(this__6175__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5618__auto__ = self__.__hash;
if(!((h__5618__auto__ == null))){
return h__5618__auto__;
} else {
var h__5618__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5618__auto____$1;

return h__5618__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6175__auto__ = this;
return cljs.core.es6_iterator(this__6175__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__12694 = s;
if(G__12694){
var bit__5871__auto__ = (G__12694.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__5871__auto__) || (G__12694.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
 * Naive impl of to-array as a start.
 */
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__12695 = cljs.core.next(s__$1);
s__$1 = G__12695;
continue;
} else {
return ary;
}
break;
}
});
/**
 * Returns a (potentially-ragged) 2-dimensional array
 * containing the contents of coll.
 */
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_12696 = (0);
var xs_12697 = cljs.core.seq(coll);
while(true){
if(xs_12697){
(ret[i_12696] = cljs.core.to_array(cljs.core.first(xs_12697)));

var G__12698 = (i_12696 + (1));
var G__12699 = cljs.core.next(xs_12697);
i_12696 = G__12698;
xs_12697 = G__12699;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__12702 = (i + (1));
var G__12703 = cljs.core.next(s__$1);
i = G__12702;
s__$1 = G__12703;
continue;
} else {
return a;
}
break;
}
} else {
var n__6084__auto___12704 = size;
var i_12705 = (0);
while(true){
if((i_12705 < n__6084__auto___12704)){
(a[i_12705] = init_val_or_seq);

var G__12706 = (i_12705 + (1));
i_12705 = G__12706;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__12709 = (i + (1));
var G__12710 = cljs.core.next(s__$1);
i = G__12709;
s__$1 = G__12710;
continue;
} else {
return a;
}
break;
}
} else {
var n__6084__auto___12711 = size;
var i_12712 = (0);
while(true){
if((i_12712 < n__6084__auto___12711)){
(a[i_12712] = init_val_or_seq);

var G__12713 = (i_12712 + (1));
i_12712 = G__12713;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__12716 = (i + (1));
var G__12717 = cljs.core.next(s__$1);
i = G__12716;
s__$1 = G__12717;
continue;
} else {
return a;
}
break;
}
} else {
var n__6084__auto___12718 = size;
var i_12719 = (0);
while(true){
if((i_12719 < n__6084__auto___12718)){
(a[i_12719] = init_val_or_seq);

var G__12720 = (i_12719 + (1));
i_12719 = G__12720;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__12723 = (i + (1));
var G__12724 = cljs.core.next(s__$1);
i = G__12723;
s__$1 = G__12724;
continue;
} else {
return a;
}
break;
}
} else {
var n__6084__auto___12725 = size;
var i_12726 = (0);
while(true){
if((i_12726 < n__6084__auto___12725)){
(a[i_12726] = init_val_or_seq);

var G__12727 = (i_12726 + (1));
i_12726 = G__12727;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__12728 = cljs.core.next(s__$1);
var G__12729 = (i - (1));
var G__12730 = (sum + (1));
s__$1 = G__12728;
i = G__12729;
sum = G__12730;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
 * Returns a lazy seq representing the concatenation of the elements in the supplied colls.
 * @param {...*} var_args
 */
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__12750__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__12750 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__12751__i = 0, G__12751__a = new Array(arguments.length -  2);
while (G__12751__i < G__12751__a.length) {G__12751__a[G__12751__i] = arguments[G__12751__i + 2]; ++G__12751__i;}
  zs = new cljs.core.IndexedSeq(G__12751__a,0);
} 
return G__12750__delegate.call(this,x,y,zs);};
G__12750.cljs$lang$maxFixedArity = 2;
G__12750.cljs$lang$applyTo = (function (arglist__12752){
var x = cljs.core.first(arglist__12752);
arglist__12752 = cljs.core.next(arglist__12752);
var y = cljs.core.first(arglist__12752);
var zs = cljs.core.rest(arglist__12752);
return G__12750__delegate(x,y,zs);
});
G__12750.cljs$core$IFn$_invoke$arity$variadic = G__12750__delegate;
return G__12750;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__12753 = null;
if (arguments.length > 2) {
var G__12754__i = 0, G__12754__a = new Array(arguments.length -  2);
while (G__12754__i < G__12754__a.length) {G__12754__a[G__12754__i] = arguments[G__12754__i + 2]; ++G__12754__i;}
G__12753 = new cljs.core.IndexedSeq(G__12754__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12753);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
 * Creates a new list containing the items prepended to the rest, the
 * last of which will be treated as a sequence.
 * @param {...*} var_args
 */
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__12755__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__12755 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__12756__i = 0, G__12756__a = new Array(arguments.length -  4);
while (G__12756__i < G__12756__a.length) {G__12756__a[G__12756__i] = arguments[G__12756__i + 4]; ++G__12756__i;}
  more = new cljs.core.IndexedSeq(G__12756__a,0);
} 
return G__12755__delegate.call(this,a,b,c,d,more);};
G__12755.cljs$lang$maxFixedArity = 4;
G__12755.cljs$lang$applyTo = (function (arglist__12757){
var a = cljs.core.first(arglist__12757);
arglist__12757 = cljs.core.next(arglist__12757);
var b = cljs.core.first(arglist__12757);
arglist__12757 = cljs.core.next(arglist__12757);
var c = cljs.core.first(arglist__12757);
arglist__12757 = cljs.core.next(arglist__12757);
var d = cljs.core.first(arglist__12757);
var more = cljs.core.rest(arglist__12757);
return G__12755__delegate(a,b,c,d,more);
});
G__12755.cljs$core$IFn$_invoke$arity$variadic = G__12755__delegate;
return G__12755;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__12758 = null;
if (arguments.length > 4) {
var G__12759__i = 0, G__12759__a = new Array(arguments.length -  4);
while (G__12759__i < G__12759__a.length) {G__12759__a[G__12759__i] = arguments[G__12759__i + 4]; ++G__12759__i;}
G__12758 = new cljs.core.IndexedSeq(G__12759__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__12758);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
 * Returns a new, transient version of the collection, in constant time.
 */
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
 * Returns a new, persistent version of the transient collection, in
 * constant time. The transient collection cannot be used after this
 * call, any such use will throw an exception.
 */
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
 * Adds x to the transient collection, and return coll. The 'addition'
 * may happen at different 'places' depending on the concrete type.
 * @param {...*} var_args
 */
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__12760__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__12761 = ntcoll;
var G__12762 = cljs.core.first(vals);
var G__12763 = cljs.core.next(vals);
tcoll = G__12761;
val = G__12762;
vals = G__12763;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__12760 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__12764__i = 0, G__12764__a = new Array(arguments.length -  2);
while (G__12764__i < G__12764__a.length) {G__12764__a[G__12764__i] = arguments[G__12764__i + 2]; ++G__12764__i;}
  vals = new cljs.core.IndexedSeq(G__12764__a,0);
} 
return G__12760__delegate.call(this,tcoll,val,vals);};
G__12760.cljs$lang$maxFixedArity = 2;
G__12760.cljs$lang$applyTo = (function (arglist__12765){
var tcoll = cljs.core.first(arglist__12765);
arglist__12765 = cljs.core.next(arglist__12765);
var val = cljs.core.first(arglist__12765);
var vals = cljs.core.rest(arglist__12765);
return G__12760__delegate(tcoll,val,vals);
});
G__12760.cljs$core$IFn$_invoke$arity$variadic = G__12760__delegate;
return G__12760;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__12766 = null;
if (arguments.length > 2) {
var G__12767__i = 0, G__12767__a = new Array(arguments.length -  2);
while (G__12767__i < G__12767__a.length) {G__12767__a[G__12767__i] = arguments[G__12767__i + 2]; ++G__12767__i;}
G__12766 = new cljs.core.IndexedSeq(G__12767__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__12766);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
 * When applied to a transient map, adds mapping of key(s) to
 * val(s). When applied to a transient vector, sets the val at index.
 * Note - index must be <= (count vector). Returns coll.
 * @param {...*} var_args
 */
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__12768__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__12769 = ntcoll;
var G__12770 = cljs.core.first(kvs);
var G__12771 = cljs.core.second(kvs);
var G__12772 = cljs.core.nnext(kvs);
tcoll = G__12769;
key = G__12770;
val = G__12771;
kvs = G__12772;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__12768 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__12773__i = 0, G__12773__a = new Array(arguments.length -  3);
while (G__12773__i < G__12773__a.length) {G__12773__a[G__12773__i] = arguments[G__12773__i + 3]; ++G__12773__i;}
  kvs = new cljs.core.IndexedSeq(G__12773__a,0);
} 
return G__12768__delegate.call(this,tcoll,key,val,kvs);};
G__12768.cljs$lang$maxFixedArity = 3;
G__12768.cljs$lang$applyTo = (function (arglist__12774){
var tcoll = cljs.core.first(arglist__12774);
arglist__12774 = cljs.core.next(arglist__12774);
var key = cljs.core.first(arglist__12774);
arglist__12774 = cljs.core.next(arglist__12774);
var val = cljs.core.first(arglist__12774);
var kvs = cljs.core.rest(arglist__12774);
return G__12768__delegate(tcoll,key,val,kvs);
});
G__12768.cljs$core$IFn$_invoke$arity$variadic = G__12768__delegate;
return G__12768;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__12775 = null;
if (arguments.length > 3) {
var G__12776__i = 0, G__12776__a = new Array(arguments.length -  3);
while (G__12776__i < G__12776__a.length) {G__12776__a[G__12776__i] = arguments[G__12776__i + 3]; ++G__12776__i;}
G__12775 = new cljs.core.IndexedSeq(G__12776__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__12775);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
 * Returns a transient map that doesn't contain a mapping for key(s).
 * @param {...*} var_args
 */
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__12777__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__12778 = ntcoll;
var G__12779 = cljs.core.first(ks);
var G__12780 = cljs.core.next(ks);
tcoll = G__12778;
key = G__12779;
ks = G__12780;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__12777 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__12781__i = 0, G__12781__a = new Array(arguments.length -  2);
while (G__12781__i < G__12781__a.length) {G__12781__a[G__12781__i] = arguments[G__12781__i + 2]; ++G__12781__i;}
  ks = new cljs.core.IndexedSeq(G__12781__a,0);
} 
return G__12777__delegate.call(this,tcoll,key,ks);};
G__12777.cljs$lang$maxFixedArity = 2;
G__12777.cljs$lang$applyTo = (function (arglist__12782){
var tcoll = cljs.core.first(arglist__12782);
arglist__12782 = cljs.core.next(arglist__12782);
var key = cljs.core.first(arglist__12782);
var ks = cljs.core.rest(arglist__12782);
return G__12777__delegate(tcoll,key,ks);
});
G__12777.cljs$core$IFn$_invoke$arity$variadic = G__12777__delegate;
return G__12777;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__12783 = null;
if (arguments.length > 2) {
var G__12784__i = 0, G__12784__a = new Array(arguments.length -  2);
while (G__12784__i < G__12784__a.length) {G__12784__a[G__12784__i] = arguments[G__12784__i + 2]; ++G__12784__i;}
G__12783 = new cljs.core.IndexedSeq(G__12784__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__12783);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
 * Removes the last item from a transient vector. If
 * the collection is empty, throws an exception. Returns coll
 */
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
 * disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
 * does not contain key(s).
 * @param {...*} var_args
 */
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__12785__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__12786 = ntcoll;
var G__12787 = cljs.core.first(vals);
var G__12788 = cljs.core.next(vals);
tcoll = G__12786;
val = G__12787;
vals = G__12788;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__12785 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__12789__i = 0, G__12789__a = new Array(arguments.length -  2);
while (G__12789__i < G__12789__a.length) {G__12789__a[G__12789__i] = arguments[G__12789__i + 2]; ++G__12789__i;}
  vals = new cljs.core.IndexedSeq(G__12789__a,0);
} 
return G__12785__delegate.call(this,tcoll,val,vals);};
G__12785.cljs$lang$maxFixedArity = 2;
G__12785.cljs$lang$applyTo = (function (arglist__12790){
var tcoll = cljs.core.first(arglist__12790);
arglist__12790 = cljs.core.next(arglist__12790);
var val = cljs.core.first(arglist__12790);
var vals = cljs.core.rest(arglist__12790);
return G__12785__delegate(tcoll,val,vals);
});
G__12785.cljs$core$IFn$_invoke$arity$variadic = G__12785__delegate;
return G__12785;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__12791 = null;
if (arguments.length > 2) {
var G__12792__i = 0, G__12792__a = new Array(arguments.length -  2);
while (G__12792__i < G__12792__a.length) {G__12792__a[G__12792__i] = arguments[G__12792__i + 2]; ++G__12792__i;}
G__12791 = new cljs.core.IndexedSeq(G__12792__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__12791);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a6128 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a6128);
} else {
var G__13003 = a6128;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13003) : f.call(null,G__13003));
}
} else {
var b6129 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a6128,b6129);
} else {
var G__13004 = a6128;
var G__13005 = b6129;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13004,G__13005) : f.call(null,G__13004,G__13005));
}
} else {
var c6130 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a6128,b6129,c6130);
} else {
var G__13006 = a6128;
var G__13007 = b6129;
var G__13008 = c6130;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13006,G__13007,G__13008) : f.call(null,G__13006,G__13007,G__13008));
}
} else {
var d6131 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a6128,b6129,c6130,d6131);
} else {
var G__13009 = a6128;
var G__13010 = b6129;
var G__13011 = c6130;
var G__13012 = d6131;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13009,G__13010,G__13011,G__13012) : f.call(null,G__13009,G__13010,G__13011,G__13012));
}
} else {
var e6132 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a6128,b6129,c6130,d6131,e6132);
} else {
var G__13013 = a6128;
var G__13014 = b6129;
var G__13015 = c6130;
var G__13016 = d6131;
var G__13017 = e6132;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13013,G__13014,G__13015,G__13016,G__13017) : f.call(null,G__13013,G__13014,G__13015,G__13016,G__13017));
}
} else {
var f6133 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a6128,b6129,c6130,d6131,e6132,f6133);
} else {
var G__13018 = a6128;
var G__13019 = b6129;
var G__13020 = c6130;
var G__13021 = d6131;
var G__13022 = e6132;
var G__13023 = f6133;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__13018,G__13019,G__13020,G__13021,G__13022,G__13023) : f.call(null,G__13018,G__13019,G__13020,G__13021,G__13022,G__13023));
}
} else {
var g6134 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a6128,b6129,c6130,d6131,e6132,f6133,g6134);
} else {
var G__13024 = a6128;
var G__13025 = b6129;
var G__13026 = c6130;
var G__13027 = d6131;
var G__13028 = e6132;
var G__13029 = f6133;
var G__13030 = g6134;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__13024,G__13025,G__13026,G__13027,G__13028,G__13029,G__13030) : f.call(null,G__13024,G__13025,G__13026,G__13027,G__13028,G__13029,G__13030));
}
} else {
var h6135 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a6128,b6129,c6130,d6131,e6132,f6133,g6134,h6135);
} else {
var G__13031 = a6128;
var G__13032 = b6129;
var G__13033 = c6130;
var G__13034 = d6131;
var G__13035 = e6132;
var G__13036 = f6133;
var G__13037 = g6134;
var G__13038 = h6135;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__13031,G__13032,G__13033,G__13034,G__13035,G__13036,G__13037,G__13038) : f.call(null,G__13031,G__13032,G__13033,G__13034,G__13035,G__13036,G__13037,G__13038));
}
} else {
var i6136 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a6128,b6129,c6130,d6131,e6132,f6133,g6134,h6135,i6136);
} else {
var G__13039 = a6128;
var G__13040 = b6129;
var G__13041 = c6130;
var G__13042 = d6131;
var G__13043 = e6132;
var G__13044 = f6133;
var G__13045 = g6134;
var G__13046 = h6135;
var G__13047 = i6136;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__13039,G__13040,G__13041,G__13042,G__13043,G__13044,G__13045,G__13046,G__13047) : f.call(null,G__13039,G__13040,G__13041,G__13042,G__13043,G__13044,G__13045,G__13046,G__13047));
}
} else {
var j6137 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a6128,b6129,c6130,d6131,e6132,f6133,g6134,h6135,i6136,j6137);
} else {
var G__13048 = a6128;
var G__13049 = b6129;
var G__13050 = c6130;
var G__13051 = d6131;
var G__13052 = e6132;
var G__13053 = f6133;
var G__13054 = g6134;
var G__13055 = h6135;
var G__13056 = i6136;
var G__13057 = j6137;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__13048,G__13049,G__13050,G__13051,G__13052,G__13053,G__13054,G__13055,G__13056,G__13057) : f.call(null,G__13048,G__13049,G__13050,G__13051,G__13052,G__13053,G__13054,G__13055,G__13056,G__13057));
}
} else {
var k6138 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a6128,b6129,c6130,d6131,e6132,f6133,g6134,h6135,i6136,j6137,k6138);
} else {
var G__13058 = a6128;
var G__13059 = b6129;
var G__13060 = c6130;
var G__13061 = d6131;
var G__13062 = e6132;
var G__13063 = f6133;
var G__13064 = g6134;
var G__13065 = h6135;
var G__13066 = i6136;
var G__13067 = j6137;
var G__13068 = k6138;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__13058,G__13059,G__13060,G__13061,G__13062,G__13063,G__13064,G__13065,G__13066,G__13067,G__13068) : f.call(null,G__13058,G__13059,G__13060,G__13061,G__13062,G__13063,G__13064,G__13065,G__13066,G__13067,G__13068));
}
} else {
var l6139 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a6128,b6129,c6130,d6131,e6132,f6133,g6134,h6135,i6136,j6137,k6138,l6139);
} else {
var G__13069 = a6128;
var G__13070 = b6129;
var G__13071 = c6130;
var G__13072 = d6131;
var G__13073 = e6132;
var G__13074 = f6133;
var G__13075 = g6134;
var G__13076 = h6135;
var G__13077 = i6136;
var G__13078 = j6137;
var G__13079 = k6138;
var G__13080 = l6139;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__13069,G__13070,G__13071,G__13072,G__13073,G__13074,G__13075,G__13076,G__13077,G__13078,G__13079,G__13080) : f.call(null,G__13069,G__13070,G__13071,G__13072,G__13073,G__13074,G__13075,G__13076,G__13077,G__13078,G__13079,G__13080));
}
} else {
var m6140 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a6128,b6129,c6130,d6131,e6132,f6133,g6134,h6135,i6136,j6137,k6138,l6139,m6140);
} else {
var G__13081 = a6128;
var G__13082 = b6129;
var G__13083 = c6130;
var G__13084 = d6131;
var G__13085 = e6132;
var G__13086 = f6133;
var G__13087 = g6134;
var G__13088 = h6135;
var G__13089 = i6136;
var G__13090 = j6137;
var G__13091 = k6138;
var G__13092 = l6139;
var G__13093 = m6140;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__13081,G__13082,G__13083,G__13084,G__13085,G__13086,G__13087,G__13088,G__13089,G__13090,G__13091,G__13092,G__13093) : f.call(null,G__13081,G__13082,G__13083,G__13084,G__13085,G__13086,G__13087,G__13088,G__13089,G__13090,G__13091,G__13092,G__13093));
}
} else {
var n6141 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a6128,b6129,c6130,d6131,e6132,f6133,g6134,h6135,i6136,j6137,k6138,l6139,m6140,n6141);
} else {
var G__13094 = a6128;
var G__13095 = b6129;
var G__13096 = c6130;
var G__13097 = d6131;
var G__13098 = e6132;
var G__13099 = f6133;
var G__13100 = g6134;
var G__13101 = h6135;
var G__13102 = i6136;
var G__13103 = j6137;
var G__13104 = k6138;
var G__13105 = l6139;
var G__13106 = m6140;
var G__13107 = n6141;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__13094,G__13095,G__13096,G__13097,G__13098,G__13099,G__13100,G__13101,G__13102,G__13103,G__13104,G__13105,G__13106,G__13107) : f.call(null,G__13094,G__13095,G__13096,G__13097,G__13098,G__13099,G__13100,G__13101,G__13102,G__13103,G__13104,G__13105,G__13106,G__13107));
}
} else {
var o6142 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a6128,b6129,c6130,d6131,e6132,f6133,g6134,h6135,i6136,j6137,k6138,l6139,m6140,n6141,o6142);
} else {
var G__13108 = a6128;
var G__13109 = b6129;
var G__13110 = c6130;
var G__13111 = d6131;
var G__13112 = e6132;
var G__13113 = f6133;
var G__13114 = g6134;
var G__13115 = h6135;
var G__13116 = i6136;
var G__13117 = j6137;
var G__13118 = k6138;
var G__13119 = l6139;
var G__13120 = m6140;
var G__13121 = n6141;
var G__13122 = o6142;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__13108,G__13109,G__13110,G__13111,G__13112,G__13113,G__13114,G__13115,G__13116,G__13117,G__13118,G__13119,G__13120,G__13121,G__13122) : f.call(null,G__13108,G__13109,G__13110,G__13111,G__13112,G__13113,G__13114,G__13115,G__13116,G__13117,G__13118,G__13119,G__13120,G__13121,G__13122));
}
} else {
var p6143 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a6128,b6129,c6130,d6131,e6132,f6133,g6134,h6135,i6136,j6137,k6138,l6139,m6140,n6141,o6142,p6143);
} else {
var G__13123 = a6128;
var G__13124 = b6129;
var G__13125 = c6130;
var G__13126 = d6131;
var G__13127 = e6132;
var G__13128 = f6133;
var G__13129 = g6134;
var G__13130 = h6135;
var G__13131 = i6136;
var G__13132 = j6137;
var G__13133 = k6138;
var G__13134 = l6139;
var G__13135 = m6140;
var G__13136 = n6141;
var G__13137 = o6142;
var G__13138 = p6143;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__13123,G__13124,G__13125,G__13126,G__13127,G__13128,G__13129,G__13130,G__13131,G__13132,G__13133,G__13134,G__13135,G__13136,G__13137,G__13138) : f.call(null,G__13123,G__13124,G__13125,G__13126,G__13127,G__13128,G__13129,G__13130,G__13131,G__13132,G__13133,G__13134,G__13135,G__13136,G__13137,G__13138));
}
} else {
var q6144 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a6128,b6129,c6130,d6131,e6132,f6133,g6134,h6135,i6136,j6137,k6138,l6139,m6140,n6141,o6142,p6143,q6144);
} else {
var G__13139 = a6128;
var G__13140 = b6129;
var G__13141 = c6130;
var G__13142 = d6131;
var G__13143 = e6132;
var G__13144 = f6133;
var G__13145 = g6134;
var G__13146 = h6135;
var G__13147 = i6136;
var G__13148 = j6137;
var G__13149 = k6138;
var G__13150 = l6139;
var G__13151 = m6140;
var G__13152 = n6141;
var G__13153 = o6142;
var G__13154 = p6143;
var G__13155 = q6144;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__13139,G__13140,G__13141,G__13142,G__13143,G__13144,G__13145,G__13146,G__13147,G__13148,G__13149,G__13150,G__13151,G__13152,G__13153,G__13154,G__13155) : f.call(null,G__13139,G__13140,G__13141,G__13142,G__13143,G__13144,G__13145,G__13146,G__13147,G__13148,G__13149,G__13150,G__13151,G__13152,G__13153,G__13154,G__13155));
}
} else {
var r6145 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a6128,b6129,c6130,d6131,e6132,f6133,g6134,h6135,i6136,j6137,k6138,l6139,m6140,n6141,o6142,p6143,q6144,r6145);
} else {
var G__13156 = a6128;
var G__13157 = b6129;
var G__13158 = c6130;
var G__13159 = d6131;
var G__13160 = e6132;
var G__13161 = f6133;
var G__13162 = g6134;
var G__13163 = h6135;
var G__13164 = i6136;
var G__13165 = j6137;
var G__13166 = k6138;
var G__13167 = l6139;
var G__13168 = m6140;
var G__13169 = n6141;
var G__13170 = o6142;
var G__13171 = p6143;
var G__13172 = q6144;
var G__13173 = r6145;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__13156,G__13157,G__13158,G__13159,G__13160,G__13161,G__13162,G__13163,G__13164,G__13165,G__13166,G__13167,G__13168,G__13169,G__13170,G__13171,G__13172,G__13173) : f.call(null,G__13156,G__13157,G__13158,G__13159,G__13160,G__13161,G__13162,G__13163,G__13164,G__13165,G__13166,G__13167,G__13168,G__13169,G__13170,G__13171,G__13172,G__13173));
}
} else {
var s6146 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a6128,b6129,c6130,d6131,e6132,f6133,g6134,h6135,i6136,j6137,k6138,l6139,m6140,n6141,o6142,p6143,q6144,r6145,s6146);
} else {
var G__13174 = a6128;
var G__13175 = b6129;
var G__13176 = c6130;
var G__13177 = d6131;
var G__13178 = e6132;
var G__13179 = f6133;
var G__13180 = g6134;
var G__13181 = h6135;
var G__13182 = i6136;
var G__13183 = j6137;
var G__13184 = k6138;
var G__13185 = l6139;
var G__13186 = m6140;
var G__13187 = n6141;
var G__13188 = o6142;
var G__13189 = p6143;
var G__13190 = q6144;
var G__13191 = r6145;
var G__13192 = s6146;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__13174,G__13175,G__13176,G__13177,G__13178,G__13179,G__13180,G__13181,G__13182,G__13183,G__13184,G__13185,G__13186,G__13187,G__13188,G__13189,G__13190,G__13191,G__13192) : f.call(null,G__13174,G__13175,G__13176,G__13177,G__13178,G__13179,G__13180,G__13181,G__13182,G__13183,G__13184,G__13185,G__13186,G__13187,G__13188,G__13189,G__13190,G__13191,G__13192));
}
} else {
var t6147 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a6128,b6129,c6130,d6131,e6132,f6133,g6134,h6135,i6136,j6137,k6138,l6139,m6140,n6141,o6142,p6143,q6144,r6145,s6146,t6147);
} else {
var G__13193 = a6128;
var G__13194 = b6129;
var G__13195 = c6130;
var G__13196 = d6131;
var G__13197 = e6132;
var G__13198 = f6133;
var G__13199 = g6134;
var G__13200 = h6135;
var G__13201 = i6136;
var G__13202 = j6137;
var G__13203 = k6138;
var G__13204 = l6139;
var G__13205 = m6140;
var G__13206 = n6141;
var G__13207 = o6142;
var G__13208 = p6143;
var G__13209 = q6144;
var G__13210 = r6145;
var G__13211 = s6146;
var G__13212 = t6147;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__13193,G__13194,G__13195,G__13196,G__13197,G__13198,G__13199,G__13200,G__13201,G__13202,G__13203,G__13204,G__13205,G__13206,G__13207,G__13208,G__13209,G__13210,G__13211,G__13212) : f.call(null,G__13193,G__13194,G__13195,G__13196,G__13197,G__13198,G__13199,G__13200,G__13201,G__13202,G__13203,G__13204,G__13205,G__13206,G__13207,G__13208,G__13209,G__13210,G__13211,G__13212));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
 * Applies fn f to the argument list formed by prepending intervening arguments to args.
 * @param {...*} var_args
 */
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__13213__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__13213 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__13214__i = 0, G__13214__a = new Array(arguments.length -  5);
while (G__13214__i < G__13214__a.length) {G__13214__a[G__13214__i] = arguments[G__13214__i + 5]; ++G__13214__i;}
  args = new cljs.core.IndexedSeq(G__13214__a,0);
} 
return G__13213__delegate.call(this,f,a,b,c,d,args);};
G__13213.cljs$lang$maxFixedArity = 5;
G__13213.cljs$lang$applyTo = (function (arglist__13215){
var f = cljs.core.first(arglist__13215);
arglist__13215 = cljs.core.next(arglist__13215);
var a = cljs.core.first(arglist__13215);
arglist__13215 = cljs.core.next(arglist__13215);
var b = cljs.core.first(arglist__13215);
arglist__13215 = cljs.core.next(arglist__13215);
var c = cljs.core.first(arglist__13215);
arglist__13215 = cljs.core.next(arglist__13215);
var d = cljs.core.first(arglist__13215);
var args = cljs.core.rest(arglist__13215);
return G__13213__delegate(f,a,b,c,d,args);
});
G__13213.cljs$core$IFn$_invoke$arity$variadic = G__13213__delegate;
return G__13213;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__13216 = null;
if (arguments.length > 5) {
var G__13217__i = 0, G__13217__a = new Array(arguments.length -  5);
while (G__13217__i < G__13217__a.length) {G__13217__a[G__13217__i] = arguments[G__13217__i + 5]; ++G__13217__i;}
G__13216 = new cljs.core.IndexedSeq(G__13217__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__13216);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
 * Returns an object of the same type and value as obj, with
 * (apply f (meta obj) args) as its metadata.
 * @param {...*} var_args
 */
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__13233 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13233) : f.call(null,G__13233));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__13234 = cljs.core.meta(obj);
var G__13235 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13234,G__13235) : f.call(null,G__13234,G__13235));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__13236 = cljs.core.meta(obj);
var G__13237 = a;
var G__13238 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13236,G__13237,G__13238) : f.call(null,G__13236,G__13237,G__13238));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__13239 = cljs.core.meta(obj);
var G__13240 = a;
var G__13241 = b;
var G__13242 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13239,G__13240,G__13241,G__13242) : f.call(null,G__13239,G__13240,G__13241,G__13242));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__13243 = cljs.core.meta(obj);
var G__13244 = a;
var G__13245 = b;
var G__13246 = c;
var G__13247 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13243,G__13244,G__13245,G__13246,G__13247) : f.call(null,G__13243,G__13244,G__13245,G__13246,G__13247));
})());
});
var vary_meta__7 = (function() { 
var G__13248__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__13248 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__13249__i = 0, G__13249__a = new Array(arguments.length -  6);
while (G__13249__i < G__13249__a.length) {G__13249__a[G__13249__i] = arguments[G__13249__i + 6]; ++G__13249__i;}
  args = new cljs.core.IndexedSeq(G__13249__a,0);
} 
return G__13248__delegate.call(this,obj,f,a,b,c,d,args);};
G__13248.cljs$lang$maxFixedArity = 6;
G__13248.cljs$lang$applyTo = (function (arglist__13250){
var obj = cljs.core.first(arglist__13250);
arglist__13250 = cljs.core.next(arglist__13250);
var f = cljs.core.first(arglist__13250);
arglist__13250 = cljs.core.next(arglist__13250);
var a = cljs.core.first(arglist__13250);
arglist__13250 = cljs.core.next(arglist__13250);
var b = cljs.core.first(arglist__13250);
arglist__13250 = cljs.core.next(arglist__13250);
var c = cljs.core.first(arglist__13250);
arglist__13250 = cljs.core.next(arglist__13250);
var d = cljs.core.first(arglist__13250);
var args = cljs.core.rest(arglist__13250);
return G__13248__delegate(obj,f,a,b,c,d,args);
});
G__13248.cljs$core$IFn$_invoke$arity$variadic = G__13248__delegate;
return G__13248;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__13251 = null;
if (arguments.length > 6) {
var G__13252__i = 0, G__13252__a = new Array(arguments.length -  6);
while (G__13252__i < G__13252__a.length) {G__13252__a[G__13252__i] = arguments[G__13252__i + 6]; ++G__13252__i;}
G__13251 = new cljs.core.IndexedSeq(G__13252__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__13251);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
 * Same as (not (= obj1 obj2))
 * @param {...*} var_args
 */
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__13253__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__13253 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13254__i = 0, G__13254__a = new Array(arguments.length -  2);
while (G__13254__i < G__13254__a.length) {G__13254__a[G__13254__i] = arguments[G__13254__i + 2]; ++G__13254__i;}
  more = new cljs.core.IndexedSeq(G__13254__a,0);
} 
return G__13253__delegate.call(this,x,y,more);};
G__13253.cljs$lang$maxFixedArity = 2;
G__13253.cljs$lang$applyTo = (function (arglist__13255){
var x = cljs.core.first(arglist__13255);
arglist__13255 = cljs.core.next(arglist__13255);
var y = cljs.core.first(arglist__13255);
var more = cljs.core.rest(arglist__13255);
return G__13253__delegate(x,y,more);
});
G__13253.cljs$core$IFn$_invoke$arity$variadic = G__13253__delegate;
return G__13253;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__13256 = null;
if (arguments.length > 2) {
var G__13257__i = 0, G__13257__a = new Array(arguments.length -  2);
while (G__13257__i < G__13257__a.length) {G__13257__a[G__13257__i] = arguments[G__13257__i + 2]; ++G__13257__i;}
G__13256 = new cljs.core.IndexedSeq(G__13257__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13256);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
 * If coll is empty, returns nil, else coll
 */
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t13261 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t13261 = (function (nil_iter,meta13262){
this.nil_iter = nil_iter;
this.meta13262 = meta13262;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t13261.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t13261.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t13261.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t13261.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_13263){
var self__ = this;
var _13263__$1 = this;
return self__.meta13262;
});

cljs.core.t13261.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_13263,meta13262__$1){
var self__ = this;
var _13263__$1 = this;
return (new cljs.core.t13261(self__.nil_iter,meta13262__$1));
});

cljs.core.t13261.cljs$lang$type = true;

cljs.core.t13261.cljs$lang$ctorStr = "cljs.core/t13261";

cljs.core.t13261.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/t13261");
});

cljs.core.__GT_t13261 = (function __GT_t13261(nil_iter__$1,meta13262){
return (new cljs.core.t13261(nil_iter__$1,meta13262));
});

}

return (new cljs.core.t13261(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__5185__auto__ = !((lt.stepper == null));
if(and__5185__auto__){
return self__.iter.hasNext();
} else {
return and__5185__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__13264 = lt;
var G__13265 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__13264,G__13265) : self__.xform.call(null,G__13264,G__13265));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__13266 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__13266) : self__.xform.call(null,G__13266));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__13268 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__13268) : xform.call(null,G__13268));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__13270 = cljs.core.next(iters__$1);
iters__$1 = G__13270;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__6084__auto___13271 = self__.iters.length;
var i_13272 = (0);
while(true){
if((i_13272 < n__6084__auto___13271)){
(self__.nexts[i_13272] = (self__.iters[i_13272]).next());

var G__13273 = (i_13272 + (1));
i_13272 = G__13273;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__5185__auto__ = !((lt.stepper == null));
if(and__5185__auto__){
return this$.hasNext();
} else {
return and__5185__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__13269 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__13269) : self__.xform.call(null,G__13269));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__13278 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__13278) : xform.call(null,G__13278));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6175__auto__ = this;
return cljs.core.es6_iterator(this__6175__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__13279_13283 = cljs.core.seq(colls);
var chunk__13280_13284 = null;
var count__13281_13285 = (0);
var i__13282_13286 = (0);
while(true){
if((i__13282_13286 < count__13281_13285)){
var coll_13287 = chunk__13280_13284.cljs$core$IIndexed$_nth$arity$2(null,i__13282_13286);
iters.push(cljs.core.iter(coll_13287));

var G__13288 = seq__13279_13283;
var G__13289 = chunk__13280_13284;
var G__13290 = count__13281_13285;
var G__13291 = (i__13282_13286 + (1));
seq__13279_13283 = G__13288;
chunk__13280_13284 = G__13289;
count__13281_13285 = G__13290;
i__13282_13286 = G__13291;
continue;
} else {
var temp__4406__auto___13292 = cljs.core.seq(seq__13279_13283);
if(temp__4406__auto___13292){
var seq__13279_13293__$1 = temp__4406__auto___13292;
if(cljs.core.chunked_seq_QMARK_(seq__13279_13293__$1)){
var c__5984__auto___13294 = cljs.core.chunk_first(seq__13279_13293__$1);
var G__13295 = cljs.core.chunk_rest(seq__13279_13293__$1);
var G__13296 = c__5984__auto___13294;
var G__13297 = cljs.core.count(c__5984__auto___13294);
var G__13298 = (0);
seq__13279_13283 = G__13295;
chunk__13280_13284 = G__13296;
count__13281_13285 = G__13297;
i__13282_13286 = G__13298;
continue;
} else {
var coll_13299 = cljs.core.first(seq__13279_13293__$1);
iters.push(cljs.core.iter(coll_13299));

var G__13300 = cljs.core.next(seq__13279_13293__$1);
var G__13301 = null;
var G__13302 = (0);
var G__13303 = (0);
seq__13279_13283 = G__13300;
chunk__13280_13284 = G__13301;
count__13281_13285 = G__13302;
i__13282_13286 = G__13303;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
 * Coerces coll to a (possibly empty) sequence, if it is not already
 * one. Will not force a lazy seq. (sequence nil) yields (), When a
 * transducer is supplied, returns a lazy sequence of applications of
 * the transform to the items in coll(s), i.e. to the set of first
 * items of each coll, followed by the set of second
 * items in each coll, until any one of the colls is exhausted.  Any
 * remaining items in other colls are ignored. The transform should accept
 * number-of-colls arguments
 * @param {...*} var_args
 */
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__5197__auto__ = cljs.core.seq(coll);
if(or__5197__auto__){
return or__5197__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__13304__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__13304 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__13305__i = 0, G__13305__a = new Array(arguments.length -  2);
while (G__13305__i < G__13305__a.length) {G__13305__a[G__13305__i] = arguments[G__13305__i + 2]; ++G__13305__i;}
  colls = new cljs.core.IndexedSeq(G__13305__a,0);
} 
return G__13304__delegate.call(this,xform,coll,colls);};
G__13304.cljs$lang$maxFixedArity = 2;
G__13304.cljs$lang$applyTo = (function (arglist__13306){
var xform = cljs.core.first(arglist__13306);
arglist__13306 = cljs.core.next(arglist__13306);
var coll = cljs.core.first(arglist__13306);
var colls = cljs.core.rest(arglist__13306);
return G__13304__delegate(xform,coll,colls);
});
G__13304.cljs$core$IFn$_invoke$arity$variadic = G__13304__delegate;
return G__13304;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__13307 = null;
if (arguments.length > 2) {
var G__13308__i = 0, G__13308__a = new Array(arguments.length -  2);
while (G__13308__i < G__13308__a.length) {G__13308__a[G__13308__i] = arguments[G__13308__i + 2]; ++G__13308__i;}
G__13307 = new cljs.core.IndexedSeq(G__13308__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__13307);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
 * Returns true if (pred x) is logical true for every x in coll, else
 * false.
 */
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__13310 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13310) : pred.call(null,G__13310));
})())){
var G__13311 = pred;
var G__13312 = cljs.core.next(coll);
pred = G__13311;
coll = G__13312;
continue;
} else {
return false;

}
}
break;
}
});
/**
 * Returns false if (pred x) is logical true for every x in
 * coll, else true.
 */
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
 * Returns the first logical true value of (pred x) for any x in coll,
 * else nil.  One common idiom is to use a set as pred, for example
 * this will return :fred if :fred is in the sequence, otherwise nil:
 * (some #{:fred} coll)
 */
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__5197__auto__ = (function (){var G__13316 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13316) : pred.call(null,G__13316));
})();
if(cljs.core.truth_(or__5197__auto__)){
return or__5197__auto__;
} else {
var G__13317 = pred;
var G__13318 = cljs.core.next(coll);
pred = G__13317;
coll = G__13318;
continue;
}
} else {
return null;
}
break;
}
});
/**
 * Returns false if (pred x) is logical true for any x in coll,
 * else true.
 */
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
 * Returns true if n is even, throws an exception if n is not an integer
 */
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
 * Returns true if n is odd, throws an exception if n is not an integer
 */
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
 * Takes a fn f and returns a fn that takes the same arguments as f,
 * has the same effects, if any, and returns the opposite truth value.
 */
cljs.core.complement = (function complement(f){
return (function() {
var G__13325 = null;
var G__13325__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__13325__1 = (function (x){
return cljs.core.not((function (){var G__13322 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13322) : f.call(null,G__13322));
})());
});
var G__13325__2 = (function (x,y){
return cljs.core.not((function (){var G__13323 = x;
var G__13324 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13323,G__13324) : f.call(null,G__13323,G__13324));
})());
});
var G__13325__3 = (function() { 
var G__13326__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__13326 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__13327__i = 0, G__13327__a = new Array(arguments.length -  2);
while (G__13327__i < G__13327__a.length) {G__13327__a[G__13327__i] = arguments[G__13327__i + 2]; ++G__13327__i;}
  zs = new cljs.core.IndexedSeq(G__13327__a,0);
} 
return G__13326__delegate.call(this,x,y,zs);};
G__13326.cljs$lang$maxFixedArity = 2;
G__13326.cljs$lang$applyTo = (function (arglist__13328){
var x = cljs.core.first(arglist__13328);
arglist__13328 = cljs.core.next(arglist__13328);
var y = cljs.core.first(arglist__13328);
var zs = cljs.core.rest(arglist__13328);
return G__13326__delegate(x,y,zs);
});
G__13326.cljs$core$IFn$_invoke$arity$variadic = G__13326__delegate;
return G__13326;
})()
;
G__13325 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__13325__0.call(this);
case 1:
return G__13325__1.call(this,x);
case 2:
return G__13325__2.call(this,x,y);
default:
var G__13329 = null;
if (arguments.length > 2) {
var G__13330__i = 0, G__13330__a = new Array(arguments.length -  2);
while (G__13330__i < G__13330__a.length) {G__13330__a[G__13330__i] = arguments[G__13330__i + 2]; ++G__13330__i;}
G__13329 = new cljs.core.IndexedSeq(G__13330__a,0);
}
return G__13325__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13329);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13325.cljs$lang$maxFixedArity = 2;
G__13325.cljs$lang$applyTo = G__13325__3.cljs$lang$applyTo;
G__13325.cljs$core$IFn$_invoke$arity$0 = G__13325__0;
G__13325.cljs$core$IFn$_invoke$arity$1 = G__13325__1;
G__13325.cljs$core$IFn$_invoke$arity$2 = G__13325__2;
G__13325.cljs$core$IFn$_invoke$arity$variadic = G__13325__3.cljs$core$IFn$_invoke$arity$variadic;
return G__13325;
})()
});
/**
 * Returns a function that takes any number of arguments and returns x.
 */
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__13331__delegate = function (args){
return x;
};
var G__13331 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__13332__i = 0, G__13332__a = new Array(arguments.length -  0);
while (G__13332__i < G__13332__a.length) {G__13332__a[G__13332__i] = arguments[G__13332__i + 0]; ++G__13332__i;}
  args = new cljs.core.IndexedSeq(G__13332__a,0);
} 
return G__13331__delegate.call(this,args);};
G__13331.cljs$lang$maxFixedArity = 0;
G__13331.cljs$lang$applyTo = (function (arglist__13333){
var args = cljs.core.seq(arglist__13333);
return G__13331__delegate(args);
});
G__13331.cljs$core$IFn$_invoke$arity$variadic = G__13331__delegate;
return G__13331;
})()
;
});
/**
 * Takes a set of functions and returns a fn that is the composition
 * of those fns.  The returned fn takes a variable number of args,
 * applies the rightmost of fns to the args, the next
 * fn (right-to-left) to the result, etc.
 * @param {...*} var_args
 */
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__13388 = null;
var G__13388__0 = (function (){
var G__13361 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13361) : f.call(null,G__13361));
});
var G__13388__1 = (function (x){
var G__13362 = (function (){var G__13363 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13363) : g.call(null,G__13363));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13362) : f.call(null,G__13362));
});
var G__13388__2 = (function (x,y){
var G__13364 = (function (){var G__13365 = x;
var G__13366 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__13365,G__13366) : g.call(null,G__13365,G__13366));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13364) : f.call(null,G__13364));
});
var G__13388__3 = (function (x,y,z){
var G__13367 = (function (){var G__13368 = x;
var G__13369 = y;
var G__13370 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__13368,G__13369,G__13370) : g.call(null,G__13368,G__13369,G__13370));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13367) : f.call(null,G__13367));
});
var G__13388__4 = (function() { 
var G__13389__delegate = function (x,y,z,args){
var G__13371 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13371) : f.call(null,G__13371));
};
var G__13389 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13390__i = 0, G__13390__a = new Array(arguments.length -  3);
while (G__13390__i < G__13390__a.length) {G__13390__a[G__13390__i] = arguments[G__13390__i + 3]; ++G__13390__i;}
  args = new cljs.core.IndexedSeq(G__13390__a,0);
} 
return G__13389__delegate.call(this,x,y,z,args);};
G__13389.cljs$lang$maxFixedArity = 3;
G__13389.cljs$lang$applyTo = (function (arglist__13391){
var x = cljs.core.first(arglist__13391);
arglist__13391 = cljs.core.next(arglist__13391);
var y = cljs.core.first(arglist__13391);
arglist__13391 = cljs.core.next(arglist__13391);
var z = cljs.core.first(arglist__13391);
var args = cljs.core.rest(arglist__13391);
return G__13389__delegate(x,y,z,args);
});
G__13389.cljs$core$IFn$_invoke$arity$variadic = G__13389__delegate;
return G__13389;
})()
;
G__13388 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__13388__0.call(this);
case 1:
return G__13388__1.call(this,x);
case 2:
return G__13388__2.call(this,x,y);
case 3:
return G__13388__3.call(this,x,y,z);
default:
var G__13392 = null;
if (arguments.length > 3) {
var G__13393__i = 0, G__13393__a = new Array(arguments.length -  3);
while (G__13393__i < G__13393__a.length) {G__13393__a[G__13393__i] = arguments[G__13393__i + 3]; ++G__13393__i;}
G__13392 = new cljs.core.IndexedSeq(G__13393__a,0);
}
return G__13388__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13392);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13388.cljs$lang$maxFixedArity = 3;
G__13388.cljs$lang$applyTo = G__13388__4.cljs$lang$applyTo;
G__13388.cljs$core$IFn$_invoke$arity$0 = G__13388__0;
G__13388.cljs$core$IFn$_invoke$arity$1 = G__13388__1;
G__13388.cljs$core$IFn$_invoke$arity$2 = G__13388__2;
G__13388.cljs$core$IFn$_invoke$arity$3 = G__13388__3;
G__13388.cljs$core$IFn$_invoke$arity$variadic = G__13388__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13388;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__13394 = null;
var G__13394__0 = (function (){
var G__13372 = (function (){var G__13373 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13373) : g.call(null,G__13373));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13372) : f.call(null,G__13372));
});
var G__13394__1 = (function (x){
var G__13374 = (function (){var G__13375 = (function (){var G__13376 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__13376) : h.call(null,G__13376));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13375) : g.call(null,G__13375));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13374) : f.call(null,G__13374));
});
var G__13394__2 = (function (x,y){
var G__13377 = (function (){var G__13378 = (function (){var G__13379 = x;
var G__13380 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__13379,G__13380) : h.call(null,G__13379,G__13380));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13378) : g.call(null,G__13378));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13377) : f.call(null,G__13377));
});
var G__13394__3 = (function (x,y,z){
var G__13381 = (function (){var G__13382 = (function (){var G__13383 = x;
var G__13384 = y;
var G__13385 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__13383,G__13384,G__13385) : h.call(null,G__13383,G__13384,G__13385));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13382) : g.call(null,G__13382));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13381) : f.call(null,G__13381));
});
var G__13394__4 = (function() { 
var G__13395__delegate = function (x,y,z,args){
var G__13386 = (function (){var G__13387 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13387) : g.call(null,G__13387));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13386) : f.call(null,G__13386));
};
var G__13395 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13396__i = 0, G__13396__a = new Array(arguments.length -  3);
while (G__13396__i < G__13396__a.length) {G__13396__a[G__13396__i] = arguments[G__13396__i + 3]; ++G__13396__i;}
  args = new cljs.core.IndexedSeq(G__13396__a,0);
} 
return G__13395__delegate.call(this,x,y,z,args);};
G__13395.cljs$lang$maxFixedArity = 3;
G__13395.cljs$lang$applyTo = (function (arglist__13397){
var x = cljs.core.first(arglist__13397);
arglist__13397 = cljs.core.next(arglist__13397);
var y = cljs.core.first(arglist__13397);
arglist__13397 = cljs.core.next(arglist__13397);
var z = cljs.core.first(arglist__13397);
var args = cljs.core.rest(arglist__13397);
return G__13395__delegate(x,y,z,args);
});
G__13395.cljs$core$IFn$_invoke$arity$variadic = G__13395__delegate;
return G__13395;
})()
;
G__13394 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__13394__0.call(this);
case 1:
return G__13394__1.call(this,x);
case 2:
return G__13394__2.call(this,x,y);
case 3:
return G__13394__3.call(this,x,y,z);
default:
var G__13398 = null;
if (arguments.length > 3) {
var G__13399__i = 0, G__13399__a = new Array(arguments.length -  3);
while (G__13399__i < G__13399__a.length) {G__13399__a[G__13399__i] = arguments[G__13399__i + 3]; ++G__13399__i;}
G__13398 = new cljs.core.IndexedSeq(G__13399__a,0);
}
return G__13394__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13398);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13394.cljs$lang$maxFixedArity = 3;
G__13394.cljs$lang$applyTo = G__13394__4.cljs$lang$applyTo;
G__13394.cljs$core$IFn$_invoke$arity$0 = G__13394__0;
G__13394.cljs$core$IFn$_invoke$arity$1 = G__13394__1;
G__13394.cljs$core$IFn$_invoke$arity$2 = G__13394__2;
G__13394.cljs$core$IFn$_invoke$arity$3 = G__13394__3;
G__13394.cljs$core$IFn$_invoke$arity$variadic = G__13394__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13394;
})()
});
var comp__4 = (function() { 
var G__13400__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__13401__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__13402 = cljs.core.first(fs__$2).call(null,ret);
var G__13403 = cljs.core.next(fs__$2);
ret = G__13402;
fs__$2 = G__13403;
continue;
} else {
return ret;
}
break;
}
};
var G__13401 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__13404__i = 0, G__13404__a = new Array(arguments.length -  0);
while (G__13404__i < G__13404__a.length) {G__13404__a[G__13404__i] = arguments[G__13404__i + 0]; ++G__13404__i;}
  args = new cljs.core.IndexedSeq(G__13404__a,0);
} 
return G__13401__delegate.call(this,args);};
G__13401.cljs$lang$maxFixedArity = 0;
G__13401.cljs$lang$applyTo = (function (arglist__13405){
var args = cljs.core.seq(arglist__13405);
return G__13401__delegate(args);
});
G__13401.cljs$core$IFn$_invoke$arity$variadic = G__13401__delegate;
return G__13401;
})()
;
;})(fs__$1))
};
var G__13400 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__13406__i = 0, G__13406__a = new Array(arguments.length -  3);
while (G__13406__i < G__13406__a.length) {G__13406__a[G__13406__i] = arguments[G__13406__i + 3]; ++G__13406__i;}
  fs = new cljs.core.IndexedSeq(G__13406__a,0);
} 
return G__13400__delegate.call(this,f1,f2,f3,fs);};
G__13400.cljs$lang$maxFixedArity = 3;
G__13400.cljs$lang$applyTo = (function (arglist__13407){
var f1 = cljs.core.first(arglist__13407);
arglist__13407 = cljs.core.next(arglist__13407);
var f2 = cljs.core.first(arglist__13407);
arglist__13407 = cljs.core.next(arglist__13407);
var f3 = cljs.core.first(arglist__13407);
var fs = cljs.core.rest(arglist__13407);
return G__13400__delegate(f1,f2,f3,fs);
});
G__13400.cljs$core$IFn$_invoke$arity$variadic = G__13400__delegate;
return G__13400;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__13408 = null;
if (arguments.length > 3) {
var G__13409__i = 0, G__13409__a = new Array(arguments.length -  3);
while (G__13409__i < G__13409__a.length) {G__13409__a[G__13409__i] = arguments[G__13409__i + 3]; ++G__13409__i;}
G__13408 = new cljs.core.IndexedSeq(G__13409__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__13408);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
 * Takes a function f and fewer than the normal arguments to f, and
 * returns a fn that takes a variable number of additional args. When
 * called, the returned function calls f with args + additional args.
 * @param {...*} var_args
 */
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__13494 = null;
var G__13494__0 = (function (){
var G__13452 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13452) : f.call(null,G__13452));
});
var G__13494__1 = (function (x){
var G__13453 = arg1;
var G__13454 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13453,G__13454) : f.call(null,G__13453,G__13454));
});
var G__13494__2 = (function (x,y){
var G__13455 = arg1;
var G__13456 = x;
var G__13457 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13455,G__13456,G__13457) : f.call(null,G__13455,G__13456,G__13457));
});
var G__13494__3 = (function (x,y,z){
var G__13458 = arg1;
var G__13459 = x;
var G__13460 = y;
var G__13461 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13458,G__13459,G__13460,G__13461) : f.call(null,G__13458,G__13459,G__13460,G__13461));
});
var G__13494__4 = (function() { 
var G__13495__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__13495 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13496__i = 0, G__13496__a = new Array(arguments.length -  3);
while (G__13496__i < G__13496__a.length) {G__13496__a[G__13496__i] = arguments[G__13496__i + 3]; ++G__13496__i;}
  args = new cljs.core.IndexedSeq(G__13496__a,0);
} 
return G__13495__delegate.call(this,x,y,z,args);};
G__13495.cljs$lang$maxFixedArity = 3;
G__13495.cljs$lang$applyTo = (function (arglist__13497){
var x = cljs.core.first(arglist__13497);
arglist__13497 = cljs.core.next(arglist__13497);
var y = cljs.core.first(arglist__13497);
arglist__13497 = cljs.core.next(arglist__13497);
var z = cljs.core.first(arglist__13497);
var args = cljs.core.rest(arglist__13497);
return G__13495__delegate(x,y,z,args);
});
G__13495.cljs$core$IFn$_invoke$arity$variadic = G__13495__delegate;
return G__13495;
})()
;
G__13494 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__13494__0.call(this);
case 1:
return G__13494__1.call(this,x);
case 2:
return G__13494__2.call(this,x,y);
case 3:
return G__13494__3.call(this,x,y,z);
default:
var G__13498 = null;
if (arguments.length > 3) {
var G__13499__i = 0, G__13499__a = new Array(arguments.length -  3);
while (G__13499__i < G__13499__a.length) {G__13499__a[G__13499__i] = arguments[G__13499__i + 3]; ++G__13499__i;}
G__13498 = new cljs.core.IndexedSeq(G__13499__a,0);
}
return G__13494__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13498);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13494.cljs$lang$maxFixedArity = 3;
G__13494.cljs$lang$applyTo = G__13494__4.cljs$lang$applyTo;
G__13494.cljs$core$IFn$_invoke$arity$0 = G__13494__0;
G__13494.cljs$core$IFn$_invoke$arity$1 = G__13494__1;
G__13494.cljs$core$IFn$_invoke$arity$2 = G__13494__2;
G__13494.cljs$core$IFn$_invoke$arity$3 = G__13494__3;
G__13494.cljs$core$IFn$_invoke$arity$variadic = G__13494__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13494;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__13500 = null;
var G__13500__0 = (function (){
var G__13462 = arg1;
var G__13463 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13462,G__13463) : f.call(null,G__13462,G__13463));
});
var G__13500__1 = (function (x){
var G__13464 = arg1;
var G__13465 = arg2;
var G__13466 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13464,G__13465,G__13466) : f.call(null,G__13464,G__13465,G__13466));
});
var G__13500__2 = (function (x,y){
var G__13467 = arg1;
var G__13468 = arg2;
var G__13469 = x;
var G__13470 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13467,G__13468,G__13469,G__13470) : f.call(null,G__13467,G__13468,G__13469,G__13470));
});
var G__13500__3 = (function (x,y,z){
var G__13471 = arg1;
var G__13472 = arg2;
var G__13473 = x;
var G__13474 = y;
var G__13475 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13471,G__13472,G__13473,G__13474,G__13475) : f.call(null,G__13471,G__13472,G__13473,G__13474,G__13475));
});
var G__13500__4 = (function() { 
var G__13501__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__13501 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13502__i = 0, G__13502__a = new Array(arguments.length -  3);
while (G__13502__i < G__13502__a.length) {G__13502__a[G__13502__i] = arguments[G__13502__i + 3]; ++G__13502__i;}
  args = new cljs.core.IndexedSeq(G__13502__a,0);
} 
return G__13501__delegate.call(this,x,y,z,args);};
G__13501.cljs$lang$maxFixedArity = 3;
G__13501.cljs$lang$applyTo = (function (arglist__13503){
var x = cljs.core.first(arglist__13503);
arglist__13503 = cljs.core.next(arglist__13503);
var y = cljs.core.first(arglist__13503);
arglist__13503 = cljs.core.next(arglist__13503);
var z = cljs.core.first(arglist__13503);
var args = cljs.core.rest(arglist__13503);
return G__13501__delegate(x,y,z,args);
});
G__13501.cljs$core$IFn$_invoke$arity$variadic = G__13501__delegate;
return G__13501;
})()
;
G__13500 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__13500__0.call(this);
case 1:
return G__13500__1.call(this,x);
case 2:
return G__13500__2.call(this,x,y);
case 3:
return G__13500__3.call(this,x,y,z);
default:
var G__13504 = null;
if (arguments.length > 3) {
var G__13505__i = 0, G__13505__a = new Array(arguments.length -  3);
while (G__13505__i < G__13505__a.length) {G__13505__a[G__13505__i] = arguments[G__13505__i + 3]; ++G__13505__i;}
G__13504 = new cljs.core.IndexedSeq(G__13505__a,0);
}
return G__13500__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13504);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13500.cljs$lang$maxFixedArity = 3;
G__13500.cljs$lang$applyTo = G__13500__4.cljs$lang$applyTo;
G__13500.cljs$core$IFn$_invoke$arity$0 = G__13500__0;
G__13500.cljs$core$IFn$_invoke$arity$1 = G__13500__1;
G__13500.cljs$core$IFn$_invoke$arity$2 = G__13500__2;
G__13500.cljs$core$IFn$_invoke$arity$3 = G__13500__3;
G__13500.cljs$core$IFn$_invoke$arity$variadic = G__13500__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13500;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__13506 = null;
var G__13506__0 = (function (){
var G__13476 = arg1;
var G__13477 = arg2;
var G__13478 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13476,G__13477,G__13478) : f.call(null,G__13476,G__13477,G__13478));
});
var G__13506__1 = (function (x){
var G__13479 = arg1;
var G__13480 = arg2;
var G__13481 = arg3;
var G__13482 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13479,G__13480,G__13481,G__13482) : f.call(null,G__13479,G__13480,G__13481,G__13482));
});
var G__13506__2 = (function (x,y){
var G__13483 = arg1;
var G__13484 = arg2;
var G__13485 = arg3;
var G__13486 = x;
var G__13487 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13483,G__13484,G__13485,G__13486,G__13487) : f.call(null,G__13483,G__13484,G__13485,G__13486,G__13487));
});
var G__13506__3 = (function (x,y,z){
var G__13488 = arg1;
var G__13489 = arg2;
var G__13490 = arg3;
var G__13491 = x;
var G__13492 = y;
var G__13493 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__13488,G__13489,G__13490,G__13491,G__13492,G__13493) : f.call(null,G__13488,G__13489,G__13490,G__13491,G__13492,G__13493));
});
var G__13506__4 = (function() { 
var G__13507__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__13507 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13508__i = 0, G__13508__a = new Array(arguments.length -  3);
while (G__13508__i < G__13508__a.length) {G__13508__a[G__13508__i] = arguments[G__13508__i + 3]; ++G__13508__i;}
  args = new cljs.core.IndexedSeq(G__13508__a,0);
} 
return G__13507__delegate.call(this,x,y,z,args);};
G__13507.cljs$lang$maxFixedArity = 3;
G__13507.cljs$lang$applyTo = (function (arglist__13509){
var x = cljs.core.first(arglist__13509);
arglist__13509 = cljs.core.next(arglist__13509);
var y = cljs.core.first(arglist__13509);
arglist__13509 = cljs.core.next(arglist__13509);
var z = cljs.core.first(arglist__13509);
var args = cljs.core.rest(arglist__13509);
return G__13507__delegate(x,y,z,args);
});
G__13507.cljs$core$IFn$_invoke$arity$variadic = G__13507__delegate;
return G__13507;
})()
;
G__13506 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__13506__0.call(this);
case 1:
return G__13506__1.call(this,x);
case 2:
return G__13506__2.call(this,x,y);
case 3:
return G__13506__3.call(this,x,y,z);
default:
var G__13510 = null;
if (arguments.length > 3) {
var G__13511__i = 0, G__13511__a = new Array(arguments.length -  3);
while (G__13511__i < G__13511__a.length) {G__13511__a[G__13511__i] = arguments[G__13511__i + 3]; ++G__13511__i;}
G__13510 = new cljs.core.IndexedSeq(G__13511__a,0);
}
return G__13506__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13510);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13506.cljs$lang$maxFixedArity = 3;
G__13506.cljs$lang$applyTo = G__13506__4.cljs$lang$applyTo;
G__13506.cljs$core$IFn$_invoke$arity$0 = G__13506__0;
G__13506.cljs$core$IFn$_invoke$arity$1 = G__13506__1;
G__13506.cljs$core$IFn$_invoke$arity$2 = G__13506__2;
G__13506.cljs$core$IFn$_invoke$arity$3 = G__13506__3;
G__13506.cljs$core$IFn$_invoke$arity$variadic = G__13506__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13506;
})()
});
var partial__5 = (function() { 
var G__13512__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__13513__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__13513 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__13514__i = 0, G__13514__a = new Array(arguments.length -  0);
while (G__13514__i < G__13514__a.length) {G__13514__a[G__13514__i] = arguments[G__13514__i + 0]; ++G__13514__i;}
  args = new cljs.core.IndexedSeq(G__13514__a,0);
} 
return G__13513__delegate.call(this,args);};
G__13513.cljs$lang$maxFixedArity = 0;
G__13513.cljs$lang$applyTo = (function (arglist__13515){
var args = cljs.core.seq(arglist__13515);
return G__13513__delegate(args);
});
G__13513.cljs$core$IFn$_invoke$arity$variadic = G__13513__delegate;
return G__13513;
})()
;
};
var G__13512 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__13516__i = 0, G__13516__a = new Array(arguments.length -  4);
while (G__13516__i < G__13516__a.length) {G__13516__a[G__13516__i] = arguments[G__13516__i + 4]; ++G__13516__i;}
  more = new cljs.core.IndexedSeq(G__13516__a,0);
} 
return G__13512__delegate.call(this,f,arg1,arg2,arg3,more);};
G__13512.cljs$lang$maxFixedArity = 4;
G__13512.cljs$lang$applyTo = (function (arglist__13517){
var f = cljs.core.first(arglist__13517);
arglist__13517 = cljs.core.next(arglist__13517);
var arg1 = cljs.core.first(arglist__13517);
arglist__13517 = cljs.core.next(arglist__13517);
var arg2 = cljs.core.first(arglist__13517);
arglist__13517 = cljs.core.next(arglist__13517);
var arg3 = cljs.core.first(arglist__13517);
var more = cljs.core.rest(arglist__13517);
return G__13512__delegate(f,arg1,arg2,arg3,more);
});
G__13512.cljs$core$IFn$_invoke$arity$variadic = G__13512__delegate;
return G__13512;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__13518 = null;
if (arguments.length > 4) {
var G__13519__i = 0, G__13519__a = new Array(arguments.length -  4);
while (G__13519__i < G__13519__a.length) {G__13519__a[G__13519__i] = arguments[G__13519__i + 4]; ++G__13519__i;}
G__13518 = new cljs.core.IndexedSeq(G__13519__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__13518);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
 * Takes a function f, and returns a function that calls f, replacing
 * a nil first argument to f with the supplied value x. Higher arity
 * versions can replace arguments in the second and third
 * positions (y, z). Note that the function f can take any number of
 * arguments, not just the one(s) being nil-patched.
 */
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__13552 = null;
var G__13552__1 = (function (a){
var G__13536 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13536) : f.call(null,G__13536));
});
var G__13552__2 = (function (a,b){
var G__13537 = (((a == null))?x:a);
var G__13538 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13537,G__13538) : f.call(null,G__13537,G__13538));
});
var G__13552__3 = (function (a,b,c){
var G__13539 = (((a == null))?x:a);
var G__13540 = b;
var G__13541 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13539,G__13540,G__13541) : f.call(null,G__13539,G__13540,G__13541));
});
var G__13552__4 = (function() { 
var G__13553__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__13553 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__13554__i = 0, G__13554__a = new Array(arguments.length -  3);
while (G__13554__i < G__13554__a.length) {G__13554__a[G__13554__i] = arguments[G__13554__i + 3]; ++G__13554__i;}
  ds = new cljs.core.IndexedSeq(G__13554__a,0);
} 
return G__13553__delegate.call(this,a,b,c,ds);};
G__13553.cljs$lang$maxFixedArity = 3;
G__13553.cljs$lang$applyTo = (function (arglist__13555){
var a = cljs.core.first(arglist__13555);
arglist__13555 = cljs.core.next(arglist__13555);
var b = cljs.core.first(arglist__13555);
arglist__13555 = cljs.core.next(arglist__13555);
var c = cljs.core.first(arglist__13555);
var ds = cljs.core.rest(arglist__13555);
return G__13553__delegate(a,b,c,ds);
});
G__13553.cljs$core$IFn$_invoke$arity$variadic = G__13553__delegate;
return G__13553;
})()
;
G__13552 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__13552__1.call(this,a);
case 2:
return G__13552__2.call(this,a,b);
case 3:
return G__13552__3.call(this,a,b,c);
default:
var G__13556 = null;
if (arguments.length > 3) {
var G__13557__i = 0, G__13557__a = new Array(arguments.length -  3);
while (G__13557__i < G__13557__a.length) {G__13557__a[G__13557__i] = arguments[G__13557__i + 3]; ++G__13557__i;}
G__13556 = new cljs.core.IndexedSeq(G__13557__a,0);
}
return G__13552__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__13556);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13552.cljs$lang$maxFixedArity = 3;
G__13552.cljs$lang$applyTo = G__13552__4.cljs$lang$applyTo;
G__13552.cljs$core$IFn$_invoke$arity$1 = G__13552__1;
G__13552.cljs$core$IFn$_invoke$arity$2 = G__13552__2;
G__13552.cljs$core$IFn$_invoke$arity$3 = G__13552__3;
G__13552.cljs$core$IFn$_invoke$arity$variadic = G__13552__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13552;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__13558 = null;
var G__13558__2 = (function (a,b){
var G__13542 = (((a == null))?x:a);
var G__13543 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13542,G__13543) : f.call(null,G__13542,G__13543));
});
var G__13558__3 = (function (a,b,c){
var G__13544 = (((a == null))?x:a);
var G__13545 = (((b == null))?y:b);
var G__13546 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13544,G__13545,G__13546) : f.call(null,G__13544,G__13545,G__13546));
});
var G__13558__4 = (function() { 
var G__13559__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__13559 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__13560__i = 0, G__13560__a = new Array(arguments.length -  3);
while (G__13560__i < G__13560__a.length) {G__13560__a[G__13560__i] = arguments[G__13560__i + 3]; ++G__13560__i;}
  ds = new cljs.core.IndexedSeq(G__13560__a,0);
} 
return G__13559__delegate.call(this,a,b,c,ds);};
G__13559.cljs$lang$maxFixedArity = 3;
G__13559.cljs$lang$applyTo = (function (arglist__13561){
var a = cljs.core.first(arglist__13561);
arglist__13561 = cljs.core.next(arglist__13561);
var b = cljs.core.first(arglist__13561);
arglist__13561 = cljs.core.next(arglist__13561);
var c = cljs.core.first(arglist__13561);
var ds = cljs.core.rest(arglist__13561);
return G__13559__delegate(a,b,c,ds);
});
G__13559.cljs$core$IFn$_invoke$arity$variadic = G__13559__delegate;
return G__13559;
})()
;
G__13558 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__13558__2.call(this,a,b);
case 3:
return G__13558__3.call(this,a,b,c);
default:
var G__13562 = null;
if (arguments.length > 3) {
var G__13563__i = 0, G__13563__a = new Array(arguments.length -  3);
while (G__13563__i < G__13563__a.length) {G__13563__a[G__13563__i] = arguments[G__13563__i + 3]; ++G__13563__i;}
G__13562 = new cljs.core.IndexedSeq(G__13563__a,0);
}
return G__13558__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__13562);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13558.cljs$lang$maxFixedArity = 3;
G__13558.cljs$lang$applyTo = G__13558__4.cljs$lang$applyTo;
G__13558.cljs$core$IFn$_invoke$arity$2 = G__13558__2;
G__13558.cljs$core$IFn$_invoke$arity$3 = G__13558__3;
G__13558.cljs$core$IFn$_invoke$arity$variadic = G__13558__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13558;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__13564 = null;
var G__13564__2 = (function (a,b){
var G__13547 = (((a == null))?x:a);
var G__13548 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13547,G__13548) : f.call(null,G__13547,G__13548));
});
var G__13564__3 = (function (a,b,c){
var G__13549 = (((a == null))?x:a);
var G__13550 = (((b == null))?y:b);
var G__13551 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13549,G__13550,G__13551) : f.call(null,G__13549,G__13550,G__13551));
});
var G__13564__4 = (function() { 
var G__13565__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__13565 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__13566__i = 0, G__13566__a = new Array(arguments.length -  3);
while (G__13566__i < G__13566__a.length) {G__13566__a[G__13566__i] = arguments[G__13566__i + 3]; ++G__13566__i;}
  ds = new cljs.core.IndexedSeq(G__13566__a,0);
} 
return G__13565__delegate.call(this,a,b,c,ds);};
G__13565.cljs$lang$maxFixedArity = 3;
G__13565.cljs$lang$applyTo = (function (arglist__13567){
var a = cljs.core.first(arglist__13567);
arglist__13567 = cljs.core.next(arglist__13567);
var b = cljs.core.first(arglist__13567);
arglist__13567 = cljs.core.next(arglist__13567);
var c = cljs.core.first(arglist__13567);
var ds = cljs.core.rest(arglist__13567);
return G__13565__delegate(a,b,c,ds);
});
G__13565.cljs$core$IFn$_invoke$arity$variadic = G__13565__delegate;
return G__13565;
})()
;
G__13564 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__13564__2.call(this,a,b);
case 3:
return G__13564__3.call(this,a,b,c);
default:
var G__13568 = null;
if (arguments.length > 3) {
var G__13569__i = 0, G__13569__a = new Array(arguments.length -  3);
while (G__13569__i < G__13569__a.length) {G__13569__a[G__13569__i] = arguments[G__13569__i + 3]; ++G__13569__i;}
G__13568 = new cljs.core.IndexedSeq(G__13569__a,0);
}
return G__13564__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__13568);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13564.cljs$lang$maxFixedArity = 3;
G__13564.cljs$lang$applyTo = G__13564__4.cljs$lang$applyTo;
G__13564.cljs$core$IFn$_invoke$arity$2 = G__13564__2;
G__13564.cljs$core$IFn$_invoke$arity$3 = G__13564__3;
G__13564.cljs$core$IFn$_invoke$arity$variadic = G__13564__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13564;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
 * Returns a lazy sequence consisting of the result of applying f to 0
 * and the first item of coll, followed by applying f to 1 and the second
 * item in coll, etc, until coll is exhausted. Thus function f should
 * accept 2 arguments, index and item.
 */
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__13600 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__13600) : cljs.core.volatile_BANG_.call(null,G__13600));
})();
return ((function (i){
return (function() {
var G__13630 = null;
var G__13630__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13630__1 = (function (result){
var G__13601 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13601) : rf.call(null,G__13601));
});
var G__13630__2 = (function (result,input){
var G__13602 = result;
var G__13603 = (function (){var G__13604 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__13605 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13604,G__13605) : f.call(null,G__13604,G__13605));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13602,G__13603) : rf.call(null,G__13602,G__13603));
});
G__13630 = function(result,input){
switch(arguments.length){
case 0:
return G__13630__0.call(this);
case 1:
return G__13630__1.call(this,result);
case 2:
return G__13630__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13630.cljs$core$IFn$_invoke$arity$0 = G__13630__0;
G__13630.cljs$core$IFn$_invoke$arity$1 = G__13630__1;
G__13630.cljs$core$IFn$_invoke$arity$2 = G__13630__2;
return G__13630;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll__$1);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__6084__auto___13631 = size;
var i_13632 = (0);
while(true){
if((i_13632 < n__6084__auto___13631)){
cljs.core.chunk_append(b,(function (){var G__13626 = (idx + i_13632);
var G__13627 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_13632);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13626,G__13627) : f.call(null,G__13626,G__13627));
})());

var G__13633 = (i_13632 + (1));
i_13632 = G__13633;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__13628 = idx;
var G__13629 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13628,G__13629) : f.call(null,G__13628,G__13629));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
 * Returns a lazy sequence of the non-nil results of (f item). Note,
 * this means false return values will be included.  f must be free of
 * side-effects.  Returns a transducer when no collection is provided.
 */
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__13652 = null;
var G__13652__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13652__1 = (function (result){
var G__13646 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13646) : rf.call(null,G__13646));
});
var G__13652__2 = (function (result,input){
var v = (function (){var G__13647 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13647) : f.call(null,G__13647));
})();
if((v == null)){
return result;
} else {
var G__13648 = result;
var G__13649 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13648,G__13649) : rf.call(null,G__13648,G__13649));
}
});
G__13652 = function(result,input){
switch(arguments.length){
case 0:
return G__13652__0.call(this);
case 1:
return G__13652__1.call(this,result);
case 2:
return G__13652__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13652.cljs$core$IFn$_invoke$arity$0 = G__13652__0;
G__13652.cljs$core$IFn$_invoke$arity$1 = G__13652__1;
G__13652.cljs$core$IFn$_invoke$arity$2 = G__13652__2;
return G__13652;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__6084__auto___13653 = size;
var i_13654 = (0);
while(true){
if((i_13654 < n__6084__auto___13653)){
var x_13655 = (function (){var G__13650 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_13654);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13650) : f.call(null,G__13650));
})();
if((x_13655 == null)){
} else {
cljs.core.chunk_append(b,x_13655);
}

var G__13656 = (i_13654 + (1));
i_13654 = G__13656;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__13651 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13651) : f.call(null,G__13651));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__13657 = this$__$1;
return goog.getUid(G__13657);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__13658 = cljs.core.seq(self__.watches);
var chunk__13659 = null;
var count__13660 = (0);
var i__13661 = (0);
while(true){
if((i__13661 < count__13660)){
var vec__13662 = chunk__13659.cljs$core$IIndexed$_nth$arity$2(null,i__13661);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13662,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13662,(1),null);
var G__13663_13672 = key;
var G__13664_13673 = this$__$1;
var G__13665_13674 = oldval;
var G__13666_13675 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13663_13672,G__13664_13673,G__13665_13674,G__13666_13675) : f.call(null,G__13663_13672,G__13664_13673,G__13665_13674,G__13666_13675));

var G__13676 = seq__13658;
var G__13677 = chunk__13659;
var G__13678 = count__13660;
var G__13679 = (i__13661 + (1));
seq__13658 = G__13676;
chunk__13659 = G__13677;
count__13660 = G__13678;
i__13661 = G__13679;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__13658);
if(temp__4406__auto__){
var seq__13658__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__13658__$1)){
var c__5984__auto__ = cljs.core.chunk_first(seq__13658__$1);
var G__13680 = cljs.core.chunk_rest(seq__13658__$1);
var G__13681 = c__5984__auto__;
var G__13682 = cljs.core.count(c__5984__auto__);
var G__13683 = (0);
seq__13658 = G__13680;
chunk__13659 = G__13681;
count__13660 = G__13682;
i__13661 = G__13683;
continue;
} else {
var vec__13667 = cljs.core.first(seq__13658__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13667,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13667,(1),null);
var G__13668_13684 = key;
var G__13669_13685 = this$__$1;
var G__13670_13686 = oldval;
var G__13671_13687 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13668_13684,G__13669_13685,G__13670_13686,G__13671_13687) : f.call(null,G__13668_13684,G__13669_13685,G__13670_13686,G__13671_13687));

var G__13688 = cljs.core.next(seq__13658__$1);
var G__13689 = null;
var G__13690 = (0);
var G__13691 = (0);
seq__13658 = G__13688;
chunk__13659 = G__13689;
count__13660 = G__13690;
i__13661 = G__13691;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
 * Creates and returns an Atom with an initial value of x and zero or
 * more options (in any order):
 * 
 * :meta metadata-map
 * 
 * :validator validate-fn
 * 
 * If metadata-map is supplied, it will be come the metadata on the
 * atom. validate-fn must be nil or a side-effect-free fn of one
 * argument, which will be passed the intended new state on any state
 * change. If the new state is unacceptable, the validate-fn should
 * return false or throw an Error.  If either of these error conditions
 * occur, then the value of the atom will not change.
 * @param {...*} var_args
 */
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__13695__delegate = function (x,p__13692){
var map__13694 = p__13692;
var map__13694__$1 = ((cljs.core.seq_QMARK_(map__13694))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__13694):map__13694);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13694__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13694__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__13695 = function (x,var_args){
var p__13692 = null;
if (arguments.length > 1) {
var G__13696__i = 0, G__13696__a = new Array(arguments.length -  1);
while (G__13696__i < G__13696__a.length) {G__13696__a[G__13696__i] = arguments[G__13696__i + 1]; ++G__13696__i;}
  p__13692 = new cljs.core.IndexedSeq(G__13696__a,0);
} 
return G__13695__delegate.call(this,x,p__13692);};
G__13695.cljs$lang$maxFixedArity = 1;
G__13695.cljs$lang$applyTo = (function (arglist__13697){
var x = cljs.core.first(arglist__13697);
var p__13692 = cljs.core.rest(arglist__13697);
return G__13695__delegate(x,p__13692);
});
G__13695.cljs$core$IFn$_invoke$arity$variadic = G__13695__delegate;
return G__13695;
})()
;
atom = function(x,var_args){
var p__13692 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__13698 = null;
if (arguments.length > 1) {
var G__13699__i = 0, G__13699__a = new Array(arguments.length -  1);
while (G__13699__i < G__13699__a.length) {G__13699__a[G__13699__i] = arguments[G__13699__i + 1]; ++G__13699__i;}
G__13698 = new cljs.core.IndexedSeq(G__13699__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__13698);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
 * Sets the value of atom to newval without regard for the
 * current value. Returns newval.
 */
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__13702 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__13702) : validate.call(null,G__13702));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__13703 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__13703) : cljs.core.pr_str.call(null,G__13703));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
 * Atomically swaps the value of atom to be:
 * (apply f current-value-of-atom args). Note that f may be called
 * multiple times, and thus should be free of side effects.  Returns
 * the value that was swapped in.
 * @param {...*} var_args
 */
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__13710 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13710) : f.call(null,G__13710));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__13711 = a.state;
var G__13712 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13711,G__13712) : f.call(null,G__13711,G__13712));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__13713 = a.state;
var G__13714 = x;
var G__13715 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13713,G__13714,G__13715) : f.call(null,G__13713,G__13714,G__13715));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__13716__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__13716 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__13717__i = 0, G__13717__a = new Array(arguments.length -  4);
while (G__13717__i < G__13717__a.length) {G__13717__a[G__13717__i] = arguments[G__13717__i + 4]; ++G__13717__i;}
  more = new cljs.core.IndexedSeq(G__13717__a,0);
} 
return G__13716__delegate.call(this,a,f,x,y,more);};
G__13716.cljs$lang$maxFixedArity = 4;
G__13716.cljs$lang$applyTo = (function (arglist__13718){
var a = cljs.core.first(arglist__13718);
arglist__13718 = cljs.core.next(arglist__13718);
var f = cljs.core.first(arglist__13718);
arglist__13718 = cljs.core.next(arglist__13718);
var x = cljs.core.first(arglist__13718);
arglist__13718 = cljs.core.next(arglist__13718);
var y = cljs.core.first(arglist__13718);
var more = cljs.core.rest(arglist__13718);
return G__13716__delegate(a,f,x,y,more);
});
G__13716.cljs$core$IFn$_invoke$arity$variadic = G__13716__delegate;
return G__13716;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__13719 = null;
if (arguments.length > 4) {
var G__13720__i = 0, G__13720__a = new Array(arguments.length -  4);
while (G__13720__i < G__13720__a.length) {G__13720__a[G__13720__i] = arguments[G__13720__i + 4]; ++G__13720__i;}
G__13719 = new cljs.core.IndexedSeq(G__13720__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__13719);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
 * Atomically sets the value of atom to newval if and only if the
 * current value of the atom is equal to oldval. Returns true if
 * set happened, else false.
 */
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
 * Sets the validator-fn for an atom. validator-fn must be nil or a
 * side-effect-free fn of one argument, which will be passed the intended
 * new state on any state change. If the new state is unacceptable, the
 * validator-fn should return false or throw an Error. If the current state
 * is not acceptable to the new validator, an Error will be thrown and the
 * validator will not be changed.
 */
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
 * Gets the validator-fn for a var/ref/agent/atom.
 */
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
 * Creates and returns a Volatile with an initial value of val.
 */
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
 * Returns true if x is a volatile.
 */
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
 * Sets the value of volatile to newval without regard for the
 * current value. Returns newval.
 */
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
 * Returns a lazy sequence of the non-nil results of (f index item). Note,
 * this means false return values will be included.  f must be free of
 * side-effects.  Returns a stateful transducer when no collection is
 * provided.
 */
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__13787 = null;
var G__13787__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13787__1 = (function (result){
var G__13754 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13754) : rf.call(null,G__13754));
});
var G__13787__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__13755 = i;
var G__13756 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13755,G__13756) : f.call(null,G__13755,G__13756));
})();
if((v == null)){
return result;
} else {
var G__13757 = result;
var G__13758 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13757,G__13758) : rf.call(null,G__13757,G__13758));
}
});
G__13787 = function(result,input){
switch(arguments.length){
case 0:
return G__13787__0.call(this);
case 1:
return G__13787__1.call(this,result);
case 2:
return G__13787__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13787.cljs$core$IFn$_invoke$arity$0 = G__13787__0;
G__13787.cljs$core$IFn$_invoke$arity$1 = G__13787__1;
G__13787.cljs$core$IFn$_invoke$arity$2 = G__13787__2;
return G__13787;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll__$1);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__6084__auto___13788 = size;
var i_13789 = (0);
while(true){
if((i_13789 < n__6084__auto___13788)){
var x_13790 = (function (){var G__13783 = (idx + i_13789);
var G__13784 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_13789);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13783,G__13784) : f.call(null,G__13783,G__13784));
})();
if((x_13790 == null)){
} else {
cljs.core.chunk_append(b,x_13790);
}

var G__13791 = (i_13789 + (1));
i_13789 = G__13791;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__13785 = idx;
var G__13786 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13785,G__13786) : f.call(null,G__13785,G__13786));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
 * Takes a set of predicates and returns a function f that returns true if all of its
 * composing predicates return a logical true value against all of its arguments, else it returns
 * false. Note that f is short-circuiting in that it will stop execution on the first
 * argument that triggers a logical false result against the original predicates.
 * @param {...*} var_args
 */
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__14005 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14005) : p.call(null,G__14005));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__5185__auto__ = (function (){var G__14007 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14007) : p.call(null,G__14007));
})();
if(cljs.core.truth_(and__5185__auto__)){
var G__14008 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14008) : p.call(null,G__14008));
} else {
return and__5185__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__5185__auto__ = (function (){var G__14010 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14010) : p.call(null,G__14010));
})();
if(cljs.core.truth_(and__5185__auto__)){
var and__5185__auto____$1 = (function (){var G__14012 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14012) : p.call(null,G__14012));
})();
if(cljs.core.truth_(and__5185__auto____$1)){
var G__14013 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14013) : p.call(null,G__14013));
} else {
return and__5185__auto____$1;
}
} else {
return and__5185__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__14182__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__14182 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14183__i = 0, G__14183__a = new Array(arguments.length -  3);
while (G__14183__i < G__14183__a.length) {G__14183__a[G__14183__i] = arguments[G__14183__i + 3]; ++G__14183__i;}
  args = new cljs.core.IndexedSeq(G__14183__a,0);
} 
return G__14182__delegate.call(this,x,y,z,args);};
G__14182.cljs$lang$maxFixedArity = 3;
G__14182.cljs$lang$applyTo = (function (arglist__14184){
var x = cljs.core.first(arglist__14184);
arglist__14184 = cljs.core.next(arglist__14184);
var y = cljs.core.first(arglist__14184);
arglist__14184 = cljs.core.next(arglist__14184);
var z = cljs.core.first(arglist__14184);
var args = cljs.core.rest(arglist__14184);
return G__14182__delegate(x,y,z,args);
});
G__14182.cljs$core$IFn$_invoke$arity$variadic = G__14182__delegate;
return G__14182;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__14185 = null;
if (arguments.length > 3) {
var G__14186__i = 0, G__14186__a = new Array(arguments.length -  3);
while (G__14186__i < G__14186__a.length) {G__14186__a[G__14186__i] = arguments[G__14186__i + 3]; ++G__14186__i;}
G__14185 = new cljs.core.IndexedSeq(G__14186__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14185);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__5185__auto__ = (function (){var G__14045 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14045) : p1.call(null,G__14045));
})();
if(cljs.core.truth_(and__5185__auto__)){
var G__14046 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14046) : p2.call(null,G__14046));
} else {
return and__5185__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__5185__auto__ = (function (){var G__14048 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14048) : p1.call(null,G__14048));
})();
if(cljs.core.truth_(and__5185__auto__)){
var and__5185__auto____$1 = (function (){var G__14050 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14050) : p1.call(null,G__14050));
})();
if(cljs.core.truth_(and__5185__auto____$1)){
var and__5185__auto____$2 = (function (){var G__14052 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14052) : p2.call(null,G__14052));
})();
if(cljs.core.truth_(and__5185__auto____$2)){
var G__14053 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14053) : p2.call(null,G__14053));
} else {
return and__5185__auto____$2;
}
} else {
return and__5185__auto____$1;
}
} else {
return and__5185__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__5185__auto__ = (function (){var G__14055 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14055) : p1.call(null,G__14055));
})();
if(cljs.core.truth_(and__5185__auto__)){
var and__5185__auto____$1 = (function (){var G__14057 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14057) : p1.call(null,G__14057));
})();
if(cljs.core.truth_(and__5185__auto____$1)){
var and__5185__auto____$2 = (function (){var G__14059 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14059) : p1.call(null,G__14059));
})();
if(cljs.core.truth_(and__5185__auto____$2)){
var and__5185__auto____$3 = (function (){var G__14061 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14061) : p2.call(null,G__14061));
})();
if(cljs.core.truth_(and__5185__auto____$3)){
var and__5185__auto____$4 = (function (){var G__14063 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14063) : p2.call(null,G__14063));
})();
if(cljs.core.truth_(and__5185__auto____$4)){
var G__14064 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14064) : p2.call(null,G__14064));
} else {
return and__5185__auto____$4;
}
} else {
return and__5185__auto____$3;
}
} else {
return and__5185__auto____$2;
}
} else {
return and__5185__auto____$1;
}
} else {
return and__5185__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__14187__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__13792_SHARP_){
var and__5185__auto__ = (function (){var G__14069 = p1__13792_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14069) : p1.call(null,G__14069));
})();
if(cljs.core.truth_(and__5185__auto__)){
var G__14070 = p1__13792_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14070) : p2.call(null,G__14070));
} else {
return and__5185__auto__;
}
}),args)));
};
var G__14187 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14188__i = 0, G__14188__a = new Array(arguments.length -  3);
while (G__14188__i < G__14188__a.length) {G__14188__a[G__14188__i] = arguments[G__14188__i + 3]; ++G__14188__i;}
  args = new cljs.core.IndexedSeq(G__14188__a,0);
} 
return G__14187__delegate.call(this,x,y,z,args);};
G__14187.cljs$lang$maxFixedArity = 3;
G__14187.cljs$lang$applyTo = (function (arglist__14189){
var x = cljs.core.first(arglist__14189);
arglist__14189 = cljs.core.next(arglist__14189);
var y = cljs.core.first(arglist__14189);
arglist__14189 = cljs.core.next(arglist__14189);
var z = cljs.core.first(arglist__14189);
var args = cljs.core.rest(arglist__14189);
return G__14187__delegate(x,y,z,args);
});
G__14187.cljs$core$IFn$_invoke$arity$variadic = G__14187__delegate;
return G__14187;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__14190 = null;
if (arguments.length > 3) {
var G__14191__i = 0, G__14191__a = new Array(arguments.length -  3);
while (G__14191__i < G__14191__a.length) {G__14191__a[G__14191__i] = arguments[G__14191__i + 3]; ++G__14191__i;}
G__14190 = new cljs.core.IndexedSeq(G__14191__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14190);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__5185__auto__ = (function (){var G__14116 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14116) : p1.call(null,G__14116));
})();
if(cljs.core.truth_(and__5185__auto__)){
var and__5185__auto____$1 = (function (){var G__14118 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14118) : p2.call(null,G__14118));
})();
if(cljs.core.truth_(and__5185__auto____$1)){
var G__14119 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14119) : p3.call(null,G__14119));
} else {
return and__5185__auto____$1;
}
} else {
return and__5185__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__5185__auto__ = (function (){var G__14121 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14121) : p1.call(null,G__14121));
})();
if(cljs.core.truth_(and__5185__auto__)){
var and__5185__auto____$1 = (function (){var G__14123 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14123) : p2.call(null,G__14123));
})();
if(cljs.core.truth_(and__5185__auto____$1)){
var and__5185__auto____$2 = (function (){var G__14125 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14125) : p3.call(null,G__14125));
})();
if(cljs.core.truth_(and__5185__auto____$2)){
var and__5185__auto____$3 = (function (){var G__14127 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14127) : p1.call(null,G__14127));
})();
if(cljs.core.truth_(and__5185__auto____$3)){
var and__5185__auto____$4 = (function (){var G__14129 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14129) : p2.call(null,G__14129));
})();
if(cljs.core.truth_(and__5185__auto____$4)){
var G__14130 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14130) : p3.call(null,G__14130));
} else {
return and__5185__auto____$4;
}
} else {
return and__5185__auto____$3;
}
} else {
return and__5185__auto____$2;
}
} else {
return and__5185__auto____$1;
}
} else {
return and__5185__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__5185__auto__ = (function (){var G__14132 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14132) : p1.call(null,G__14132));
})();
if(cljs.core.truth_(and__5185__auto__)){
var and__5185__auto____$1 = (function (){var G__14134 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14134) : p2.call(null,G__14134));
})();
if(cljs.core.truth_(and__5185__auto____$1)){
var and__5185__auto____$2 = (function (){var G__14136 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14136) : p3.call(null,G__14136));
})();
if(cljs.core.truth_(and__5185__auto____$2)){
var and__5185__auto____$3 = (function (){var G__14138 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14138) : p1.call(null,G__14138));
})();
if(cljs.core.truth_(and__5185__auto____$3)){
var and__5185__auto____$4 = (function (){var G__14140 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14140) : p2.call(null,G__14140));
})();
if(cljs.core.truth_(and__5185__auto____$4)){
var and__5185__auto____$5 = (function (){var G__14142 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14142) : p3.call(null,G__14142));
})();
if(cljs.core.truth_(and__5185__auto____$5)){
var and__5185__auto____$6 = (function (){var G__14144 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14144) : p1.call(null,G__14144));
})();
if(cljs.core.truth_(and__5185__auto____$6)){
var and__5185__auto____$7 = (function (){var G__14146 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14146) : p2.call(null,G__14146));
})();
if(cljs.core.truth_(and__5185__auto____$7)){
var G__14147 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14147) : p3.call(null,G__14147));
} else {
return and__5185__auto____$7;
}
} else {
return and__5185__auto____$6;
}
} else {
return and__5185__auto____$5;
}
} else {
return and__5185__auto____$4;
}
} else {
return and__5185__auto____$3;
}
} else {
return and__5185__auto____$2;
}
} else {
return and__5185__auto____$1;
}
} else {
return and__5185__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__14192__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__13793_SHARP_){
var and__5185__auto__ = (function (){var G__14154 = p1__13793_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14154) : p1.call(null,G__14154));
})();
if(cljs.core.truth_(and__5185__auto__)){
var and__5185__auto____$1 = (function (){var G__14156 = p1__13793_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14156) : p2.call(null,G__14156));
})();
if(cljs.core.truth_(and__5185__auto____$1)){
var G__14157 = p1__13793_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14157) : p3.call(null,G__14157));
} else {
return and__5185__auto____$1;
}
} else {
return and__5185__auto__;
}
}),args)));
};
var G__14192 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14193__i = 0, G__14193__a = new Array(arguments.length -  3);
while (G__14193__i < G__14193__a.length) {G__14193__a[G__14193__i] = arguments[G__14193__i + 3]; ++G__14193__i;}
  args = new cljs.core.IndexedSeq(G__14193__a,0);
} 
return G__14192__delegate.call(this,x,y,z,args);};
G__14192.cljs$lang$maxFixedArity = 3;
G__14192.cljs$lang$applyTo = (function (arglist__14194){
var x = cljs.core.first(arglist__14194);
arglist__14194 = cljs.core.next(arglist__14194);
var y = cljs.core.first(arglist__14194);
arglist__14194 = cljs.core.next(arglist__14194);
var z = cljs.core.first(arglist__14194);
var args = cljs.core.rest(arglist__14194);
return G__14192__delegate(x,y,z,args);
});
G__14192.cljs$core$IFn$_invoke$arity$variadic = G__14192__delegate;
return G__14192;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__14195 = null;
if (arguments.length > 3) {
var G__14196__i = 0, G__14196__a = new Array(arguments.length -  3);
while (G__14196__i < G__14196__a.length) {G__14196__a[G__14196__i] = arguments[G__14196__i + 3]; ++G__14196__i;}
G__14195 = new cljs.core.IndexedSeq(G__14196__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14195);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__14197__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__13794_SHARP_){
var G__14173 = x;
return (p1__13794_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13794_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14173) : p1__13794_SHARP_.call(null,G__14173));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__13795_SHARP_){
var and__5185__auto__ = (function (){var G__14175 = x;
return (p1__13795_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13795_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14175) : p1__13795_SHARP_.call(null,G__14175));
})();
if(cljs.core.truth_(and__5185__auto__)){
var G__14176 = y;
return (p1__13795_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13795_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14176) : p1__13795_SHARP_.call(null,G__14176));
} else {
return and__5185__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__13796_SHARP_){
var and__5185__auto__ = (function (){var G__14178 = x;
return (p1__13796_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13796_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14178) : p1__13796_SHARP_.call(null,G__14178));
})();
if(cljs.core.truth_(and__5185__auto__)){
var and__5185__auto____$1 = (function (){var G__14180 = y;
return (p1__13796_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13796_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14180) : p1__13796_SHARP_.call(null,G__14180));
})();
if(cljs.core.truth_(and__5185__auto____$1)){
var G__14181 = z;
return (p1__13796_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13796_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14181) : p1__13796_SHARP_.call(null,G__14181));
} else {
return and__5185__auto____$1;
}
} else {
return and__5185__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__14198__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__13797_SHARP_){
return cljs.core.every_QMARK_(p1__13797_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__14198 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14199__i = 0, G__14199__a = new Array(arguments.length -  3);
while (G__14199__i < G__14199__a.length) {G__14199__a[G__14199__i] = arguments[G__14199__i + 3]; ++G__14199__i;}
  args = new cljs.core.IndexedSeq(G__14199__a,0);
} 
return G__14198__delegate.call(this,x,y,z,args);};
G__14198.cljs$lang$maxFixedArity = 3;
G__14198.cljs$lang$applyTo = (function (arglist__14200){
var x = cljs.core.first(arglist__14200);
arglist__14200 = cljs.core.next(arglist__14200);
var y = cljs.core.first(arglist__14200);
arglist__14200 = cljs.core.next(arglist__14200);
var z = cljs.core.first(arglist__14200);
var args = cljs.core.rest(arglist__14200);
return G__14198__delegate(x,y,z,args);
});
G__14198.cljs$core$IFn$_invoke$arity$variadic = G__14198__delegate;
return G__14198;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__14201 = null;
if (arguments.length > 3) {
var G__14202__i = 0, G__14202__a = new Array(arguments.length -  3);
while (G__14202__i < G__14202__a.length) {G__14202__a[G__14202__i] = arguments[G__14202__i + 3]; ++G__14202__i;}
G__14201 = new cljs.core.IndexedSeq(G__14202__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14201);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__14197 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__14203__i = 0, G__14203__a = new Array(arguments.length -  3);
while (G__14203__i < G__14203__a.length) {G__14203__a[G__14203__i] = arguments[G__14203__i + 3]; ++G__14203__i;}
  ps = new cljs.core.IndexedSeq(G__14203__a,0);
} 
return G__14197__delegate.call(this,p1,p2,p3,ps);};
G__14197.cljs$lang$maxFixedArity = 3;
G__14197.cljs$lang$applyTo = (function (arglist__14204){
var p1 = cljs.core.first(arglist__14204);
arglist__14204 = cljs.core.next(arglist__14204);
var p2 = cljs.core.first(arglist__14204);
arglist__14204 = cljs.core.next(arglist__14204);
var p3 = cljs.core.first(arglist__14204);
var ps = cljs.core.rest(arglist__14204);
return G__14197__delegate(p1,p2,p3,ps);
});
G__14197.cljs$core$IFn$_invoke$arity$variadic = G__14197__delegate;
return G__14197;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__14205 = null;
if (arguments.length > 3) {
var G__14206__i = 0, G__14206__a = new Array(arguments.length -  3);
while (G__14206__i < G__14206__a.length) {G__14206__a[G__14206__i] = arguments[G__14206__i + 3]; ++G__14206__i;}
G__14205 = new cljs.core.IndexedSeq(G__14206__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__14205);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
 * Takes a set of predicates and returns a function f that returns the first logical true value
 * returned by one of its composing predicates against any of its arguments, else it returns
 * logical false. Note that f is short-circuiting in that it will stop execution on the first
 * argument that triggers a logical true result against the original predicates.
 * @param {...*} var_args
 */
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__14412 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14412) : p.call(null,G__14412));
});
var sp1__2 = (function (x,y){
var or__5197__auto__ = (function (){var G__14414 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14414) : p.call(null,G__14414));
})();
if(cljs.core.truth_(or__5197__auto__)){
return or__5197__auto__;
} else {
var G__14415 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14415) : p.call(null,G__14415));
}
});
var sp1__3 = (function (x,y,z){
var or__5197__auto__ = (function (){var G__14417 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14417) : p.call(null,G__14417));
})();
if(cljs.core.truth_(or__5197__auto__)){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (function (){var G__14419 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14419) : p.call(null,G__14419));
})();
if(cljs.core.truth_(or__5197__auto____$1)){
return or__5197__auto____$1;
} else {
var G__14420 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14420) : p.call(null,G__14420));
}
}
});
var sp1__4 = (function() { 
var G__14581__delegate = function (x,y,z,args){
var or__5197__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__5197__auto__)){
return or__5197__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__14581 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14582__i = 0, G__14582__a = new Array(arguments.length -  3);
while (G__14582__i < G__14582__a.length) {G__14582__a[G__14582__i] = arguments[G__14582__i + 3]; ++G__14582__i;}
  args = new cljs.core.IndexedSeq(G__14582__a,0);
} 
return G__14581__delegate.call(this,x,y,z,args);};
G__14581.cljs$lang$maxFixedArity = 3;
G__14581.cljs$lang$applyTo = (function (arglist__14583){
var x = cljs.core.first(arglist__14583);
arglist__14583 = cljs.core.next(arglist__14583);
var y = cljs.core.first(arglist__14583);
arglist__14583 = cljs.core.next(arglist__14583);
var z = cljs.core.first(arglist__14583);
var args = cljs.core.rest(arglist__14583);
return G__14581__delegate(x,y,z,args);
});
G__14581.cljs$core$IFn$_invoke$arity$variadic = G__14581__delegate;
return G__14581;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__14584 = null;
if (arguments.length > 3) {
var G__14585__i = 0, G__14585__a = new Array(arguments.length -  3);
while (G__14585__i < G__14585__a.length) {G__14585__a[G__14585__i] = arguments[G__14585__i + 3]; ++G__14585__i;}
G__14584 = new cljs.core.IndexedSeq(G__14585__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14584);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__5197__auto__ = (function (){var G__14452 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14452) : p1.call(null,G__14452));
})();
if(cljs.core.truth_(or__5197__auto__)){
return or__5197__auto__;
} else {
var G__14453 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14453) : p2.call(null,G__14453));
}
});
var sp2__2 = (function (x,y){
var or__5197__auto__ = (function (){var G__14455 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14455) : p1.call(null,G__14455));
})();
if(cljs.core.truth_(or__5197__auto__)){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (function (){var G__14457 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14457) : p1.call(null,G__14457));
})();
if(cljs.core.truth_(or__5197__auto____$1)){
return or__5197__auto____$1;
} else {
var or__5197__auto____$2 = (function (){var G__14459 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14459) : p2.call(null,G__14459));
})();
if(cljs.core.truth_(or__5197__auto____$2)){
return or__5197__auto____$2;
} else {
var G__14460 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14460) : p2.call(null,G__14460));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__5197__auto__ = (function (){var G__14462 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14462) : p1.call(null,G__14462));
})();
if(cljs.core.truth_(or__5197__auto__)){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (function (){var G__14464 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14464) : p1.call(null,G__14464));
})();
if(cljs.core.truth_(or__5197__auto____$1)){
return or__5197__auto____$1;
} else {
var or__5197__auto____$2 = (function (){var G__14466 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14466) : p1.call(null,G__14466));
})();
if(cljs.core.truth_(or__5197__auto____$2)){
return or__5197__auto____$2;
} else {
var or__5197__auto____$3 = (function (){var G__14468 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14468) : p2.call(null,G__14468));
})();
if(cljs.core.truth_(or__5197__auto____$3)){
return or__5197__auto____$3;
} else {
var or__5197__auto____$4 = (function (){var G__14470 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14470) : p2.call(null,G__14470));
})();
if(cljs.core.truth_(or__5197__auto____$4)){
return or__5197__auto____$4;
} else {
var G__14471 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14471) : p2.call(null,G__14471));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__14586__delegate = function (x,y,z,args){
var or__5197__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__5197__auto__)){
return or__5197__auto__;
} else {
return cljs.core.some(((function (or__5197__auto__){
return (function (p1__14207_SHARP_){
var or__5197__auto____$1 = (function (){var G__14473 = p1__14207_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14473) : p1.call(null,G__14473));
})();
if(cljs.core.truth_(or__5197__auto____$1)){
return or__5197__auto____$1;
} else {
var G__14474 = p1__14207_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14474) : p2.call(null,G__14474));
}
});})(or__5197__auto__))
,args);
}
};
var G__14586 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14587__i = 0, G__14587__a = new Array(arguments.length -  3);
while (G__14587__i < G__14587__a.length) {G__14587__a[G__14587__i] = arguments[G__14587__i + 3]; ++G__14587__i;}
  args = new cljs.core.IndexedSeq(G__14587__a,0);
} 
return G__14586__delegate.call(this,x,y,z,args);};
G__14586.cljs$lang$maxFixedArity = 3;
G__14586.cljs$lang$applyTo = (function (arglist__14588){
var x = cljs.core.first(arglist__14588);
arglist__14588 = cljs.core.next(arglist__14588);
var y = cljs.core.first(arglist__14588);
arglist__14588 = cljs.core.next(arglist__14588);
var z = cljs.core.first(arglist__14588);
var args = cljs.core.rest(arglist__14588);
return G__14586__delegate(x,y,z,args);
});
G__14586.cljs$core$IFn$_invoke$arity$variadic = G__14586__delegate;
return G__14586;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__14589 = null;
if (arguments.length > 3) {
var G__14590__i = 0, G__14590__a = new Array(arguments.length -  3);
while (G__14590__i < G__14590__a.length) {G__14590__a[G__14590__i] = arguments[G__14590__i + 3]; ++G__14590__i;}
G__14589 = new cljs.core.IndexedSeq(G__14590__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14589);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__5197__auto__ = (function (){var G__14520 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14520) : p1.call(null,G__14520));
})();
if(cljs.core.truth_(or__5197__auto__)){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (function (){var G__14522 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14522) : p2.call(null,G__14522));
})();
if(cljs.core.truth_(or__5197__auto____$1)){
return or__5197__auto____$1;
} else {
var G__14523 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14523) : p3.call(null,G__14523));
}
}
});
var sp3__2 = (function (x,y){
var or__5197__auto__ = (function (){var G__14525 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14525) : p1.call(null,G__14525));
})();
if(cljs.core.truth_(or__5197__auto__)){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (function (){var G__14527 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14527) : p2.call(null,G__14527));
})();
if(cljs.core.truth_(or__5197__auto____$1)){
return or__5197__auto____$1;
} else {
var or__5197__auto____$2 = (function (){var G__14529 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14529) : p3.call(null,G__14529));
})();
if(cljs.core.truth_(or__5197__auto____$2)){
return or__5197__auto____$2;
} else {
var or__5197__auto____$3 = (function (){var G__14531 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14531) : p1.call(null,G__14531));
})();
if(cljs.core.truth_(or__5197__auto____$3)){
return or__5197__auto____$3;
} else {
var or__5197__auto____$4 = (function (){var G__14533 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14533) : p2.call(null,G__14533));
})();
if(cljs.core.truth_(or__5197__auto____$4)){
return or__5197__auto____$4;
} else {
var G__14534 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14534) : p3.call(null,G__14534));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__5197__auto__ = (function (){var G__14536 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14536) : p1.call(null,G__14536));
})();
if(cljs.core.truth_(or__5197__auto__)){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (function (){var G__14538 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14538) : p2.call(null,G__14538));
})();
if(cljs.core.truth_(or__5197__auto____$1)){
return or__5197__auto____$1;
} else {
var or__5197__auto____$2 = (function (){var G__14540 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14540) : p3.call(null,G__14540));
})();
if(cljs.core.truth_(or__5197__auto____$2)){
return or__5197__auto____$2;
} else {
var or__5197__auto____$3 = (function (){var G__14542 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14542) : p1.call(null,G__14542));
})();
if(cljs.core.truth_(or__5197__auto____$3)){
return or__5197__auto____$3;
} else {
var or__5197__auto____$4 = (function (){var G__14544 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14544) : p2.call(null,G__14544));
})();
if(cljs.core.truth_(or__5197__auto____$4)){
return or__5197__auto____$4;
} else {
var or__5197__auto____$5 = (function (){var G__14546 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14546) : p3.call(null,G__14546));
})();
if(cljs.core.truth_(or__5197__auto____$5)){
return or__5197__auto____$5;
} else {
var or__5197__auto____$6 = (function (){var G__14548 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14548) : p1.call(null,G__14548));
})();
if(cljs.core.truth_(or__5197__auto____$6)){
return or__5197__auto____$6;
} else {
var or__5197__auto____$7 = (function (){var G__14550 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14550) : p2.call(null,G__14550));
})();
if(cljs.core.truth_(or__5197__auto____$7)){
return or__5197__auto____$7;
} else {
var G__14551 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14551) : p3.call(null,G__14551));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__14591__delegate = function (x,y,z,args){
var or__5197__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__5197__auto__)){
return or__5197__auto__;
} else {
return cljs.core.some(((function (or__5197__auto__){
return (function (p1__14208_SHARP_){
var or__5197__auto____$1 = (function (){var G__14553 = p1__14208_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14553) : p1.call(null,G__14553));
})();
if(cljs.core.truth_(or__5197__auto____$1)){
return or__5197__auto____$1;
} else {
var or__5197__auto____$2 = (function (){var G__14555 = p1__14208_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14555) : p2.call(null,G__14555));
})();
if(cljs.core.truth_(or__5197__auto____$2)){
return or__5197__auto____$2;
} else {
var G__14556 = p1__14208_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14556) : p3.call(null,G__14556));
}
}
});})(or__5197__auto__))
,args);
}
};
var G__14591 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14592__i = 0, G__14592__a = new Array(arguments.length -  3);
while (G__14592__i < G__14592__a.length) {G__14592__a[G__14592__i] = arguments[G__14592__i + 3]; ++G__14592__i;}
  args = new cljs.core.IndexedSeq(G__14592__a,0);
} 
return G__14591__delegate.call(this,x,y,z,args);};
G__14591.cljs$lang$maxFixedArity = 3;
G__14591.cljs$lang$applyTo = (function (arglist__14593){
var x = cljs.core.first(arglist__14593);
arglist__14593 = cljs.core.next(arglist__14593);
var y = cljs.core.first(arglist__14593);
arglist__14593 = cljs.core.next(arglist__14593);
var z = cljs.core.first(arglist__14593);
var args = cljs.core.rest(arglist__14593);
return G__14591__delegate(x,y,z,args);
});
G__14591.cljs$core$IFn$_invoke$arity$variadic = G__14591__delegate;
return G__14591;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__14594 = null;
if (arguments.length > 3) {
var G__14595__i = 0, G__14595__a = new Array(arguments.length -  3);
while (G__14595__i < G__14595__a.length) {G__14595__a[G__14595__i] = arguments[G__14595__i + 3]; ++G__14595__i;}
G__14594 = new cljs.core.IndexedSeq(G__14595__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14594);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__14596__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__14209_SHARP_){
var G__14572 = x;
return (p1__14209_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14209_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14572) : p1__14209_SHARP_.call(null,G__14572));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__14210_SHARP_){
var or__5197__auto__ = (function (){var G__14574 = x;
return (p1__14210_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14210_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14574) : p1__14210_SHARP_.call(null,G__14574));
})();
if(cljs.core.truth_(or__5197__auto__)){
return or__5197__auto__;
} else {
var G__14575 = y;
return (p1__14210_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14210_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14575) : p1__14210_SHARP_.call(null,G__14575));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__14211_SHARP_){
var or__5197__auto__ = (function (){var G__14577 = x;
return (p1__14211_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14211_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14577) : p1__14211_SHARP_.call(null,G__14577));
})();
if(cljs.core.truth_(or__5197__auto__)){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (function (){var G__14579 = y;
return (p1__14211_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14211_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14579) : p1__14211_SHARP_.call(null,G__14579));
})();
if(cljs.core.truth_(or__5197__auto____$1)){
return or__5197__auto____$1;
} else {
var G__14580 = z;
return (p1__14211_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14211_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14580) : p1__14211_SHARP_.call(null,G__14580));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__14597__delegate = function (x,y,z,args){
var or__5197__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__5197__auto__)){
return or__5197__auto__;
} else {
return cljs.core.some(((function (or__5197__auto__,ps__$1){
return (function (p1__14212_SHARP_){
return cljs.core.some(p1__14212_SHARP_,args);
});})(or__5197__auto__,ps__$1))
,ps__$1);
}
};
var G__14597 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14598__i = 0, G__14598__a = new Array(arguments.length -  3);
while (G__14598__i < G__14598__a.length) {G__14598__a[G__14598__i] = arguments[G__14598__i + 3]; ++G__14598__i;}
  args = new cljs.core.IndexedSeq(G__14598__a,0);
} 
return G__14597__delegate.call(this,x,y,z,args);};
G__14597.cljs$lang$maxFixedArity = 3;
G__14597.cljs$lang$applyTo = (function (arglist__14599){
var x = cljs.core.first(arglist__14599);
arglist__14599 = cljs.core.next(arglist__14599);
var y = cljs.core.first(arglist__14599);
arglist__14599 = cljs.core.next(arglist__14599);
var z = cljs.core.first(arglist__14599);
var args = cljs.core.rest(arglist__14599);
return G__14597__delegate(x,y,z,args);
});
G__14597.cljs$core$IFn$_invoke$arity$variadic = G__14597__delegate;
return G__14597;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__14600 = null;
if (arguments.length > 3) {
var G__14601__i = 0, G__14601__a = new Array(arguments.length -  3);
while (G__14601__i < G__14601__a.length) {G__14601__a[G__14601__i] = arguments[G__14601__i + 3]; ++G__14601__i;}
G__14600 = new cljs.core.IndexedSeq(G__14601__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14600);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__14596 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__14602__i = 0, G__14602__a = new Array(arguments.length -  3);
while (G__14602__i < G__14602__a.length) {G__14602__a[G__14602__i] = arguments[G__14602__i + 3]; ++G__14602__i;}
  ps = new cljs.core.IndexedSeq(G__14602__a,0);
} 
return G__14596__delegate.call(this,p1,p2,p3,ps);};
G__14596.cljs$lang$maxFixedArity = 3;
G__14596.cljs$lang$applyTo = (function (arglist__14603){
var p1 = cljs.core.first(arglist__14603);
arglist__14603 = cljs.core.next(arglist__14603);
var p2 = cljs.core.first(arglist__14603);
arglist__14603 = cljs.core.next(arglist__14603);
var p3 = cljs.core.first(arglist__14603);
var ps = cljs.core.rest(arglist__14603);
return G__14596__delegate(p1,p2,p3,ps);
});
G__14596.cljs$core$IFn$_invoke$arity$variadic = G__14596__delegate;
return G__14596;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__14604 = null;
if (arguments.length > 3) {
var G__14605__i = 0, G__14605__a = new Array(arguments.length -  3);
while (G__14605__i < G__14605__a.length) {G__14605__a[G__14605__i] = arguments[G__14605__i + 3]; ++G__14605__i;}
G__14604 = new cljs.core.IndexedSeq(G__14605__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__14604);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
 * Returns a lazy sequence consisting of the result of applying f to
 * the set of first items of each coll, followed by applying f to the
 * set of second items in each coll, until any one of the colls is
 * exhausted.  Any remaining items in other colls are ignored. Function
 * f should accept number-of-colls arguments. Returns a transducer when
 * no collection is provided.
 * @param {...*} var_args
 */
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__14660 = null;
var G__14660__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14660__1 = (function (result){
var G__14646 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14646) : rf.call(null,G__14646));
});
var G__14660__2 = (function (result,input){
var G__14647 = result;
var G__14648 = (function (){var G__14649 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14649) : f.call(null,G__14649));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14647,G__14648) : rf.call(null,G__14647,G__14648));
});
var G__14660__3 = (function() { 
var G__14661__delegate = function (result,input,inputs){
var G__14650 = result;
var G__14651 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14650,G__14651) : rf.call(null,G__14650,G__14651));
};
var G__14661 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__14662__i = 0, G__14662__a = new Array(arguments.length -  2);
while (G__14662__i < G__14662__a.length) {G__14662__a[G__14662__i] = arguments[G__14662__i + 2]; ++G__14662__i;}
  inputs = new cljs.core.IndexedSeq(G__14662__a,0);
} 
return G__14661__delegate.call(this,result,input,inputs);};
G__14661.cljs$lang$maxFixedArity = 2;
G__14661.cljs$lang$applyTo = (function (arglist__14663){
var result = cljs.core.first(arglist__14663);
arglist__14663 = cljs.core.next(arglist__14663);
var input = cljs.core.first(arglist__14663);
var inputs = cljs.core.rest(arglist__14663);
return G__14661__delegate(result,input,inputs);
});
G__14661.cljs$core$IFn$_invoke$arity$variadic = G__14661__delegate;
return G__14661;
})()
;
G__14660 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__14660__0.call(this);
case 1:
return G__14660__1.call(this,result);
case 2:
return G__14660__2.call(this,result,input);
default:
var G__14664 = null;
if (arguments.length > 2) {
var G__14665__i = 0, G__14665__a = new Array(arguments.length -  2);
while (G__14665__i < G__14665__a.length) {G__14665__a[G__14665__i] = arguments[G__14665__i + 2]; ++G__14665__i;}
G__14664 = new cljs.core.IndexedSeq(G__14665__a,0);
}
return G__14660__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__14664);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14660.cljs$lang$maxFixedArity = 2;
G__14660.cljs$lang$applyTo = G__14660__3.cljs$lang$applyTo;
G__14660.cljs$core$IFn$_invoke$arity$0 = G__14660__0;
G__14660.cljs$core$IFn$_invoke$arity$1 = G__14660__1;
G__14660.cljs$core$IFn$_invoke$arity$2 = G__14660__2;
G__14660.cljs$core$IFn$_invoke$arity$variadic = G__14660__3.cljs$core$IFn$_invoke$arity$variadic;
return G__14660;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__6084__auto___14666 = size;
var i_14667 = (0);
while(true){
if((i_14667 < n__6084__auto___14666)){
cljs.core.chunk_append(b,(function (){var G__14652 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_14667);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14652) : f.call(null,G__14652));
})());

var G__14668 = (i_14667 + (1));
i_14667 = G__14668;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__14653 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14653) : f.call(null,G__14653));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__14654 = cljs.core.first(s1);
var G__14655 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14654,G__14655) : f.call(null,G__14654,G__14655));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__14656 = cljs.core.first(s1);
var G__14657 = cljs.core.first(s2);
var G__14658 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14656,G__14657,G__14658) : f.call(null,G__14656,G__14657,G__14658));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__14669__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__14606_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__14606_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__14669 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__14670__i = 0, G__14670__a = new Array(arguments.length -  4);
while (G__14670__i < G__14670__a.length) {G__14670__a[G__14670__i] = arguments[G__14670__i + 4]; ++G__14670__i;}
  colls = new cljs.core.IndexedSeq(G__14670__a,0);
} 
return G__14669__delegate.call(this,f,c1,c2,c3,colls);};
G__14669.cljs$lang$maxFixedArity = 4;
G__14669.cljs$lang$applyTo = (function (arglist__14671){
var f = cljs.core.first(arglist__14671);
arglist__14671 = cljs.core.next(arglist__14671);
var c1 = cljs.core.first(arglist__14671);
arglist__14671 = cljs.core.next(arglist__14671);
var c2 = cljs.core.first(arglist__14671);
arglist__14671 = cljs.core.next(arglist__14671);
var c3 = cljs.core.first(arglist__14671);
var colls = cljs.core.rest(arglist__14671);
return G__14669__delegate(f,c1,c2,c3,colls);
});
G__14669.cljs$core$IFn$_invoke$arity$variadic = G__14669__delegate;
return G__14669;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__14672 = null;
if (arguments.length > 4) {
var G__14673__i = 0, G__14673__a = new Array(arguments.length -  4);
while (G__14673__i < G__14673__a.length) {G__14673__a[G__14673__i] = arguments[G__14673__i + 4]; ++G__14673__i;}
G__14672 = new cljs.core.IndexedSeq(G__14673__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__14672);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
 * Returns a lazy sequence of the first n items in coll, or all items if
 * there are fewer than n.  Returns a stateful transducer when
 * no collection is provided.
 */
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__14682 = null;
var G__14682__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14682__1 = (function (result){
var G__14679 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14679) : rf.call(null,G__14679));
});
var G__14682__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__14680 = result;
var G__14681 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14680,G__14681) : rf.call(null,G__14680,G__14681));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__14682 = function(result,input){
switch(arguments.length){
case 0:
return G__14682__0.call(this);
case 1:
return G__14682__1.call(this,result);
case 2:
return G__14682__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14682.cljs$core$IFn$_invoke$arity$0 = G__14682__0;
G__14682.cljs$core$IFn$_invoke$arity$1 = G__14682__1;
G__14682.cljs$core$IFn$_invoke$arity$2 = G__14682__2;
return G__14682;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
 * Returns a lazy sequence of all but the first n items in coll.
 * Returns a stateful transducer when no collection is provided.
 */
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__14689 = null;
var G__14689__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14689__1 = (function (result){
var G__14686 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14686) : rf.call(null,G__14686));
});
var G__14689__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__14687 = result;
var G__14688 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14687,G__14688) : rf.call(null,G__14687,G__14688));
}
});
G__14689 = function(result,input){
switch(arguments.length){
case 0:
return G__14689__0.call(this);
case 1:
return G__14689__1.call(this,result);
case 2:
return G__14689__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14689.cljs$core$IFn$_invoke$arity$0 = G__14689__0;
G__14689.cljs$core$IFn$_invoke$arity$1 = G__14689__1;
G__14689.cljs$core$IFn$_invoke$arity$2 = G__14689__2;
return G__14689;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__14690 = (n__$1 - (1));
var G__14691 = cljs.core.rest(s);
n__$1 = G__14690;
coll__$1 = G__14691;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
 * Return a lazy sequence of all but the last n (default 1) items in coll
 */
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
 * Returns a seq of the last n items in coll.  Depending on the type
 * of coll may be no better than linear time.  For vectors, see also subvec.
 */
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__14694 = cljs.core.next(s);
var G__14695 = cljs.core.next(lead);
s = G__14694;
lead = G__14695;
continue;
} else {
return s;
}
break;
}
});
/**
 * Returns a lazy sequence of the items in coll starting from the
 * first item for which (pred item) returns logical false.  Returns a
 * stateful transducer when no collection is provided.
 */
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__14708 = null;
var G__14708__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14708__1 = (function (result){
var G__14702 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14702) : rf.call(null,G__14702));
});
var G__14708__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__5185__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__5185__auto__)){
var G__14703 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14703) : pred.call(null,G__14703));
} else {
return and__5185__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__14704 = result;
var G__14705 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14704,G__14705) : rf.call(null,G__14704,G__14705));
}
});
G__14708 = function(result,input){
switch(arguments.length){
case 0:
return G__14708__0.call(this);
case 1:
return G__14708__1.call(this,result);
case 2:
return G__14708__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14708.cljs$core$IFn$_invoke$arity$0 = G__14708__0;
G__14708.cljs$core$IFn$_invoke$arity$1 = G__14708__1;
G__14708.cljs$core$IFn$_invoke$arity$2 = G__14708__2;
return G__14708;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__5185__auto__ = s;
if(and__5185__auto__){
var G__14707 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__14707) : pred__$1.call(null,G__14707));
} else {
return and__5185__auto__;
}
})())){
var G__14709 = pred__$1;
var G__14710 = cljs.core.rest(s);
pred__$1 = G__14709;
coll__$1 = G__14710;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
 * Returns a lazy (infinite!) sequence of repetitions of the items in coll.
 */
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
 * Returns a vector of [(take n coll) (drop n coll)]
 */
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
 * Returns a lazy (infinite!, or length n if supplied) sequence of xs.
 */
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
 * Returns a lazy seq of n xs.
 */
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
 * Takes a function of no args, presumably with side effects, and
 * returns an infinite (or length n if supplied) lazy sequence of calls
 * to it
 */
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
 * Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
 */
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__14719 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14719) : f.call(null,G__14719));
})());
}),null,null)));
});
/**
 * Returns a lazy seq of the first item in each coll, then the second etc.
 * @param {...*} var_args
 */
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__14722__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__14722 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__14723__i = 0, G__14723__a = new Array(arguments.length -  2);
while (G__14723__i < G__14723__a.length) {G__14723__a[G__14723__i] = arguments[G__14723__i + 2]; ++G__14723__i;}
  colls = new cljs.core.IndexedSeq(G__14723__a,0);
} 
return G__14722__delegate.call(this,c1,c2,colls);};
G__14722.cljs$lang$maxFixedArity = 2;
G__14722.cljs$lang$applyTo = (function (arglist__14724){
var c1 = cljs.core.first(arglist__14724);
arglist__14724 = cljs.core.next(arglist__14724);
var c2 = cljs.core.first(arglist__14724);
var colls = cljs.core.rest(arglist__14724);
return G__14722__delegate(c1,c2,colls);
});
G__14722.cljs$core$IFn$_invoke$arity$variadic = G__14722__delegate;
return G__14722;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__14725 = null;
if (arguments.length > 2) {
var G__14726__i = 0, G__14726__a = new Array(arguments.length -  2);
while (G__14726__i < G__14726__a.length) {G__14726__a[G__14726__i] = arguments[G__14726__i + 2]; ++G__14726__i;}
G__14725 = new cljs.core.IndexedSeq(G__14726__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__14725);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
 * Returns a lazy seq of the elements of coll separated by sep
 */
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__14741 = null;
var G__14741__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14741__1 = (function (result){
var G__14734 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14734) : rf.call(null,G__14734));
});
var G__14741__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__14735 = result;
var G__14736 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14735,G__14736) : rf.call(null,G__14735,G__14736));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__14737 = sepr;
var G__14738 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14737,G__14738) : rf.call(null,G__14737,G__14738));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__14739 = result;
var G__14740 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14739,G__14740) : rf.call(null,G__14739,G__14740));
}
});
G__14741 = function(result,input){
switch(arguments.length){
case 0:
return G__14741__0.call(this);
case 1:
return G__14741__1.call(this,result);
case 2:
return G__14741__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14741.cljs$core$IFn$_invoke$arity$0 = G__14741__0;
G__14741.cljs$core$IFn$_invoke$arity$1 = G__14741__1;
G__14741.cljs$core$IFn$_invoke$arity$2 = G__14741__2;
return G__14741;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
 * Take a collection of collections, and return a lazy seq
 * of items from the inner collection
 */
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4404__auto__ = cljs.core.seq(coll);
if(temp__4404__auto__){
var coll__$1 = temp__4404__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
 * Returns the result of applying concat to the result of applying map
 * to f and colls.  Thus function f should return a collection. Returns
 * a transducer when no collections are provided
 * @param {...*} var_args
 */
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__14750__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__14750 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__14751__i = 0, G__14751__a = new Array(arguments.length -  1);
while (G__14751__i < G__14751__a.length) {G__14751__a[G__14751__i] = arguments[G__14751__i + 1]; ++G__14751__i;}
  colls = new cljs.core.IndexedSeq(G__14751__a,0);
} 
return G__14750__delegate.call(this,f,colls);};
G__14750.cljs$lang$maxFixedArity = 1;
G__14750.cljs$lang$applyTo = (function (arglist__14752){
var f = cljs.core.first(arglist__14752);
var colls = cljs.core.rest(arglist__14752);
return G__14750__delegate(f,colls);
});
G__14750.cljs$core$IFn$_invoke$arity$variadic = G__14750__delegate;
return G__14750;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__14753 = null;
if (arguments.length > 1) {
var G__14754__i = 0, G__14754__a = new Array(arguments.length -  1);
while (G__14754__i < G__14754__a.length) {G__14754__a[G__14754__i] = arguments[G__14754__i + 1]; ++G__14754__i;}
G__14753 = new cljs.core.IndexedSeq(G__14754__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__14753);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
 * Returns a lazy sequence of the items in coll for which
 * (pred item) returns true. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__14773 = null;
var G__14773__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14773__1 = (function (result){
var G__14767 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14767) : rf.call(null,G__14767));
});
var G__14773__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__14768 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14768) : pred.call(null,G__14768));
})())){
var G__14769 = result;
var G__14770 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14769,G__14770) : rf.call(null,G__14769,G__14770));
} else {
return result;
}
});
G__14773 = function(result,input){
switch(arguments.length){
case 0:
return G__14773__0.call(this);
case 1:
return G__14773__1.call(this,result);
case 2:
return G__14773__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14773.cljs$core$IFn$_invoke$arity$0 = G__14773__0;
G__14773.cljs$core$IFn$_invoke$arity$1 = G__14773__1;
G__14773.cljs$core$IFn$_invoke$arity$2 = G__14773__2;
return G__14773;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__6084__auto___14774 = size;
var i_14775 = (0);
while(true){
if((i_14775 < n__6084__auto___14774)){
if(cljs.core.truth_((function (){var G__14771 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_14775);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14771) : pred.call(null,G__14771));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_14775));
} else {
}

var G__14776 = (i_14775 + (1));
i_14775 = G__14776;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__14772 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14772) : pred.call(null,G__14772));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
 * Returns a lazy sequence of the items in coll for which
 * (pred item) returns false. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
 * Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
 * branch? must be a fn of one arg that returns true if passed a node
 * that can have children (but may not).  children must be a fn of one
 * arg that returns a sequence of the children. Will only be called on
 * nodes for which branch? returns true. Root is the root node of the
 * tree.
 */
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__14783 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__14783) : branch_QMARK_.call(null,G__14783));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__14784 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__14784) : children.call(null,G__14784));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
 * Takes any nested combination of sequential things (lists, vectors,
 * etc.) and returns their contents as a single, flat sequence.
 * (flatten nil) returns nil.
 */
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__14785_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__14785_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
 * Returns a new coll consisting of to-coll with all of the items of
 * from-coll conjoined. A transducer may be supplied.
 */
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__14788 = to;
if(G__14788){
var bit__5871__auto__ = (G__14788.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__5871__auto__) || (G__14788.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__14789 = to;
if(G__14789){
var bit__5871__auto__ = (G__14789.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__5871__auto__) || (G__14789.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
 * Returns a vector consisting of the result of applying f to the
 * set of first items of each coll, followed by applying f to the set
 * of second items in each coll, until any one of the colls is
 * exhausted.  Any remaining items in other colls are ignored. Function
 * f should accept number-of-colls arguments.
 * @param {...*} var_args
 */
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__14791 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14791) : f.call(null,G__14791));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__14792__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__14792 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__14793__i = 0, G__14793__a = new Array(arguments.length -  4);
while (G__14793__i < G__14793__a.length) {G__14793__a[G__14793__i] = arguments[G__14793__i + 4]; ++G__14793__i;}
  colls = new cljs.core.IndexedSeq(G__14793__a,0);
} 
return G__14792__delegate.call(this,f,c1,c2,c3,colls);};
G__14792.cljs$lang$maxFixedArity = 4;
G__14792.cljs$lang$applyTo = (function (arglist__14794){
var f = cljs.core.first(arglist__14794);
arglist__14794 = cljs.core.next(arglist__14794);
var c1 = cljs.core.first(arglist__14794);
arglist__14794 = cljs.core.next(arglist__14794);
var c2 = cljs.core.first(arglist__14794);
arglist__14794 = cljs.core.next(arglist__14794);
var c3 = cljs.core.first(arglist__14794);
var colls = cljs.core.rest(arglist__14794);
return G__14792__delegate(f,c1,c2,c3,colls);
});
G__14792.cljs$core$IFn$_invoke$arity$variadic = G__14792__delegate;
return G__14792;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__14795 = null;
if (arguments.length > 4) {
var G__14796__i = 0, G__14796__a = new Array(arguments.length -  4);
while (G__14796__i < G__14796__a.length) {G__14796__a[G__14796__i] = arguments[G__14796__i + 4]; ++G__14796__i;}
G__14795 = new cljs.core.IndexedSeq(G__14796__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__14795);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
 * Returns a vector of the items in coll for which
 * (pred item) returns true. pred must be free of side-effects.
 */
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__14798 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14798) : pred.call(null,G__14798));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
 * Returns a lazy sequence of lists of n items each, at offsets step
 * apart. If step is not supplied, defaults to n, i.e. the partitions
 * do not overlap. If a pad collection is supplied, use its elements as
 * necessary to complete last partition up to n items. In case there are
 * not enough padding elements, return a partition with less than n items.
 */
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
 * Returns the value in a nested associative structure,
 * where ks is a sequence of keys. Returns nil if the key is not present,
 * or the not-found value if supplied.
 */
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__14813 = m__$1;
if(G__14813){
var bit__5878__auto__ = (G__14813.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__5878__auto__) || (G__14813.cljs$core$ILookup$)){
return true;
} else {
if((!G__14813.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__14813);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__14813);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__14814 = sentinel;
var G__14815 = m__$2;
var G__14816 = cljs.core.next(ks__$1);
sentinel = G__14814;
m__$1 = G__14815;
ks__$1 = G__14816;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
 * Associates a value in a nested associative structure, where ks is a
 * sequence of keys and v is the new value and returns a new nested structure.
 * If any levels do not exist, hash-maps will be created.
 */
cljs.core.assoc_in = (function assoc_in(m,p__14817,v){
var vec__14822 = p__14817;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14822,(0),null);
var ks = cljs.core.nthnext(vec__14822,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
 * 'Updates' a value in a nested associative structure, where ks is a
 * sequence of keys and f is a function that will take the old value
 * and any supplied args and return the new value, and returns a new
 * nested structure.  If any levels do not exist, hash-maps will be
 * created.
 * @param {...*} var_args
 */
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__14823,f){
var vec__14861 = p__14823;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14861,(0),null);
var ks = cljs.core.nthnext(vec__14861,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14862 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14862) : f.call(null,G__14862));
})());
}
});
var update_in__4 = (function (m,p__14824,f,a){
var vec__14863 = p__14824;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14863,(0),null);
var ks = cljs.core.nthnext(vec__14863,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14864 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__14865 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14864,G__14865) : f.call(null,G__14864,G__14865));
})());
}
});
var update_in__5 = (function (m,p__14825,f,a,b){
var vec__14866 = p__14825;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14866,(0),null);
var ks = cljs.core.nthnext(vec__14866,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14867 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__14868 = a;
var G__14869 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14867,G__14868,G__14869) : f.call(null,G__14867,G__14868,G__14869));
})());
}
});
var update_in__6 = (function (m,p__14826,f,a,b,c){
var vec__14870 = p__14826;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14870,(0),null);
var ks = cljs.core.nthnext(vec__14870,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14871 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__14872 = a;
var G__14873 = b;
var G__14874 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14871,G__14872,G__14873,G__14874) : f.call(null,G__14871,G__14872,G__14873,G__14874));
})());
}
});
var update_in__7 = (function() { 
var G__14876__delegate = function (m,p__14827,f,a,b,c,args){
var vec__14875 = p__14827;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14875,(0),null);
var ks = cljs.core.nthnext(vec__14875,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__14876 = function (m,p__14827,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__14877__i = 0, G__14877__a = new Array(arguments.length -  6);
while (G__14877__i < G__14877__a.length) {G__14877__a[G__14877__i] = arguments[G__14877__i + 6]; ++G__14877__i;}
  args = new cljs.core.IndexedSeq(G__14877__a,0);
} 
return G__14876__delegate.call(this,m,p__14827,f,a,b,c,args);};
G__14876.cljs$lang$maxFixedArity = 6;
G__14876.cljs$lang$applyTo = (function (arglist__14878){
var m = cljs.core.first(arglist__14878);
arglist__14878 = cljs.core.next(arglist__14878);
var p__14827 = cljs.core.first(arglist__14878);
arglist__14878 = cljs.core.next(arglist__14878);
var f = cljs.core.first(arglist__14878);
arglist__14878 = cljs.core.next(arglist__14878);
var a = cljs.core.first(arglist__14878);
arglist__14878 = cljs.core.next(arglist__14878);
var b = cljs.core.first(arglist__14878);
arglist__14878 = cljs.core.next(arglist__14878);
var c = cljs.core.first(arglist__14878);
var args = cljs.core.rest(arglist__14878);
return G__14876__delegate(m,p__14827,f,a,b,c,args);
});
G__14876.cljs$core$IFn$_invoke$arity$variadic = G__14876__delegate;
return G__14876;
})()
;
update_in = function(m,p__14827,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__14827,f);
case 4:
return update_in__4.call(this,m,p__14827,f,a);
case 5:
return update_in__5.call(this,m,p__14827,f,a,b);
case 6:
return update_in__6.call(this,m,p__14827,f,a,b,c);
default:
var G__14879 = null;
if (arguments.length > 6) {
var G__14880__i = 0, G__14880__a = new Array(arguments.length -  6);
while (G__14880__i < G__14880__a.length) {G__14880__a[G__14880__i] = arguments[G__14880__i + 6]; ++G__14880__i;}
G__14879 = new cljs.core.IndexedSeq(G__14880__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__14827,f,a,b,c, G__14879);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
 * 'Updates' a value in an associative structure, where k is a
 * key and f is a function that will take the old value
 * and any supplied args and return the new value, and returns a new
 * structure.  If the key does not exist, nil is passed as the old value.
 * @param {...*} var_args
 */
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14891 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14891) : f.call(null,G__14891));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14892 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__14893 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14892,G__14893) : f.call(null,G__14892,G__14893));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14894 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__14895 = x;
var G__14896 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14894,G__14895,G__14896) : f.call(null,G__14894,G__14895,G__14896));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14897 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__14898 = x;
var G__14899 = y;
var G__14900 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14897,G__14898,G__14899,G__14900) : f.call(null,G__14897,G__14898,G__14899,G__14900));
})());
});
var update__7 = (function() { 
var G__14901__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__14901 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__14902__i = 0, G__14902__a = new Array(arguments.length -  6);
while (G__14902__i < G__14902__a.length) {G__14902__a[G__14902__i] = arguments[G__14902__i + 6]; ++G__14902__i;}
  more = new cljs.core.IndexedSeq(G__14902__a,0);
} 
return G__14901__delegate.call(this,m,k,f,x,y,z,more);};
G__14901.cljs$lang$maxFixedArity = 6;
G__14901.cljs$lang$applyTo = (function (arglist__14903){
var m = cljs.core.first(arglist__14903);
arglist__14903 = cljs.core.next(arglist__14903);
var k = cljs.core.first(arglist__14903);
arglist__14903 = cljs.core.next(arglist__14903);
var f = cljs.core.first(arglist__14903);
arglist__14903 = cljs.core.next(arglist__14903);
var x = cljs.core.first(arglist__14903);
arglist__14903 = cljs.core.next(arglist__14903);
var y = cljs.core.first(arglist__14903);
arglist__14903 = cljs.core.next(arglist__14903);
var z = cljs.core.first(arglist__14903);
var more = cljs.core.rest(arglist__14903);
return G__14901__delegate(m,k,f,x,y,z,more);
});
G__14901.cljs$core$IFn$_invoke$arity$variadic = G__14901__delegate;
return G__14901;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__14904 = null;
if (arguments.length > 6) {
var G__14905__i = 0, G__14905__a = new Array(arguments.length -  6);
while (G__14905__i < G__14905__a.length) {G__14905__a[G__14905__i] = arguments[G__14905__i + 6]; ++G__14905__i;}
G__14904 = new cljs.core.IndexedSeq(G__14905__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__14904);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__14906 = (ll - (5));
var G__14907 = r;
ll = G__14906;
ret = G__14907;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__14912 = cljs.core.pv_aget(node,(0));
var G__14913 = (level - (5));
node = G__14912;
level = G__14913;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__14914 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__14915 = (level - (5));
node = G__14914;
level = G__14915;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__14925 = init__$2;
var G__14926 = (j + i);
var G__14927 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14925,G__14926,G__14927) : f.call(null,G__14925,G__14926,G__14927));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__14938 = (j + (1));
var G__14939 = init__$3;
j = G__14938;
init__$2 = G__14939;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__14928 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14928) : cljs.core.deref.call(null,G__14928));
} else {
var G__14940 = (i + len);
var G__14941 = init__$2;
i = G__14940;
init__$1 = G__14941;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5618__auto__ = self__.__hash;
if(!((h__5618__auto__ == null))){
return h__5618__auto__;
} else {
var h__5618__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5618__auto____$1;

return h__5618__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__14929 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__14929) : cljs.core.tv_editable_root.call(null,G__14929));
})(),(function (){var G__14930 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__14930) : cljs.core.tv_editable_tail.call(null,G__14930));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__14931 = init__$2;
var G__14932 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14931,G__14932) : f.call(null,G__14931,G__14932));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__14942 = (j + (1));
var G__14943 = init__$3;
j = G__14942;
init__$2 = G__14943;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__14933 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14933) : cljs.core.deref.call(null,G__14933));
} else {
var G__14944 = (i + len);
var G__14945 = init__$2;
i = G__14944;
init__$1 = G__14945;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__14934 = coll__$1;
var G__14935 = cljs.core.first_array_for_longvec(coll__$1);
var G__14936 = (0);
var G__14937 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14934,G__14935,G__14936,G__14937) : cljs.core.chunked_seq.call(null,G__14934,G__14935,G__14936,G__14937));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__6084__auto___14946 = len;
var i_14947 = (0);
while(true){
if((i_14947 < n__6084__auto___14946)){
(new_tail[i_14947] = (self__.tail[i_14947]));

var G__14948 = (i_14947 + (1));
i_14947 = G__14948;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__14949 = null;
var G__14949__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__14949__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__14949 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14949__2.call(this,self__,k);
case 3:
return G__14949__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14949.cljs$core$IFn$_invoke$arity$2 = G__14949__2;
G__14949.cljs$core$IFn$_invoke$arity$3 = G__14949__3;
return G__14949;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args14924){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14924)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__14950 = (i + (1));
var G__14951 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__14950;
out = G__14951;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6175__auto__ = this;
return cljs.core.es6_iterator(this__6175__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
 * @param {...*} var_args
 */
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__14952__i = 0, G__14952__a = new Array(arguments.length -  0);
while (G__14952__i < G__14952__a.length) {G__14952__a[G__14952__i] = arguments[G__14952__i + 0]; ++G__14952__i;}
  args = new cljs.core.IndexedSeq(G__14952__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__14953){
var args = cljs.core.seq(arglist__14953);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__14954 = self__.vec;
var G__14955 = self__.node;
var G__14956 = self__.i;
var G__14957 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14954,G__14955,G__14956,G__14957) : cljs.core.chunked_seq.call(null,G__14954,G__14955,G__14956,G__14957));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5618__auto__ = self__.__hash;
if(!((h__5618__auto__ == null))){
return h__5618__auto__;
} else {
var h__5618__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5618__auto____$1;

return h__5618__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__14958 = self__.vec;
var G__14959 = (self__.i + self__.off);
var G__14960 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__14958,G__14959,G__14960) : cljs.core.subvec.call(null,G__14958,G__14959,G__14960));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__14961 = self__.vec;
var G__14962 = (self__.i + self__.off);
var G__14963 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__14961,G__14962,G__14963) : cljs.core.subvec.call(null,G__14961,G__14962,G__14963));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__14964 = self__.vec;
var G__14965 = self__.node;
var G__14966 = self__.i;
var G__14967 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14964,G__14965,G__14966,G__14967) : cljs.core.chunked_seq.call(null,G__14964,G__14965,G__14966,G__14967));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__14968 = self__.vec;
var G__14969 = cljs.core.unchecked_array_for(self__.vec,end);
var G__14970 = end;
var G__14971 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14968,G__14969,G__14970,G__14971) : cljs.core.chunked_seq.call(null,G__14968,G__14969,G__14970,G__14971));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__14972 = self__.vec;
var G__14973 = self__.node;
var G__14974 = self__.i;
var G__14975 = self__.off;
var G__14976 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__14972,G__14973,G__14974,G__14975,G__14976) : cljs.core.chunked_seq.call(null,G__14972,G__14973,G__14974,G__14975,G__14976));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__14977 = self__.vec;
var G__14978 = cljs.core.unchecked_array_for(self__.vec,end);
var G__14979 = end;
var G__14980 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14977,G__14978,G__14979,G__14980) : cljs.core.chunked_seq.call(null,G__14977,G__14978,G__14979,G__14980));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6175__auto__ = this;
return cljs.core.es6_iterator(this__6175__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__14982 = self__.meta;
var G__14983 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__14984 = self__.start;
var G__14985 = (function (){var x__5514__auto__ = self__.end;
var y__5515__auto__ = (v_pos + (1));
return ((x__5514__auto__ > y__5515__auto__) ? x__5514__auto__ : y__5515__auto__);
})();
var G__14986 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__14982,G__14983,G__14984,G__14985,G__14986) : cljs.core.build_subvec.call(null,G__14982,G__14983,G__14984,G__14985,G__14986));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__14987 = self__.meta;
var G__14988 = self__.v;
var G__14989 = self__.start;
var G__14990 = (self__.end - (1));
var G__14991 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__14987,G__14988,G__14989,G__14990,G__14991) : cljs.core.build_subvec.call(null,G__14987,G__14988,G__14989,G__14990,G__14991));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5618__auto__ = self__.__hash;
if(!((h__5618__auto__ == null))){
return h__5618__auto__;
} else {
var h__5618__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5618__auto____$1;

return h__5618__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__14993 = meta__$1;
var G__14994 = self__.v;
var G__14995 = self__.start;
var G__14996 = self__.end;
var G__14997 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__14993,G__14994,G__14995,G__14996,G__14997) : cljs.core.build_subvec.call(null,G__14993,G__14994,G__14995,G__14996,G__14997));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__14998 = self__.meta;
var G__14999 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__15000 = self__.start;
var G__15001 = (self__.end + (1));
var G__15002 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__14998,G__14999,G__15000,G__15001,G__15002) : cljs.core.build_subvec.call(null,G__14998,G__14999,G__15000,G__15001,G__15002));
});

cljs.core.Subvec.prototype.call = (function() {
var G__15003 = null;
var G__15003__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__15003__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__15003 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15003__2.call(this,self__,k);
case 3:
return G__15003__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15003.cljs$core$IFn$_invoke$arity$2 = G__15003__2;
G__15003.cljs$core$IFn$_invoke$arity$3 = G__15003__3;
return G__15003;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args14981){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14981)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6175__auto__ = this;
return cljs.core.es6_iterator(this__6175__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__15004 = meta;
var G__15005 = v.v;
var G__15006 = (v.start + start);
var G__15007 = (v.start + end);
var G__15008 = __hash;
meta = G__15004;
v = G__15005;
start = G__15006;
end = G__15007;
__hash = G__15008;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
 * Returns a persistent vector of the items in vector from
 * start (inclusive) to end (exclusive).  If end is not supplied,
 * defaults to (count vector). This operation is O(1) and very fast, as
 * the resulting vector shares structure with the original and no
 * trimming is done.
 */
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj15015 = {};
return obj15015;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__15023 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__15024 = (level - (5));
node = G__15023;
level = G__15024;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__15028 = null;
var G__15028__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15028__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15028 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15028__2.call(this,self__,k);
case 3:
return G__15028__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15028.cljs$core$IFn$_invoke$arity$2 = G__15028__2;
G__15028.cljs$core$IFn$_invoke$arity$3 = G__15028__3;
return G__15028;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args15025){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15025)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5618__auto__ = self__.__hash;
if(!((h__5618__auto__ == null))){
return h__5618__auto__;
} else {
var h__5618__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5618__auto____$1;

return h__5618__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4404__auto__ = cljs.core.next(self__.front);
if(temp__4404__auto__){
var f1 = temp__4404__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6175__auto__ = this;
return cljs.core.es6_iterator(this__6175__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4404__auto__ = cljs.core.next(self__.front);
if(temp__4404__auto__){
var f1 = temp__4404__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5618__auto__ = self__.__hash;
if(!((h__5618__auto__ == null))){
return h__5618__auto__;
} else {
var h__5618__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5618__auto____$1;

return h__5618__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__5197__auto__ = self__.front;
if(cljs.core.truth_(or__5197__auto__)){
return or__5197__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__5197__auto__ = self__.rear;
if(cljs.core.truth_(or__5197__auto__)){
return or__5197__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6175__auto__ = this;
return cljs.core.es6_iterator(this__6175__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
 * Assumes y is a map. Returns true if x equals y, otherwise returns
 * false.
 */
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__15029 = (i + incr);
i = G__15029;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__15030 = (i + (1));
var G__15031 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__15030;
out = G__15031;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj15035 = {};
return obj15035;
})();
var l = ks.length;
var i_15036 = (0);
while(true){
if((i_15036 < l)){
var k_15037 = (ks[i_15036]);
(new_obj[k_15037] = (obj[k_15037]));

var G__15038 = (i_15036 + (1));
i_15036 = G__15038;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__5185__auto__ = (function (){var G__15042 = k;
return goog.isString(G__15042);
})();
if(cljs.core.truth_(and__5185__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__5185__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__15043 = init__$1;
var G__15044 = k;
var G__15045 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15043,G__15044,G__15045) : f.call(null,G__15043,G__15044,G__15045));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15046 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15046) : cljs.core.deref.call(null,G__15046));
} else {
var G__15052 = cljs.core.rest(keys__$1);
var G__15053 = init__$2;
keys__$1 = G__15052;
init__$1 = G__15053;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5618__auto__ = self__.__hash;
if(!((h__5618__auto__ == null))){
return h__5618__auto__;
} else {
var h__5618__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__5618__auto____$1;

return h__5618__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__5185__auto__ = (function (){var G__15048 = k;
return goog.isString(G__15048);
})();
if(cljs.core.truth_(and__5185__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__5185__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__15049 = k;
return goog.isString(G__15049);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__5185__auto__ = (function (){var G__15051 = k;
return goog.isString(G__15051);
})();
if(cljs.core.truth_(and__5185__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__5185__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__15039_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__15039_SHARP_,(self__.strobj[p1__15039_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__15054 = null;
var G__15054__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15054__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15054 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15054__2.call(this,self__,k);
case 3:
return G__15054__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15054.cljs$core$IFn$_invoke$arity$2 = G__15054__2;
G__15054.cljs$core$IFn$_invoke$arity$3 = G__15054__3;
return G__15054;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args15040){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15040)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj15056 = {};
return obj15056;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__15057 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15057,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15057,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__15058 = (i + (2));
i = G__15058;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__15059 = (i + (2));
i = G__15059;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__15060 = (i + (2));
i = G__15060;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__15061 = (i + (2));
i = G__15061;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__15062 = (i + (2));
i = G__15062;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__5197__auto__ = (function (){var G__15066 = k;
return goog.isString(G__15066);
})();
if(cljs.core.truth_(or__5197__auto__)){
return or__5197__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_15067 = (0);
while(true){
if((i_15067 < l)){
(narr[i_15067] = (arr[i_15067]));

var G__15068 = (i_15067 + (1));
i_15067 = G__15068;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6175__auto__ = this;
return cljs.core.es6_iterator(this__6175__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15070 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__15070) : cljs.core.keys.call(null,G__15070));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15071 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__15071) : cljs.core.vals.call(null,G__15071));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__15072 = cljs.core.seq(coll);
var chunk__15073 = null;
var count__15074 = (0);
var i__15075 = (0);
while(true){
if((i__15075 < count__15074)){
var vec__15076 = chunk__15073.cljs$core$IIndexed$_nth$arity$2(null,i__15075);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15076,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15076,(1),null);
var G__15077_15090 = v;
var G__15078_15091 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15077_15090,G__15078_15091) : f.call(null,G__15077_15090,G__15078_15091));

var G__15092 = seq__15072;
var G__15093 = chunk__15073;
var G__15094 = count__15074;
var G__15095 = (i__15075 + (1));
seq__15072 = G__15092;
chunk__15073 = G__15093;
count__15074 = G__15094;
i__15075 = G__15095;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__15072);
if(temp__4406__auto__){
var seq__15072__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15072__$1)){
var c__5984__auto__ = cljs.core.chunk_first(seq__15072__$1);
var G__15096 = cljs.core.chunk_rest(seq__15072__$1);
var G__15097 = c__5984__auto__;
var G__15098 = cljs.core.count(c__5984__auto__);
var G__15099 = (0);
seq__15072 = G__15096;
chunk__15073 = G__15097;
count__15074 = G__15098;
i__15075 = G__15099;
continue;
} else {
var vec__15079 = cljs.core.first(seq__15072__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15079,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15079,(1),null);
var G__15080_15100 = v;
var G__15081_15101 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15080_15100,G__15081_15101) : f.call(null,G__15080_15100,G__15081_15101));

var G__15102 = cljs.core.next(seq__15072__$1);
var G__15103 = null;
var G__15104 = (0);
var G__15105 = (0);
seq__15072 = G__15102;
chunk__15073 = G__15103;
count__15074 = G__15104;
i__15075 = G__15105;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__15082 = init__$1;
var G__15083 = (self__.arr[i]);
var G__15084 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15082,G__15083,G__15084) : f.call(null,G__15082,G__15083,G__15084));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15085 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15085) : cljs.core.deref.call(null,G__15085));
} else {
var G__15106 = (i + (2));
var G__15107 = init__$2;
i = G__15106;
init__$1 = G__15107;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5618__auto__ = self__.__hash;
if(!((h__5618__auto__ == null))){
return h__5618__auto__;
} else {
var h__5618__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__5618__auto____$1;

return h__5618__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__15086 = other;
if(G__15086){
var bit__5871__auto__ = (G__15086.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__5871__auto__) || (G__15086.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__15108 = (i + (2));
i = G__15108;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj15088 = {};
return obj15088;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__15109 = (s + (2));
var G__15110 = d;
s = G__15109;
d = G__15110;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__15111 = (s + (2));
var G__15112 = (d + (2));
s = G__15111;
d = G__15112;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__15089 = cljs.core.aclone(self__.arr);
(G__15089[(idx + (1))] = v);

return G__15089;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__15113 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__15114 = cljs.core.next(es);
ret = G__15113;
es = G__15114;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__15115 = null;
var G__15115__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15115__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15115 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15115__2.call(this,self__,k);
case 3:
return G__15115__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15115.cljs$core$IFn$_invoke$arity$2 = G__15115__2;
G__15115.cljs$core$IFn$_invoke$arity$3 = G__15115__3;
return G__15115;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args15069){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15069)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__15116 = (i + (2));
var G__15117 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__15116;
ret = G__15117;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6175__auto__ = this;
return cljs.core.es6_iterator(this__6175__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__15118_15126 = self__.arr;
G__15118_15126.pop();

G__15118_15126.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__15119 = self__.len;
var G__15120 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__15119,G__15120) : cljs.core.array__GT_transient_hash_map.call(null,G__15119,G__15120));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__15121 = o;
if(G__15121){
var bit__5878__auto__ = (G__15121.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__5878__auto__) || (G__15121.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__15121.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__15121);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__15121);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__15122 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15122) : cljs.core.key.call(null,G__15122));
})(),(function (){var G__15123 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15123) : cljs.core.val.call(null,G__15123));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4404__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
var G__15127 = cljs.core.next(es);
var G__15128 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__15124 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15124) : cljs.core.key.call(null,G__15124));
})(),(function (){var G__15125 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15125) : cljs.core.val.call(null,G__15125));
})());
es = G__15127;
tcoll__$2 = G__15128;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__15129 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__15130 = (i + (2));
out = G__15129;
i = G__15130;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__15133 = cljs.core.aclone(arr);
(G__15133[i] = a);

return G__15133;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__15134 = cljs.core.aclone(arr);
(G__15134[i] = a);

(G__15134[j] = b);

return G__15134;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__15139 = init__$1;
var G__15140 = k;
var G__15141 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15139,G__15140,G__15141) : f.call(null,G__15139,G__15140,G__15141));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15142 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15142) : cljs.core.deref.call(null,G__15142));
} else {
var G__15143 = (i + (2));
var G__15144 = init__$2;
i = G__15143;
init__$1 = G__15144;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__15145 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__15145) : cljs.core.create_inode_seq.call(null,G__15145));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_15159 = (0);
var j_15160 = (0);
while(true){
if((i_15159 < (32))){
if((((self__.bitmap >>> i_15159) & (1)) === (0))){
var G__15161 = (i_15159 + (1));
var G__15162 = j_15160;
i_15159 = G__15161;
j_15160 = G__15162;
continue;
} else {
(nodes[i_15159] = ((!(((self__.arr[j_15160]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_15160])),(self__.arr[j_15160]),(self__.arr[(j_15160 + (1))]),added_leaf_QMARK_):(self__.arr[(j_15160 + (1))])));

var G__15163 = (i_15159 + (1));
var G__15164 = (j_15160 + (2));
i_15159 = G__15163;
j_15160 = G__15164;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__15146 = edit__$1;
var G__15147 = (shift + (5));
var G__15148 = key_or_nil;
var G__15149 = val_or_node;
var G__15150 = hash;
var G__15151 = key;
var G__15152 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__15146,G__15147,G__15148,G__15149,G__15150,G__15151,G__15152) : cljs.core.create_node.call(null,G__15146,G__15147,G__15148,G__15149,G__15150,G__15151,G__15152));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_15165 = (0);
var j_15166 = (0);
while(true){
if((i_15165 < (32))){
if((((self__.bitmap >>> i_15165) & (1)) === (0))){
var G__15167 = (i_15165 + (1));
var G__15168 = j_15166;
i_15165 = G__15167;
j_15166 = G__15168;
continue;
} else {
(nodes[i_15165] = ((!(((self__.arr[j_15166]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_15166])),(self__.arr[j_15166]),(self__.arr[(j_15166 + (1))]),added_leaf_QMARK_):(self__.arr[(j_15166 + (1))])));

var G__15169 = (i_15165 + (1));
var G__15170 = (j_15166 + (2));
i_15165 = G__15169;
j_15166 = G__15170;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__15153 = (shift + (5));
var G__15154 = key_or_nil;
var G__15155 = val_or_node;
var G__15156 = hash;
var G__15157 = key;
var G__15158 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__15153,G__15154,G__15155,G__15156,G__15157,G__15158) : cljs.core.create_node.call(null,G__15153,G__15154,G__15155,G__15156,G__15157,G__15158));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__15171 = (i + (1));
var G__15172 = (j + (2));
var G__15173 = (bitmap | ((1) << i));
i = G__15171;
j = G__15172;
bitmap = G__15173;
continue;
} else {
var G__15174 = (i + (1));
var G__15175 = j;
var G__15176 = bitmap;
i = G__15174;
j = G__15175;
bitmap = G__15176;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__15177 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__15177) : cljs.core.create_array_node_seq.call(null,G__15177));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15178 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15178) : cljs.core.deref.call(null,G__15178));
} else {
var G__15179 = (i + (1));
var G__15180 = init__$2;
i = G__15179;
init__$1 = G__15180;
continue;
}
} else {
var G__15181 = (i + (1));
var G__15182 = init__$1;
i = G__15181;
init__$1 = G__15182;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__15183 = (i + (2));
i = G__15183;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__15184 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__15184) : cljs.core.create_inode_seq.call(null,G__15184));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5618__auto__ = self__.__hash;
if(!((h__5618__auto__ == null))){
return h__5618__auto__;
} else {
var h__5618__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5618__auto____$1;

return h__5618__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__15185 = self__.nodes;
var G__15186 = (self__.i + (2));
var G__15187 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__15185,G__15186,G__15187) : cljs.core.create_inode_seq.call(null,G__15185,G__15186,G__15187));
} else {
var G__15188 = self__.nodes;
var G__15189 = self__.i;
var G__15190 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__15188,G__15189,G__15190) : cljs.core.create_inode_seq.call(null,G__15188,G__15189,G__15190));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6175__auto__ = this;
return cljs.core.es6_iterator(this__6175__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4404__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4404__auto__)){
var node = temp__4404__auto__;
var temp__4404__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4404__auto____$1)){
var node_seq = temp__4404__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__15194 = (j + (2));
j = G__15194;
continue;
}
} else {
var G__15195 = (j + (2));
j = G__15195;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5618__auto__ = self__.__hash;
if(!((h__5618__auto__ == null))){
return h__5618__auto__;
} else {
var h__5618__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5618__auto____$1;

return h__5618__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__15196 = null;
var G__15197 = self__.nodes;
var G__15198 = self__.i;
var G__15199 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__15196,G__15197,G__15198,G__15199) : cljs.core.create_array_node_seq.call(null,G__15196,G__15197,G__15198,G__15199));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6175__auto__ = this;
return cljs.core.es6_iterator(this__6175__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4404__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4404__auto__)){
var nj = temp__4404__auto__;
var temp__4404__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4404__auto____$1)){
var ns = temp__4404__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__15204 = (j + (1));
j = G__15204;
continue;
}
} else {
var G__15205 = (j + (1));
j = G__15205;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15207 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__15207) : cljs.core.keys.call(null,G__15207));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15208 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__15208) : cljs.core.vals.call(null,G__15208));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__15209 = cljs.core.seq(coll);
var chunk__15210 = null;
var count__15211 = (0);
var i__15212 = (0);
while(true){
if((i__15212 < count__15211)){
var vec__15213 = chunk__15210.cljs$core$IIndexed$_nth$arity$2(null,i__15212);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15213,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15213,(1),null);
var G__15214_15225 = v;
var G__15215_15226 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15214_15225,G__15215_15226) : f.call(null,G__15214_15225,G__15215_15226));

var G__15227 = seq__15209;
var G__15228 = chunk__15210;
var G__15229 = count__15211;
var G__15230 = (i__15212 + (1));
seq__15209 = G__15227;
chunk__15210 = G__15228;
count__15211 = G__15229;
i__15212 = G__15230;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__15209);
if(temp__4406__auto__){
var seq__15209__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15209__$1)){
var c__5984__auto__ = cljs.core.chunk_first(seq__15209__$1);
var G__15231 = cljs.core.chunk_rest(seq__15209__$1);
var G__15232 = c__5984__auto__;
var G__15233 = cljs.core.count(c__5984__auto__);
var G__15234 = (0);
seq__15209 = G__15231;
chunk__15210 = G__15232;
count__15211 = G__15233;
i__15212 = G__15234;
continue;
} else {
var vec__15216 = cljs.core.first(seq__15209__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15216,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15216,(1),null);
var G__15217_15235 = v;
var G__15218_15236 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15217_15235,G__15218_15236) : f.call(null,G__15217_15235,G__15218_15236));

var G__15237 = cljs.core.next(seq__15209__$1);
var G__15238 = null;
var G__15239 = (0);
var G__15240 = (0);
seq__15209 = G__15237;
chunk__15210 = G__15238;
count__15211 = G__15239;
i__15212 = G__15240;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__15219 = init;
var G__15220 = null;
var G__15221 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15219,G__15220,G__15221) : f.call(null,G__15219,G__15220,G__15221));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__15222 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15222) : cljs.core.deref.call(null,G__15222));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5618__auto__ = self__.__hash;
if(!((h__5618__auto__ == null))){
return h__5618__auto__;
} else {
var h__5618__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__5618__auto____$1;

return h__5618__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj15224 = {};
return obj15224;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__15241 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__15242 = cljs.core.next(es);
ret = G__15241;
es = G__15242;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__15243 = null;
var G__15243__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15243__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15243 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15243__2.call(this,self__,k);
case 3:
return G__15243__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15243.cljs$core$IFn$_invoke$arity$2 = G__15243__2;
G__15243.cljs$core$IFn$_invoke$arity$3 = G__15243__3;
return G__15243;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args15206){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15206)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__15244 = (i + (2));
var G__15245 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__15244;
ret = G__15245;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__15246 = (i + (1));
var G__15247 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__15246;
out = G__15247;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6175__auto__ = this;
return cljs.core.es6_iterator(this__6175__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__15248 = o;
if(G__15248){
var bit__5878__auto__ = (G__15248.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__5878__auto__) || (G__15248.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__15248.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__15248);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__15248);
}
})()){
return tcoll.assoc_BANG_((function (){var G__15249 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15249) : cljs.core.key.call(null,G__15249));
})(),(function (){var G__15250 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15250) : cljs.core.val.call(null,G__15250));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4404__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
var G__15253 = cljs.core.next(es);
var G__15254 = tcoll__$1.assoc_BANG_((function (){var G__15251 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15251) : cljs.core.key.call(null,G__15251));
})(),(function (){var G__15252 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15252) : cljs.core.val.call(null,G__15252));
})());
es = G__15253;
tcoll__$1 = G__15254;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__15255 = ((ascending_QMARK_)?t.left:t.right);
var G__15256 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__15255;
stack__$1 = G__15256;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5618__auto__ = self__.__hash;
if(!((h__5618__auto__ == null))){
return h__5618__auto__;
} else {
var h__5618__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5618__auto____$1;

return h__5618__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6175__auto__ = this;
return cljs.core.es6_iterator(this__6175__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__15269 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15269) : cljs.core.deref.call(null,G__15269));
} else {
var init__$2 = (function (){var G__15270 = init__$1;
var G__15271 = node.key;
var G__15272 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15270,G__15271,G__15272) : f.call(null,G__15270,G__15271,G__15272));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15273 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15273) : cljs.core.deref.call(null,G__15273));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__15274 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15274) : cljs.core.deref.call(null,G__15274));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5618__auto__ = self__.__hash;
if(!((h__5618__auto__ == null))){
return h__5618__auto__;
} else {
var h__5618__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5618__auto____$1;

return h__5618__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__15276 = null;
var G__15276__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15276__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15276 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15276__2.call(this,self__,k);
case 3:
return G__15276__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15276.cljs$core$IFn$_invoke$arity$2 = G__15276__2;
G__15276.cljs$core$IFn$_invoke$arity$3 = G__15276__3;
return G__15276;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args15275){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15275)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6175__auto__ = this;
return cljs.core.es6_iterator(this__6175__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5618__auto__ = self__.__hash;
if(!((h__5618__auto__ == null))){
return h__5618__auto__;
} else {
var h__5618__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5618__auto____$1;

return h__5618__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__15278 = null;
var G__15278__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15278__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15278 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15278__2.call(this,self__,k);
case 3:
return G__15278__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15278.cljs$core$IFn$_invoke$arity$2 = G__15278__2;
G__15278.cljs$core$IFn$_invoke$arity$3 = G__15278__3;
return G__15278;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args15277){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15277)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6175__auto__ = this;
return cljs.core.es6_iterator(this__6175__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__15291 = k;
var G__15292 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15291,G__15292) : comp.call(null,G__15291,G__15292));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__15311 = k;
var G__15312 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15311,G__15312) : comp.call(null,G__15311,G__15312));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__15323 = k;
var G__15324 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15323,G__15324) : comp.call(null,G__15323,G__15324));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__15326 = cljs.core.seq(coll);
var chunk__15327 = null;
var count__15328 = (0);
var i__15329 = (0);
while(true){
if((i__15329 < count__15328)){
var vec__15330 = chunk__15327.cljs$core$IIndexed$_nth$arity$2(null,i__15329);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15330,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15330,(1),null);
var G__15331_15343 = v;
var G__15332_15344 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15331_15343,G__15332_15344) : f.call(null,G__15331_15343,G__15332_15344));

var G__15345 = seq__15326;
var G__15346 = chunk__15327;
var G__15347 = count__15328;
var G__15348 = (i__15329 + (1));
seq__15326 = G__15345;
chunk__15327 = G__15346;
count__15328 = G__15347;
i__15329 = G__15348;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__15326);
if(temp__4406__auto__){
var seq__15326__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15326__$1)){
var c__5984__auto__ = cljs.core.chunk_first(seq__15326__$1);
var G__15349 = cljs.core.chunk_rest(seq__15326__$1);
var G__15350 = c__5984__auto__;
var G__15351 = cljs.core.count(c__5984__auto__);
var G__15352 = (0);
seq__15326 = G__15349;
chunk__15327 = G__15350;
count__15328 = G__15351;
i__15329 = G__15352;
continue;
} else {
var vec__15333 = cljs.core.first(seq__15326__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15333,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15333,(1),null);
var G__15334_15353 = v;
var G__15335_15354 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15334_15353,G__15335_15354) : f.call(null,G__15334_15353,G__15335_15354));

var G__15355 = cljs.core.next(seq__15326__$1);
var G__15356 = null;
var G__15357 = (0);
var G__15358 = (0);
seq__15326 = G__15355;
chunk__15327 = G__15356;
count__15328 = G__15357;
i__15329 = G__15358;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15336 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__15336) : cljs.core.keys.call(null,G__15336));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15337 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__15337) : cljs.core.vals.call(null,G__15337));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__15338 = k;
var G__15339 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__15338,G__15339) : self__.comp.call(null,G__15338,G__15339));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__15359 = t.left;
t = G__15359;
continue;
} else {
var G__15360 = t.right;
t = G__15360;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5618__auto__ = self__.__hash;
if(!((h__5618__auto__ == null))){
return h__5618__auto__;
} else {
var h__5618__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__5618__auto____$1;

return h__5618__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__15361 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__15362 = cljs.core.next(es);
ret = G__15361;
es = G__15362;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__15363 = null;
var G__15363__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15363__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15363 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15363__2.call(this,self__,k);
case 3:
return G__15363__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15363.cljs$core$IFn$_invoke$arity$2 = G__15363__2;
G__15363.cljs$core$IFn$_invoke$arity$3 = G__15363__3;
return G__15363;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args15325){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15325)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__15340 = k;
var G__15341 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__15340,G__15341) : self__.comp.call(null,G__15340,G__15341));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__15364 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__15365 = t.left;
stack = G__15364;
t = G__15365;
continue;
} else {
var G__15366 = stack;
var G__15367 = t.right;
stack = G__15366;
t = G__15367;
continue;
}
} else {
if((c > (0))){
var G__15368 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__15369 = t.right;
stack = G__15368;
t = G__15369;
continue;
} else {
var G__15370 = stack;
var G__15371 = t.left;
stack = G__15370;
t = G__15371;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__15342 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15342) : cljs.core.key.call(null,G__15342));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6175__auto__ = this;
return cljs.core.es6_iterator(this__6175__auto__);
}));
/**
 * keyval => key val
 * Returns a new hash map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__15372 = cljs.core.nnext(in$);
var G__15373 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__15372;
out = G__15373;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__15374__i = 0, G__15374__a = new Array(arguments.length -  0);
while (G__15374__i < G__15374__a.length) {G__15374__a[G__15374__i] = arguments[G__15374__i + 0]; ++G__15374__i;}
  keyvals = new cljs.core.IndexedSeq(G__15374__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__15375){
var keyvals = cljs.core.seq(arglist__15375);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
 * keyval => key val
 * Returns a new array map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__15376__i = 0, G__15376__a = new Array(arguments.length -  0);
while (G__15376__i < G__15376__a.length) {G__15376__a[G__15376__i] = arguments[G__15376__i + 0]; ++G__15376__i;}
  keyvals = new cljs.core.IndexedSeq(G__15376__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__15377){
var keyvals = cljs.core.seq(arglist__15377);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
 * keyval => key val
 * Returns a new object map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj15381 = {};
return obj15381;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__15382 = cljs.core.nnext(kvs);
kvs = G__15382;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__15383__i = 0, G__15383__a = new Array(arguments.length -  0);
while (G__15383__i < G__15383__a.length) {G__15383__a[G__15383__i] = arguments[G__15383__i + 0]; ++G__15383__i;}
  keyvals = new cljs.core.IndexedSeq(G__15383__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__15384){
var keyvals = cljs.core.seq(arglist__15384);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
 * keyval => key val
 * Returns a new sorted map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__15385 = cljs.core.nnext(in$);
var G__15386 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__15385;
out = G__15386;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__15387__i = 0, G__15387__a = new Array(arguments.length -  0);
while (G__15387__i < G__15387__a.length) {G__15387__a[G__15387__i] = arguments[G__15387__i + 0]; ++G__15387__i;}
  keyvals = new cljs.core.IndexedSeq(G__15387__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__15388){
var keyvals = cljs.core.seq(arglist__15388);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
 * keyval => key val
 * Returns a new sorted map with supplied mappings, using the supplied comparator.
 * @param {...*} var_args
 */
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__15389 = cljs.core.nnext(in$);
var G__15390 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__15389;
out = G__15390;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__15391__i = 0, G__15391__a = new Array(arguments.length -  1);
while (G__15391__i < G__15391__a.length) {G__15391__a[G__15391__i] = arguments[G__15391__i + 1]; ++G__15391__i;}
  keyvals = new cljs.core.IndexedSeq(G__15391__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__15392){
var comparator = cljs.core.first(arglist__15392);
var keyvals = cljs.core.rest(arglist__15392);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__15393 = self__.mseq;
if(G__15393){
var bit__5878__auto__ = (G__15393.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__5878__auto__) || (G__15393.cljs$core$INext$)){
return true;
} else {
if((!G__15393.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15393);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15393);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__15394 = self__.mseq;
if(G__15394){
var bit__5878__auto__ = (G__15394.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__5878__auto__) || (G__15394.cljs$core$INext$)){
return true;
} else {
if((!G__15394.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15394);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15394);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6175__auto__ = this;
return cljs.core.es6_iterator(this__6175__auto__);
}));
/**
 * Returns a sequence of the map's keys.
 */
cljs.core.keys = (function keys(hash_map){
var temp__4406__auto__ = cljs.core.seq(hash_map);
if(temp__4406__auto__){
var mseq = temp__4406__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
 * Returns the key of the map entry.
 */
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__15395 = self__.mseq;
if(G__15395){
var bit__5878__auto__ = (G__15395.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__5878__auto__) || (G__15395.cljs$core$INext$)){
return true;
} else {
if((!G__15395.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15395);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15395);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__15396 = self__.mseq;
if(G__15396){
var bit__5878__auto__ = (G__15396.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__5878__auto__) || (G__15396.cljs$core$INext$)){
return true;
} else {
if((!G__15396.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15396);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15396);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6175__auto__ = this;
return cljs.core.es6_iterator(this__6175__auto__);
}));
/**
 * Returns a sequence of the map's values.
 */
cljs.core.vals = (function vals(hash_map){
var temp__4406__auto__ = cljs.core.seq(hash_map);
if(temp__4406__auto__){
var mseq = temp__4406__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
 * Returns the value in the map entry.
 */
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
 * Returns a map that consists of the rest of the maps conj-ed onto
 * the first.  If a key occurs in more than one map, the mapping from
 * the latter (left-to-right) will be the mapping in the result.
 * @param {...*} var_args
 */
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__15397_SHARP_,p2__15398_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__5197__auto__ = p1__15397_SHARP_;
if(cljs.core.truth_(or__5197__auto__)){
return or__5197__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__15398_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__15399__i = 0, G__15399__a = new Array(arguments.length -  0);
while (G__15399__i < G__15399__a.length) {G__15399__a[G__15399__i] = arguments[G__15399__i + 0]; ++G__15399__i;}
  maps = new cljs.core.IndexedSeq(G__15399__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__15400){
var maps = cljs.core.seq(arglist__15400);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
 * Returns a map that consists of the rest of the maps conj-ed onto
 * the first.  If a key occurs in more than one map, the mapping(s)
 * from the latter (left-to-right) will be combined with the mapping in
 * the result by calling (f val-in-result val-in-latter).
 * @param {...*} var_args
 */
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15403 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15404 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15403,G__15404) : f.call(null,G__15403,G__15404));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__5197__auto__ = m1;
if(cljs.core.truth_(or__5197__auto__)){
return or__5197__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__15405__i = 0, G__15405__a = new Array(arguments.length -  1);
while (G__15405__i < G__15405__a.length) {G__15405__a[G__15405__i] = arguments[G__15405__i + 1]; ++G__15405__i;}
  maps = new cljs.core.IndexedSeq(G__15405__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__15406){
var f = cljs.core.first(arglist__15406);
var maps = cljs.core.rest(arglist__15406);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
 * Returns a map containing only those entries in map whose key is in keys
 */
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__15407 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__15408 = cljs.core.next(keys);
ret = G__15407;
keys = G__15408;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__15411 = cljs.core.seq(coll);
var chunk__15412 = null;
var count__15413 = (0);
var i__15414 = (0);
while(true){
if((i__15414 < count__15413)){
var vec__15415 = chunk__15412.cljs$core$IIndexed$_nth$arity$2(null,i__15414);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15415,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15415,(1),null);
var G__15416_15421 = v;
var G__15417_15422 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15416_15421,G__15417_15422) : f.call(null,G__15416_15421,G__15417_15422));

var G__15423 = seq__15411;
var G__15424 = chunk__15412;
var G__15425 = count__15413;
var G__15426 = (i__15414 + (1));
seq__15411 = G__15423;
chunk__15412 = G__15424;
count__15413 = G__15425;
i__15414 = G__15426;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__15411);
if(temp__4406__auto__){
var seq__15411__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15411__$1)){
var c__5984__auto__ = cljs.core.chunk_first(seq__15411__$1);
var G__15427 = cljs.core.chunk_rest(seq__15411__$1);
var G__15428 = c__5984__auto__;
var G__15429 = cljs.core.count(c__5984__auto__);
var G__15430 = (0);
seq__15411 = G__15427;
chunk__15412 = G__15428;
count__15413 = G__15429;
i__15414 = G__15430;
continue;
} else {
var vec__15418 = cljs.core.first(seq__15411__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15418,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15418,(1),null);
var G__15419_15431 = v;
var G__15420_15432 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15419_15431,G__15420_15432) : f.call(null,G__15419_15431,G__15420_15432));

var G__15433 = cljs.core.next(seq__15411__$1);
var G__15434 = null;
var G__15435 = (0);
var G__15436 = (0);
seq__15411 = G__15433;
chunk__15412 = G__15434;
count__15413 = G__15435;
i__15414 = G__15436;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5618__auto__ = self__.__hash;
if(!((h__5618__auto__ == null))){
return h__5618__auto__;
} else {
var h__5618__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__5618__auto____$1;

return h__5618__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__15409_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__15409_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__15437 = null;
var G__15437__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15437__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15437 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15437__2.call(this,self__,k);
case 3:
return G__15437__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15437.cljs$core$IFn$_invoke$arity$2 = G__15437__2;
G__15437.cljs$core$IFn$_invoke$arity$3 = G__15437__3;
return G__15437;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args15410){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15410)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__15438 = (i + (1));
var G__15439 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__15438;
out = G__15439;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__15440 = (i + (1));
var G__15441 = cljs.core._conj_BANG_(out,(items[i]));
i = G__15440;
out = G__15441;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6175__auto__ = this;
return cljs.core.es6_iterator(this__6175__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__15443 = null;
var G__15443__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__15443__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__15443 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15443__2.call(this,self__,k);
case 3:
return G__15443__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15443.cljs$core$IFn$_invoke$arity$2 = G__15443__2;
G__15443.cljs$core$IFn$_invoke$arity$3 = G__15443__3;
return G__15443;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args15442){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15442)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__15446 = cljs.core.seq(coll);
var chunk__15447 = null;
var count__15448 = (0);
var i__15449 = (0);
while(true){
if((i__15449 < count__15448)){
var vec__15450 = chunk__15447.cljs$core$IIndexed$_nth$arity$2(null,i__15449);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15450,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15450,(1),null);
var G__15451_15456 = v;
var G__15452_15457 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15451_15456,G__15452_15457) : f.call(null,G__15451_15456,G__15452_15457));

var G__15458 = seq__15446;
var G__15459 = chunk__15447;
var G__15460 = count__15448;
var G__15461 = (i__15449 + (1));
seq__15446 = G__15458;
chunk__15447 = G__15459;
count__15448 = G__15460;
i__15449 = G__15461;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__15446);
if(temp__4406__auto__){
var seq__15446__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15446__$1)){
var c__5984__auto__ = cljs.core.chunk_first(seq__15446__$1);
var G__15462 = cljs.core.chunk_rest(seq__15446__$1);
var G__15463 = c__5984__auto__;
var G__15464 = cljs.core.count(c__5984__auto__);
var G__15465 = (0);
seq__15446 = G__15462;
chunk__15447 = G__15463;
count__15448 = G__15464;
i__15449 = G__15465;
continue;
} else {
var vec__15453 = cljs.core.first(seq__15446__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15453,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15453,(1),null);
var G__15454_15466 = v;
var G__15455_15467 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15454_15466,G__15455_15467) : f.call(null,G__15454_15466,G__15455_15467));

var G__15468 = cljs.core.next(seq__15446__$1);
var G__15469 = null;
var G__15470 = (0);
var G__15471 = (0);
seq__15446 = G__15468;
chunk__15447 = G__15469;
count__15448 = G__15470;
i__15449 = G__15471;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5618__auto__ = self__.__hash;
if(!((h__5618__auto__ == null))){
return h__5618__auto__;
} else {
var h__5618__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__5618__auto____$1;

return h__5618__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__15444_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__15444_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__15472 = null;
var G__15472__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15472__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15472 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15472__2.call(this,self__,k);
case 3:
return G__15472__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15472.cljs$core$IFn$_invoke$arity$2 = G__15472__2;
G__15472.cljs$core$IFn$_invoke$arity$3 = G__15472__3;
return G__15472;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args15445){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15445)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6175__auto__ = this;
return cljs.core.es6_iterator(this__6175__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__6078__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__6078__auto__.length)){
var G__15473 = (i + (1));
var G__15474 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__15473;
res = G__15474;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
 * Returns a set of the distinct elements of coll.
 */
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__15475 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__15476 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__15475;
out = G__15476;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
 * @param {...*} var_args
 */
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__15477__delegate = function (keys){
return cljs.core.set(keys);
};
var G__15477 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__15478__i = 0, G__15478__a = new Array(arguments.length -  0);
while (G__15478__i < G__15478__a.length) {G__15478__a[G__15478__i] = arguments[G__15478__i + 0]; ++G__15478__i;}
  keys = new cljs.core.IndexedSeq(G__15478__a,0);
} 
return G__15477__delegate.call(this,keys);};
G__15477.cljs$lang$maxFixedArity = 0;
G__15477.cljs$lang$applyTo = (function (arglist__15479){
var keys = cljs.core.seq(arglist__15479);
return G__15477__delegate(keys);
});
G__15477.cljs$core$IFn$_invoke$arity$variadic = G__15477__delegate;
return G__15477;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__15480 = null;
if (arguments.length > 0) {
var G__15481__i = 0, G__15481__a = new Array(arguments.length -  0);
while (G__15481__i < G__15481__a.length) {G__15481__a[G__15481__i] = arguments[G__15481__i + 0]; ++G__15481__i;}
G__15480 = new cljs.core.IndexedSeq(G__15481__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__15480);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
 * Returns a new sorted set with supplied keys.
 * @param {...*} var_args
 */
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__15482__i = 0, G__15482__a = new Array(arguments.length -  0);
while (G__15482__i < G__15482__a.length) {G__15482__a[G__15482__i] = arguments[G__15482__i + 0]; ++G__15482__i;}
  keys = new cljs.core.IndexedSeq(G__15482__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__15483){
var keys = cljs.core.seq(arglist__15483);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
 * Returns a new sorted set with supplied keys, using the supplied comparator.
 * @param {...*} var_args
 */
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__15484__i = 0, G__15484__a = new Array(arguments.length -  1);
while (G__15484__i < G__15484__a.length) {G__15484__a[G__15484__i] = arguments[G__15484__i + 1]; ++G__15484__i;}
  keys = new cljs.core.IndexedSeq(G__15484__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__15485){
var comparator = cljs.core.first(arglist__15485);
var keys = cljs.core.rest(arglist__15485);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
 * Given a map of replacement pairs and a vector/collection, returns a
 * vector/seq with any elements = a key in smap replaced with the
 * corresponding val in smap.  Returns a transducer when no collection
 * is provided.
 */
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__15486_SHARP_){
var temp__4404__auto__ = cljs.core.find(smap,p1__15486_SHARP_);
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
return cljs.core.val(e);
} else {
return p1__15486_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4404__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__15487_SHARP_){
var temp__4404__auto__ = cljs.core.find(smap,p1__15487_SHARP_);
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
return cljs.core.second(e);
} else {
return p1__15487_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
 * Returns a lazy sequence of the elements of coll with duplicates removed
 */
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__15508 = null;
var G__15508__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15508__1 = (function (result){
var G__15498 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15498) : rf.call(null,G__15498));
});
var G__15508__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__15499 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15499) : cljs.core.deref.call(null,G__15499));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__15500 = result;
var G__15501 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15500,G__15501) : rf.call(null,G__15500,G__15501));
}
});
G__15508 = function(result,input){
switch(arguments.length){
case 0:
return G__15508__0.call(this);
case 1:
return G__15508__1.call(this,result);
case 2:
return G__15508__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15508.cljs$core$IFn$_invoke$arity$0 = G__15508__0;
G__15508.cljs$core$IFn$_invoke$arity$1 = G__15508__1;
G__15508.cljs$core$IFn$_invoke$arity$2 = G__15508__2;
return G__15508;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__15506,seen__$1){
while(true){
var vec__15507 = p__15506;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15507,(0),null);
var xs__$1 = vec__15507;
var temp__4406__auto__ = cljs.core.seq(xs__$1);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__15509 = cljs.core.rest(s);
var G__15510 = seen__$1;
p__15506 = G__15509;
seen__$1 = G__15510;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__15511 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__15512 = cljs.core.next(s__$1);
ret = G__15511;
s__$1 = G__15512;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
 * Returns the name String of a string, symbol or keyword.
 */
cljs.core.name = (function name(x){
if((function (){var G__15514 = x;
if(G__15514){
var bit__5871__auto__ = (G__15514.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__5871__auto__) || (G__15514.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
 * Returns a map with the keys mapped to the corresponding vals.
 */
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__15515 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__15516 = cljs.core.next(ks);
var G__15517 = cljs.core.next(vs);
map = G__15515;
ks = G__15516;
vs = G__15517;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
 * Returns the x for which (k x), a number, is greatest.
 * @param {...*} var_args
 */
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__15528 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15528) : k.call(null,G__15528));
})() > (function (){var G__15529 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15529) : k.call(null,G__15529));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__15530__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__15518_SHARP_,p2__15519_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__15518_SHARP_,p2__15519_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__15530 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__15531__i = 0, G__15531__a = new Array(arguments.length -  3);
while (G__15531__i < G__15531__a.length) {G__15531__a[G__15531__i] = arguments[G__15531__i + 3]; ++G__15531__i;}
  more = new cljs.core.IndexedSeq(G__15531__a,0);
} 
return G__15530__delegate.call(this,k,x,y,more);};
G__15530.cljs$lang$maxFixedArity = 3;
G__15530.cljs$lang$applyTo = (function (arglist__15532){
var k = cljs.core.first(arglist__15532);
arglist__15532 = cljs.core.next(arglist__15532);
var x = cljs.core.first(arglist__15532);
arglist__15532 = cljs.core.next(arglist__15532);
var y = cljs.core.first(arglist__15532);
var more = cljs.core.rest(arglist__15532);
return G__15530__delegate(k,x,y,more);
});
G__15530.cljs$core$IFn$_invoke$arity$variadic = G__15530__delegate;
return G__15530;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__15533 = null;
if (arguments.length > 3) {
var G__15534__i = 0, G__15534__a = new Array(arguments.length -  3);
while (G__15534__i < G__15534__a.length) {G__15534__a[G__15534__i] = arguments[G__15534__i + 3]; ++G__15534__i;}
G__15533 = new cljs.core.IndexedSeq(G__15534__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__15533);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
 * Returns the x for which (k x), a number, is least.
 * @param {...*} var_args
 */
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__15545 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15545) : k.call(null,G__15545));
})() < (function (){var G__15546 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15546) : k.call(null,G__15546));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__15547__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__15535_SHARP_,p2__15536_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__15535_SHARP_,p2__15536_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__15547 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__15548__i = 0, G__15548__a = new Array(arguments.length -  3);
while (G__15548__i < G__15548__a.length) {G__15548__a[G__15548__i] = arguments[G__15548__i + 3]; ++G__15548__i;}
  more = new cljs.core.IndexedSeq(G__15548__a,0);
} 
return G__15547__delegate.call(this,k,x,y,more);};
G__15547.cljs$lang$maxFixedArity = 3;
G__15547.cljs$lang$applyTo = (function (arglist__15549){
var k = cljs.core.first(arglist__15549);
arglist__15549 = cljs.core.next(arglist__15549);
var x = cljs.core.first(arglist__15549);
arglist__15549 = cljs.core.next(arglist__15549);
var y = cljs.core.first(arglist__15549);
var more = cljs.core.rest(arglist__15549);
return G__15547__delegate(k,x,y,more);
});
G__15547.cljs$core$IFn$_invoke$arity$variadic = G__15547__delegate;
return G__15547;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__15550 = null;
if (arguments.length > 3) {
var G__15551__i = 0, G__15551__a = new Array(arguments.length -  3);
while (G__15551__i < G__15551__a.length) {G__15551__a[G__15551__i] = arguments[G__15551__i + 3]; ++G__15551__i;}
G__15550 = new cljs.core.IndexedSeq(G__15551__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__15550);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
 * Returns a lazy sequence of lists like partition, but may include
 * partitions with fewer than n items at the end.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__15568 = null;
var G__15568__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15568__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__15563 = result;
var G__15564 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15563,G__15564) : rf.call(null,G__15563,G__15564));
})());
})());
var G__15565 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15565) : rf.call(null,G__15565));
});
var G__15568__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__15566 = result;
var G__15567 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15566,G__15567) : rf.call(null,G__15566,G__15567));
} else {
return result;
}
});
G__15568 = function(result,input){
switch(arguments.length){
case 0:
return G__15568__0.call(this);
case 1:
return G__15568__1.call(this,result);
case 2:
return G__15568__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15568.cljs$core$IFn$_invoke$arity$0 = G__15568__0;
G__15568.cljs$core$IFn$_invoke$arity$1 = G__15568__1;
G__15568.cljs$core$IFn$_invoke$arity$2 = G__15568__2;
return G__15568;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
 * Returns a lazy sequence of successive items from coll while
 * (pred item) returns true. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__15581 = null;
var G__15581__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15581__1 = (function (result){
var G__15576 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15576) : rf.call(null,G__15576));
});
var G__15581__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__15577 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15577) : pred.call(null,G__15577));
})())){
var G__15578 = result;
var G__15579 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15578,G__15579) : rf.call(null,G__15578,G__15579));
} else {
return cljs.core.reduced(result);
}
});
G__15581 = function(result,input){
switch(arguments.length){
case 0:
return G__15581__0.call(this);
case 1:
return G__15581__1.call(this,result);
case 2:
return G__15581__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15581.cljs$core$IFn$_invoke$arity$0 = G__15581__0;
G__15581.cljs$core$IFn$_invoke$arity$1 = G__15581__1;
G__15581.cljs$core$IFn$_invoke$arity$2 = G__15581__2;
return G__15581;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.truth_((function (){var G__15580 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15580) : pred.call(null,G__15580));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__15586 = (function (){var G__15588 = cljs.core._entry_key(sc,e);
var G__15589 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15588,G__15589) : comp.call(null,G__15588,G__15589));
})();
var G__15587 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__15586,G__15587) : test.call(null,G__15586,G__15587));
});
});
/**
 * sc must be a sorted collection, test(s) one of <, <=, > or
 * >=. Returns a seq of those entries with keys ek for
 * which (test (.. sc comparator (compare ek key)) 0) is true
 */
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4406__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4406__auto__)){
var vec__15593 = temp__4406__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15593,(0),null);
var s = vec__15593;
if(cljs.core.truth_((function (){var G__15594 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__15594) : include.call(null,G__15594));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4406__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4406__auto__)){
var vec__15595 = temp__4406__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15595,(0),null);
var s = vec__15595;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
 * sc must be a sorted collection, test(s) one of <, <=, > or
 * >=. Returns a reverse seq of those entries with keys ek for
 * which (test (.. sc comparator (compare ek key)) 0) is true
 */
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4406__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4406__auto__)){
var vec__15599 = temp__4406__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15599,(0),null);
var s = vec__15599;
if(cljs.core.truth_((function (){var G__15600 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__15600) : include.call(null,G__15600));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4406__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4406__auto__)){
var vec__15601 = temp__4406__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15601,(0),null);
var s = vec__15601;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__15602 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__15602) : Math.ceil.call(null,G__15602));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__5618__auto__ = self__.__hash;
if(!((h__5618__auto__ == null))){
return h__5618__auto__;
} else {
var h__5618__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__5618__auto____$1;

return h__5618__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__15603 = ret;
var G__15604 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15603,G__15604) : f.call(null,G__15603,G__15604));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__15605 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15605) : cljs.core.deref.call(null,G__15605));
} else {
var G__15606 = (i + self__.step);
var G__15607 = ret__$1;
i = G__15606;
ret = G__15607;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6175__auto__ = this;
return cljs.core.es6_iterator(this__6175__auto__);
}));
/**
 * Returns a lazy seq of nums from start (inclusive) to end
 * (exclusive), by step, where start defaults to 0, step to 1,
 * and end to infinity.
 */
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
 * Returns a lazy seq of every nth item in coll.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__15625 = null;
var G__15625__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15625__1 = (function (result){
var G__15622 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15622) : rf.call(null,G__15622));
});
var G__15625__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__15623 = result;
var G__15624 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15623,G__15624) : rf.call(null,G__15623,G__15624));
} else {
return result;
}
});
G__15625 = function(result,input){
switch(arguments.length){
case 0:
return G__15625__0.call(this);
case 1:
return G__15625__1.call(this,result);
case 2:
return G__15625__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15625.cljs$core$IFn$_invoke$arity$0 = G__15625__0;
G__15625.cljs$core$IFn$_invoke$arity$1 = G__15625__1;
G__15625.cljs$core$IFn$_invoke$arity$2 = G__15625__2;
return G__15625;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
 * Returns a vector of [(take-while pred coll) (drop-while pred coll)]
 */
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
 * Applies f to each value in coll, splitting it each time f returns a
 * new value.  Returns a lazy seq of partitions.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__15647 = null;
var G__15647__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15647__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__15638 = result;
var G__15639 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15638,G__15639) : rf.call(null,G__15638,G__15639));
})());
})());
var G__15640 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15640) : rf.call(null,G__15640));
});
var G__15647__2 = (function (result,input){
var pval = (function (){var G__15641 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15641) : cljs.core.deref.call(null,G__15641));
})();
var val = (function (){var G__15642 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15642) : f.call(null,G__15642));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__15643 = result;
var G__15644 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15643,G__15644) : rf.call(null,G__15643,G__15644));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__15647 = function(result,input){
switch(arguments.length){
case 0:
return G__15647__0.call(this);
case 1:
return G__15647__1.call(this,result);
case 2:
return G__15647__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15647.cljs$core$IFn$_invoke$arity$0 = G__15647__0;
G__15647.cljs$core$IFn$_invoke$arity$1 = G__15647__1;
G__15647.cljs$core$IFn$_invoke$arity$2 = G__15647__2;
return G__15647;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__15645 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15645) : f.call(null,G__15645));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4406__auto__){
return (function (p1__15626_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__15646 = p1__15626_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15646) : f.call(null,G__15646));
})());
});})(fst,fv,s,temp__4406__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
 * Returns a map from distinct items in coll to the number of times
 * they appear.
 */
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
 * Returns a lazy seq of the intermediate values of the reduction (as
 * per reduce) of coll by f, starting with init.
 */
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4404__auto__ = cljs.core.seq(coll);
if(temp__4404__auto__){
var s = temp__4404__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__15656 = init;
var G__15657 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15656,G__15657) : f.call(null,G__15656,G__15657));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
 * Takes a set of functions and returns a fn that is the juxtaposition
 * of those fns.  The returned fn takes a variable number of args, and
 * returns a vector containing the result of applying each fn to the
 * args (left-to-right).
 * ((juxt a b c) x) => [(a x) (b x) (c x)]
 * @param {...*} var_args
 */
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__15752 = null;
var G__15752__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__15752__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15710 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15710) : f.call(null,G__15710));
})()],null));
});
var G__15752__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15711 = x;
var G__15712 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15711,G__15712) : f.call(null,G__15711,G__15712));
})()],null));
});
var G__15752__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15713 = x;
var G__15714 = y;
var G__15715 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15713,G__15714,G__15715) : f.call(null,G__15713,G__15714,G__15715));
})()],null));
});
var G__15752__4 = (function() { 
var G__15753__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__15753 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15754__i = 0, G__15754__a = new Array(arguments.length -  3);
while (G__15754__i < G__15754__a.length) {G__15754__a[G__15754__i] = arguments[G__15754__i + 3]; ++G__15754__i;}
  args = new cljs.core.IndexedSeq(G__15754__a,0);
} 
return G__15753__delegate.call(this,x,y,z,args);};
G__15753.cljs$lang$maxFixedArity = 3;
G__15753.cljs$lang$applyTo = (function (arglist__15755){
var x = cljs.core.first(arglist__15755);
arglist__15755 = cljs.core.next(arglist__15755);
var y = cljs.core.first(arglist__15755);
arglist__15755 = cljs.core.next(arglist__15755);
var z = cljs.core.first(arglist__15755);
var args = cljs.core.rest(arglist__15755);
return G__15753__delegate(x,y,z,args);
});
G__15753.cljs$core$IFn$_invoke$arity$variadic = G__15753__delegate;
return G__15753;
})()
;
G__15752 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15752__0.call(this);
case 1:
return G__15752__1.call(this,x);
case 2:
return G__15752__2.call(this,x,y);
case 3:
return G__15752__3.call(this,x,y,z);
default:
var G__15756 = null;
if (arguments.length > 3) {
var G__15757__i = 0, G__15757__a = new Array(arguments.length -  3);
while (G__15757__i < G__15757__a.length) {G__15757__a[G__15757__i] = arguments[G__15757__i + 3]; ++G__15757__i;}
G__15756 = new cljs.core.IndexedSeq(G__15757__a,0);
}
return G__15752__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15756);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15752.cljs$lang$maxFixedArity = 3;
G__15752.cljs$lang$applyTo = G__15752__4.cljs$lang$applyTo;
G__15752.cljs$core$IFn$_invoke$arity$0 = G__15752__0;
G__15752.cljs$core$IFn$_invoke$arity$1 = G__15752__1;
G__15752.cljs$core$IFn$_invoke$arity$2 = G__15752__2;
G__15752.cljs$core$IFn$_invoke$arity$3 = G__15752__3;
G__15752.cljs$core$IFn$_invoke$arity$variadic = G__15752__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15752;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__15758 = null;
var G__15758__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__15758__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15716 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15716) : f.call(null,G__15716));
})(),(function (){var G__15717 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15717) : g.call(null,G__15717));
})()],null));
});
var G__15758__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15718 = x;
var G__15719 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15718,G__15719) : f.call(null,G__15718,G__15719));
})(),(function (){var G__15720 = x;
var G__15721 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__15720,G__15721) : g.call(null,G__15720,G__15721));
})()],null));
});
var G__15758__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15722 = x;
var G__15723 = y;
var G__15724 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15722,G__15723,G__15724) : f.call(null,G__15722,G__15723,G__15724));
})(),(function (){var G__15725 = x;
var G__15726 = y;
var G__15727 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__15725,G__15726,G__15727) : g.call(null,G__15725,G__15726,G__15727));
})()],null));
});
var G__15758__4 = (function() { 
var G__15759__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__15759 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15760__i = 0, G__15760__a = new Array(arguments.length -  3);
while (G__15760__i < G__15760__a.length) {G__15760__a[G__15760__i] = arguments[G__15760__i + 3]; ++G__15760__i;}
  args = new cljs.core.IndexedSeq(G__15760__a,0);
} 
return G__15759__delegate.call(this,x,y,z,args);};
G__15759.cljs$lang$maxFixedArity = 3;
G__15759.cljs$lang$applyTo = (function (arglist__15761){
var x = cljs.core.first(arglist__15761);
arglist__15761 = cljs.core.next(arglist__15761);
var y = cljs.core.first(arglist__15761);
arglist__15761 = cljs.core.next(arglist__15761);
var z = cljs.core.first(arglist__15761);
var args = cljs.core.rest(arglist__15761);
return G__15759__delegate(x,y,z,args);
});
G__15759.cljs$core$IFn$_invoke$arity$variadic = G__15759__delegate;
return G__15759;
})()
;
G__15758 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15758__0.call(this);
case 1:
return G__15758__1.call(this,x);
case 2:
return G__15758__2.call(this,x,y);
case 3:
return G__15758__3.call(this,x,y,z);
default:
var G__15762 = null;
if (arguments.length > 3) {
var G__15763__i = 0, G__15763__a = new Array(arguments.length -  3);
while (G__15763__i < G__15763__a.length) {G__15763__a[G__15763__i] = arguments[G__15763__i + 3]; ++G__15763__i;}
G__15762 = new cljs.core.IndexedSeq(G__15763__a,0);
}
return G__15758__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15762);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15758.cljs$lang$maxFixedArity = 3;
G__15758.cljs$lang$applyTo = G__15758__4.cljs$lang$applyTo;
G__15758.cljs$core$IFn$_invoke$arity$0 = G__15758__0;
G__15758.cljs$core$IFn$_invoke$arity$1 = G__15758__1;
G__15758.cljs$core$IFn$_invoke$arity$2 = G__15758__2;
G__15758.cljs$core$IFn$_invoke$arity$3 = G__15758__3;
G__15758.cljs$core$IFn$_invoke$arity$variadic = G__15758__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15758;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__15764 = null;
var G__15764__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__15764__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15728 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15728) : f.call(null,G__15728));
})(),(function (){var G__15729 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15729) : g.call(null,G__15729));
})(),(function (){var G__15730 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__15730) : h.call(null,G__15730));
})()],null));
});
var G__15764__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15731 = x;
var G__15732 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15731,G__15732) : f.call(null,G__15731,G__15732));
})(),(function (){var G__15733 = x;
var G__15734 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__15733,G__15734) : g.call(null,G__15733,G__15734));
})(),(function (){var G__15735 = x;
var G__15736 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__15735,G__15736) : h.call(null,G__15735,G__15736));
})()],null));
});
var G__15764__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15737 = x;
var G__15738 = y;
var G__15739 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15737,G__15738,G__15739) : f.call(null,G__15737,G__15738,G__15739));
})(),(function (){var G__15740 = x;
var G__15741 = y;
var G__15742 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__15740,G__15741,G__15742) : g.call(null,G__15740,G__15741,G__15742));
})(),(function (){var G__15743 = x;
var G__15744 = y;
var G__15745 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__15743,G__15744,G__15745) : h.call(null,G__15743,G__15744,G__15745));
})()],null));
});
var G__15764__4 = (function() { 
var G__15765__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__15765 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15766__i = 0, G__15766__a = new Array(arguments.length -  3);
while (G__15766__i < G__15766__a.length) {G__15766__a[G__15766__i] = arguments[G__15766__i + 3]; ++G__15766__i;}
  args = new cljs.core.IndexedSeq(G__15766__a,0);
} 
return G__15765__delegate.call(this,x,y,z,args);};
G__15765.cljs$lang$maxFixedArity = 3;
G__15765.cljs$lang$applyTo = (function (arglist__15767){
var x = cljs.core.first(arglist__15767);
arglist__15767 = cljs.core.next(arglist__15767);
var y = cljs.core.first(arglist__15767);
arglist__15767 = cljs.core.next(arglist__15767);
var z = cljs.core.first(arglist__15767);
var args = cljs.core.rest(arglist__15767);
return G__15765__delegate(x,y,z,args);
});
G__15765.cljs$core$IFn$_invoke$arity$variadic = G__15765__delegate;
return G__15765;
})()
;
G__15764 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15764__0.call(this);
case 1:
return G__15764__1.call(this,x);
case 2:
return G__15764__2.call(this,x,y);
case 3:
return G__15764__3.call(this,x,y,z);
default:
var G__15768 = null;
if (arguments.length > 3) {
var G__15769__i = 0, G__15769__a = new Array(arguments.length -  3);
while (G__15769__i < G__15769__a.length) {G__15769__a[G__15769__i] = arguments[G__15769__i + 3]; ++G__15769__i;}
G__15768 = new cljs.core.IndexedSeq(G__15769__a,0);
}
return G__15764__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15768);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15764.cljs$lang$maxFixedArity = 3;
G__15764.cljs$lang$applyTo = G__15764__4.cljs$lang$applyTo;
G__15764.cljs$core$IFn$_invoke$arity$0 = G__15764__0;
G__15764.cljs$core$IFn$_invoke$arity$1 = G__15764__1;
G__15764.cljs$core$IFn$_invoke$arity$2 = G__15764__2;
G__15764.cljs$core$IFn$_invoke$arity$3 = G__15764__3;
G__15764.cljs$core$IFn$_invoke$arity$variadic = G__15764__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15764;
})()
});
var juxt__4 = (function() { 
var G__15770__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__15771 = null;
var G__15771__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__15658_SHARP_,p2__15659_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15658_SHARP_,(function (){return (p2__15659_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__15659_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__15659_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__15771__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__15660_SHARP_,p2__15661_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15660_SHARP_,(function (){var G__15746 = x;
return (p2__15661_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__15661_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15746) : p2__15661_SHARP_.call(null,G__15746));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__15771__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__15662_SHARP_,p2__15663_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15662_SHARP_,(function (){var G__15747 = x;
var G__15748 = y;
return (p2__15663_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__15663_SHARP_.cljs$core$IFn$_invoke$arity$2(G__15747,G__15748) : p2__15663_SHARP_.call(null,G__15747,G__15748));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__15771__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__15664_SHARP_,p2__15665_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15664_SHARP_,(function (){var G__15749 = x;
var G__15750 = y;
var G__15751 = z;
return (p2__15665_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__15665_SHARP_.cljs$core$IFn$_invoke$arity$3(G__15749,G__15750,G__15751) : p2__15665_SHARP_.call(null,G__15749,G__15750,G__15751));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__15771__4 = (function() { 
var G__15772__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__15666_SHARP_,p2__15667_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15666_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__15667_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__15772 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15773__i = 0, G__15773__a = new Array(arguments.length -  3);
while (G__15773__i < G__15773__a.length) {G__15773__a[G__15773__i] = arguments[G__15773__i + 3]; ++G__15773__i;}
  args = new cljs.core.IndexedSeq(G__15773__a,0);
} 
return G__15772__delegate.call(this,x,y,z,args);};
G__15772.cljs$lang$maxFixedArity = 3;
G__15772.cljs$lang$applyTo = (function (arglist__15774){
var x = cljs.core.first(arglist__15774);
arglist__15774 = cljs.core.next(arglist__15774);
var y = cljs.core.first(arglist__15774);
arglist__15774 = cljs.core.next(arglist__15774);
var z = cljs.core.first(arglist__15774);
var args = cljs.core.rest(arglist__15774);
return G__15772__delegate(x,y,z,args);
});
G__15772.cljs$core$IFn$_invoke$arity$variadic = G__15772__delegate;
return G__15772;
})()
;
G__15771 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15771__0.call(this);
case 1:
return G__15771__1.call(this,x);
case 2:
return G__15771__2.call(this,x,y);
case 3:
return G__15771__3.call(this,x,y,z);
default:
var G__15775 = null;
if (arguments.length > 3) {
var G__15776__i = 0, G__15776__a = new Array(arguments.length -  3);
while (G__15776__i < G__15776__a.length) {G__15776__a[G__15776__i] = arguments[G__15776__i + 3]; ++G__15776__i;}
G__15775 = new cljs.core.IndexedSeq(G__15776__a,0);
}
return G__15771__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15775);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15771.cljs$lang$maxFixedArity = 3;
G__15771.cljs$lang$applyTo = G__15771__4.cljs$lang$applyTo;
G__15771.cljs$core$IFn$_invoke$arity$0 = G__15771__0;
G__15771.cljs$core$IFn$_invoke$arity$1 = G__15771__1;
G__15771.cljs$core$IFn$_invoke$arity$2 = G__15771__2;
G__15771.cljs$core$IFn$_invoke$arity$3 = G__15771__3;
G__15771.cljs$core$IFn$_invoke$arity$variadic = G__15771__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15771;
})()
;})(fs__$1))
};
var G__15770 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__15777__i = 0, G__15777__a = new Array(arguments.length -  3);
while (G__15777__i < G__15777__a.length) {G__15777__a[G__15777__i] = arguments[G__15777__i + 3]; ++G__15777__i;}
  fs = new cljs.core.IndexedSeq(G__15777__a,0);
} 
return G__15770__delegate.call(this,f,g,h,fs);};
G__15770.cljs$lang$maxFixedArity = 3;
G__15770.cljs$lang$applyTo = (function (arglist__15778){
var f = cljs.core.first(arglist__15778);
arglist__15778 = cljs.core.next(arglist__15778);
var g = cljs.core.first(arglist__15778);
arglist__15778 = cljs.core.next(arglist__15778);
var h = cljs.core.first(arglist__15778);
var fs = cljs.core.rest(arglist__15778);
return G__15770__delegate(f,g,h,fs);
});
G__15770.cljs$core$IFn$_invoke$arity$variadic = G__15770__delegate;
return G__15770;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__15779 = null;
if (arguments.length > 3) {
var G__15780__i = 0, G__15780__a = new Array(arguments.length -  3);
while (G__15780__i < G__15780__a.length) {G__15780__a[G__15780__i] = arguments[G__15780__i + 3]; ++G__15780__i;}
G__15779 = new cljs.core.IndexedSeq(G__15780__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__15779);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
 * When lazy sequences are produced via functions that have side
 * effects, any effects other than those needed to produce the first
 * element in the seq do not occur until the seq is consumed. dorun can
 * be used to force any effects. Walks through the successive nexts of
 * the seq, does not retain the head and returns nil.
 */
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__15781 = cljs.core.next(coll);
coll = G__15781;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__15782 = (n - (1));
var G__15783 = cljs.core.next(coll);
n = G__15782;
coll = G__15783;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
 * When lazy sequences are produced via functions that have side
 * effects, any effects other than those needed to produce the first
 * element in the seq do not occur until the seq is consumed. doall can
 * be used to force any effects. Walks through the successive nexts of
 * the seq, retains the head and returns it, thus causing the entire
 * seq to reside in memory at one time.
 */
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
 * Returns the result of (re-find re s) if re fully matches s.
 */
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
 * Returns the first regex match, if any, of s to re, using
 * re.exec(s). Returns a vector, containing first the matching
 * substring, then any capturing groups if the regular expression contains
 * capturing groups.
 */
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
 * Returns a lazy sequence of successive matches of re in s.
 */
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
 * Returns an instance of RegExp which has compiled the provided string.
 */
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__15787 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15787,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15787,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15787,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_15795 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__5197__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__5197__auto__)){
return or__5197__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__15796_15802 = cljs.core.first(coll);
var G__15797_15803 = writer;
var G__15798_15804 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15796_15802,G__15797_15803,G__15798_15804) : print_one.call(null,G__15796_15802,G__15797_15803,G__15798_15804));
} else {
}

var coll_15805__$1 = cljs.core.next(coll);
var n_15806 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_15805__$1) && (((n_15806 == null)) || (!((n_15806 === (0)))))){
cljs.core._write(writer,sep);

var G__15799_15807 = cljs.core.first(coll_15805__$1);
var G__15800_15808 = writer;
var G__15801_15809 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15799_15807,G__15800_15808,G__15801_15809) : print_one.call(null,G__15799_15807,G__15800_15808,G__15801_15809));

var G__15810 = cljs.core.next(coll_15805__$1);
var G__15811 = (n_15806 - (1));
coll_15805__$1 = G__15810;
n_15806 = G__15811;
continue;
} else {
if((cljs.core.seq(coll_15805__$1)) && ((n_15806 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__5197__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__5197__auto__)){
return or__5197__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_15795;
}});
/**
 * @param {...*} var_args
 */
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__15816 = cljs.core.seq(ss);
var chunk__15817 = null;
var count__15818 = (0);
var i__15819 = (0);
while(true){
if((i__15819 < count__15818)){
var s = chunk__15817.cljs$core$IIndexed$_nth$arity$2(null,i__15819);
cljs.core._write(writer,s);

var G__15820 = seq__15816;
var G__15821 = chunk__15817;
var G__15822 = count__15818;
var G__15823 = (i__15819 + (1));
seq__15816 = G__15820;
chunk__15817 = G__15821;
count__15818 = G__15822;
i__15819 = G__15823;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__15816);
if(temp__4406__auto__){
var seq__15816__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15816__$1)){
var c__5984__auto__ = cljs.core.chunk_first(seq__15816__$1);
var G__15824 = cljs.core.chunk_rest(seq__15816__$1);
var G__15825 = c__5984__auto__;
var G__15826 = cljs.core.count(c__5984__auto__);
var G__15827 = (0);
seq__15816 = G__15824;
chunk__15817 = G__15825;
count__15818 = G__15826;
i__15819 = G__15827;
continue;
} else {
var s = cljs.core.first(seq__15816__$1);
cljs.core._write(writer,s);

var G__15828 = cljs.core.next(seq__15816__$1);
var G__15829 = null;
var G__15830 = (0);
var G__15831 = (0);
seq__15816 = G__15828;
chunk__15817 = G__15829;
count__15818 = G__15830;
i__15819 = G__15831;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__15832__i = 0, G__15832__a = new Array(arguments.length -  1);
while (G__15832__i < G__15832__a.length) {G__15832__a[G__15832__i] = arguments[G__15832__i + 1]; ++G__15832__i;}
  ss = new cljs.core.IndexedSeq(G__15832__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__15833){
var writer = cljs.core.first(arglist__15833);
var ss = cljs.core.rest(arglist__15833);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj15835 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj15835;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__15838 = "[\\\\\"\b\f\n\r\t]";
var G__15839 = "g";
return RegExp(G__15838,G__15839);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__5185__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__5185__auto__)){
var and__5185__auto____$1 = (function (){var G__15853 = obj;
if(G__15853){
var bit__5878__auto__ = (G__15853.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__5878__auto__) || (G__15853.cljs$core$IMeta$)){
return true;
} else {
if((!G__15853.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__15853);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__15853);
}
})();
if(and__5185__auto____$1){
return cljs.core.meta(obj);
} else {
return and__5185__auto____$1;
}
} else {
return and__5185__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__15854_15864 = cljs.core.meta(obj);
var G__15855_15865 = writer;
var G__15856_15866 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__15854_15864,G__15855_15865,G__15856_15866) : cljs.core.pr_writer.call(null,G__15854_15864,G__15855_15865,G__15856_15866));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__15857 = obj;
if(G__15857){
var bit__5871__auto__ = (G__15857.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__5871__auto__) || (G__15857.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__15858 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__15859 = cljs.core.pr_writer;
var G__15860 = writer;
var G__15861 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__15858,G__15859,G__15860,G__15861) : cljs.core.print_map.call(null,G__15858,G__15859,G__15860,G__15861));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__15862 = obj;
return goog.isString(G__15862);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__15867 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__15867;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__15863 = obj;
if(G__15863){
var bit__5878__auto__ = (G__15863.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__5878__auto__) || (G__15863.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__15863.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__15863);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__15863);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
 * Prefer this to pr-seq, because it makes the printing function
 * configurable, allowing efficient implementations such as appending
 * to a StringBuffer.
 */
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
var temp__4404__auto__ = new cljs.core.Keyword(null,"alt-impl","alt-impl",670969595).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4404__auto__)){
var alt_impl = temp__4404__auto__;
var G__15871 = obj;
var G__15872 = writer;
var G__15873 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,"fallback-impl","fallback-impl",-1501286995),cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__15871,G__15872,G__15873) : alt_impl.call(null,G__15871,G__15872,G__15873));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__15878 = cljs.core.seq(cljs.core.next(objs));
var chunk__15879 = null;
var count__15880 = (0);
var i__15881 = (0);
while(true){
if((i__15881 < count__15880)){
var obj = chunk__15879.cljs$core$IIndexed$_nth$arity$2(null,i__15881);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__15882 = seq__15878;
var G__15883 = chunk__15879;
var G__15884 = count__15880;
var G__15885 = (i__15881 + (1));
seq__15878 = G__15882;
chunk__15879 = G__15883;
count__15880 = G__15884;
i__15881 = G__15885;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__15878);
if(temp__4406__auto__){
var seq__15878__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15878__$1)){
var c__5984__auto__ = cljs.core.chunk_first(seq__15878__$1);
var G__15886 = cljs.core.chunk_rest(seq__15878__$1);
var G__15887 = c__5984__auto__;
var G__15888 = cljs.core.count(c__5984__auto__);
var G__15889 = (0);
seq__15878 = G__15886;
chunk__15879 = G__15887;
count__15880 = G__15888;
i__15881 = G__15889;
continue;
} else {
var obj = cljs.core.first(seq__15878__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__15890 = cljs.core.next(seq__15878__$1);
var G__15891 = null;
var G__15892 = (0);
var G__15893 = (0);
seq__15878 = G__15890;
chunk__15879 = G__15891;
count__15880 = G__15892;
i__15881 = G__15893;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
 * Prints a sequence of objects to a string, observing all the
 * options given in opts
 */
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
 * Same as pr-str-with-opts followed by (newline)
 */
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
 * Prints a sequence of objects using string-print, observing all
 * the options given in opts
 */
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
 * pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
 * @param {...*} var_args
 */
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15894__i = 0, G__15894__a = new Array(arguments.length -  0);
while (G__15894__i < G__15894__a.length) {G__15894__a[G__15894__i] = arguments[G__15894__i + 0]; ++G__15894__i;}
  objs = new cljs.core.IndexedSeq(G__15894__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__15895){
var objs = cljs.core.seq(arglist__15895);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
 * Same as pr-str followed by (newline)
 * @param {...*} var_args
 */
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15896__i = 0, G__15896__a = new Array(arguments.length -  0);
while (G__15896__i < G__15896__a.length) {G__15896__a[G__15896__i] = arguments[G__15896__i + 0]; ++G__15896__i;}
  objs = new cljs.core.IndexedSeq(G__15896__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__15897){
var objs = cljs.core.seq(arglist__15897);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
 * Prints the object(s) using string-print.  Prints the
 * object(s), separated by spaces if there is more than one.
 * By default, pr and prn print in a way that objects can be
 * read by the reader
 * @param {...*} var_args
 */
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15898__i = 0, G__15898__a = new Array(arguments.length -  0);
while (G__15898__i < G__15898__a.length) {G__15898__a[G__15898__i] = arguments[G__15898__i + 0]; ++G__15898__i;}
  objs = new cljs.core.IndexedSeq(G__15898__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__15899){
var objs = cljs.core.seq(arglist__15899);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
 * Prints the object(s) using string-print.
 * print and println produce output for human consumption.
 * @param {...*} var_args
 */
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15900__i = 0, G__15900__a = new Array(arguments.length -  0);
while (G__15900__i < G__15900__a.length) {G__15900__a[G__15900__i] = arguments[G__15900__i + 0]; ++G__15900__i;}
  objs = new cljs.core.IndexedSeq(G__15900__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__15901){
var objs = cljs.core.seq(arglist__15901);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
 * print to a string, returning it
 * @param {...*} var_args
 */
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15902__i = 0, G__15902__a = new Array(arguments.length -  0);
while (G__15902__i < G__15902__a.length) {G__15902__a[G__15902__i] = arguments[G__15902__i + 0]; ++G__15902__i;}
  objs = new cljs.core.IndexedSeq(G__15902__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__15903){
var objs = cljs.core.seq(arglist__15903);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
 * Same as print followed by (newline)
 * @param {...*} var_args
 */
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15904__i = 0, G__15904__a = new Array(arguments.length -  0);
while (G__15904__i < G__15904__a.length) {G__15904__a[G__15904__i] = arguments[G__15904__i + 0]; ++G__15904__i;}
  objs = new cljs.core.IndexedSeq(G__15904__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__15905){
var objs = cljs.core.seq(arglist__15905);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
 * println to a string, returning it
 * @param {...*} var_args
 */
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15906__i = 0, G__15906__a = new Array(arguments.length -  0);
while (G__15906__i < G__15906__a.length) {G__15906__a[G__15906__i] = arguments[G__15906__i + 0]; ++G__15906__i;}
  objs = new cljs.core.IndexedSeq(G__15906__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__15907){
var objs = cljs.core.seq(arglist__15907);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
 * Same as pr followed by (newline).
 * @param {...*} var_args
 */
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15908__i = 0, G__15908__a = new Array(arguments.length -  0);
while (G__15908__i < G__15908__a.length) {G__15908__a[G__15908__i] = arguments[G__15908__i + 0]; ++G__15908__i;}
  objs = new cljs.core.IndexedSeq(G__15908__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__15909){
var objs = cljs.core.seq(arglist__15909);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__15916_15922 = cljs.core.key(e);
var G__15917_15923 = w;
var G__15918_15924 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15916_15922,G__15917_15923,G__15918_15924) : print_one.call(null,G__15916_15922,G__15917_15923,G__15918_15924));

cljs.core._write(w," ");

var G__15919 = cljs.core.val(e);
var G__15920 = w;
var G__15921 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15919,G__15920,G__15921) : print_one.call(null,G__15919,G__15920,G__15921));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
 * Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
 * 
 * (apply f its-current-meta args)
 * 
 * f must be free of side-effects
 * @param {...*} var_args
 */
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__15925__i = 0, G__15925__a = new Array(arguments.length -  2);
while (G__15925__i < G__15925__a.length) {G__15925__a[G__15925__i] = arguments[G__15925__i + 2]; ++G__15925__i;}
  args = new cljs.core.IndexedSeq(G__15925__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__15926){
var iref = cljs.core.first(arglist__15926);
arglist__15926 = cljs.core.next(arglist__15926);
var f = cljs.core.first(arglist__15926);
var args = cljs.core.rest(arglist__15926);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
 * Atomically resets the metadata for an atom
 */
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
 * Alpha - subject to change.
 * 
 * Adds a watch function to an atom reference. The watch fn must be a
 * fn of 4 args: a key, the reference, its old-state, its
 * new-state. Whenever the reference's state might have been changed,
 * any registered watches will have their functions called. The watch
 * fn will be called synchronously. Note that an atom's state
 * may have changed again prior to the fn call, so use old/new-state
 * rather than derefing the reference. Keys must be unique per
 * reference, and can be used to remove the watch with remove-watch,
 * but are otherwise considered opaque by the watch mechanism.  Bear in
 * mind that regardless of the result or action of the watch fns the
 * atom's value will change.  Example:
 * 
 * (def a (atom 0))
 * (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
 * (swap! a inc)
 * ;; Assertion Error
 * (deref a)
 * ;=> 1
 */
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
 * Alpha - subject to change.
 * 
 * Removes a watch (set by add-watch) from a reference
 */
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
 * Returns a new symbol with a unique name. If a prefix string is
 * supplied, the name is prefix# where # is some unique number. If
 * prefix is not supplied, the prefix is 'G__'.
 */
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__15929 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__15929) : cljs.core.atom.call(null,G__15929));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
 * returns true if x is a Delay created with delay
 */
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
 * If x is a Delay, returns the (possibly cached) value of its expression, else returns x
 */
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__15931 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15931) : cljs.core.deref.call(null,G__15931));
} else {
return x;
}
});
/**
 * Returns true if a value has been produced for a promise, delay, future or lazy sequence.
 */
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__15932_SHARP_,p2__15933_SHARP_){
var ret = (function (){var G__15936 = p1__15932_SHARP_;
var G__15937 = p2__15933_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15936,G__15937) : rf.call(null,G__15936,G__15937));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
 * A transducer which concatenates the contents of each input, which must be a
 * collection, into the reduction.
 */
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__15940 = null;
var G__15940__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15940__1 = (function (result){
var G__15939 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15939) : rf.call(null,G__15939));
});
var G__15940__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__15940 = function(result,input){
switch(arguments.length){
case 0:
return G__15940__0.call(this);
case 1:
return G__15940__1.call(this,result);
case 2:
return G__15940__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15940.cljs$core$IFn$_invoke$arity$0 = G__15940__0;
G__15940.cljs$core$IFn$_invoke$arity$1 = G__15940__1;
G__15940.cljs$core$IFn$_invoke$arity$2 = G__15940__2;
return G__15940;
})()
;})(rf1))
});
/**
 * Returns a lazy sequence removing consecutive duplicates in coll.
 * Returns a transducer when no collection is provided.
 */
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__15949 = null;
var G__15949__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15949__1 = (function (result){
var G__15945 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15945) : rf.call(null,G__15945));
});
var G__15949__2 = (function (result,input){
var prior = (function (){var G__15946 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15946) : cljs.core.deref.call(null,G__15946));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__15947 = result;
var G__15948 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15947,G__15948) : rf.call(null,G__15947,G__15948));
}
});
G__15949 = function(result,input){
switch(arguments.length){
case 0:
return G__15949__0.call(this);
case 1:
return G__15949__1.call(this,result);
case 2:
return G__15949__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15949.cljs$core$IFn$_invoke$arity$0 = G__15949__0;
G__15949.cljs$core$IFn$_invoke$arity$1 = G__15949__1;
G__15949.cljs$core$IFn$_invoke$arity$2 = G__15949__2;
return G__15949;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
 * Returns items from coll with random probability of prob (0.0 -
 * 1.0).  Returns a transducer when no collection is provided.
 */
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6175__auto__ = this;
return cljs.core.es6_iterator(this__6175__auto__);
}));
/**
 * Returns a reducible/iterable/seqable application of
 * the transducer to the items in coll. Note that these applications
 * will be performed every time iterator/seq/reduce is called.
 */
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
 * Runs the supplied procedure (via reduce), for purposes of side
 * effects, on successive items in the collection. Returns nil
 */
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__15951_SHARP_,p2__15950_SHARP_){
var G__15953 = p2__15950_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__15953) : proc.call(null,G__15953));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj15955 = {};
return obj15955;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__5185__auto__ = x;
if(and__5185__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__5185__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__5841__auto__ = (((x == null))?null:x);
return (function (){var or__5197__auto__ = (cljs.core._clj__GT_js[(function (){var G__15959 = x__5841__auto__;
return goog.typeOf(G__15959);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__5185__auto__ = x;
if(and__5185__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__5185__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__5841__auto__ = (((x == null))?null:x);
return (function (){var or__5197__auto__ = (cljs.core._key__GT_js[(function (){var G__15963 = x__5841__auto__;
return goog.typeOf(G__15963);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__15966 = k;
if(G__15966){
var bit__5878__auto__ = null;
if(cljs.core.truth_((function (){var or__5197__auto__ = bit__5878__auto__;
if(cljs.core.truth_(or__5197__auto__)){
return or__5197__auto__;
} else {
return G__15966.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__15966.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__15966);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__15966);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__15967 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__15967) : cljs.core.clj__GT_js.call(null,G__15967));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
 * Recursively transforms ClojureScript values to JavaScript.
 * sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
 * Maps become Objects. Arbitrary keys are encoded to by key->js.
 */
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__15983 = x;
if(G__15983){
var bit__5878__auto__ = null;
if(cljs.core.truth_((function (){var or__5197__auto__ = bit__5878__auto__;
if(cljs.core.truth_(or__5197__auto__)){
return or__5197__auto__;
} else {
return G__15983.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__15983.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__15983);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__15983);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj15985 = {};
return obj15985;
})();
var seq__15986_15996 = cljs.core.seq(x);
var chunk__15987_15997 = null;
var count__15988_15998 = (0);
var i__15989_15999 = (0);
while(true){
if((i__15989_15999 < count__15988_15998)){
var vec__15990_16000 = chunk__15987_15997.cljs$core$IIndexed$_nth$arity$2(null,i__15989_15999);
var k_16001 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15990_16000,(0),null);
var v_16002 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15990_16000,(1),null);
(m[cljs.core.key__GT_js(k_16001)] = clj__GT_js(v_16002));

var G__16003 = seq__15986_15996;
var G__16004 = chunk__15987_15997;
var G__16005 = count__15988_15998;
var G__16006 = (i__15989_15999 + (1));
seq__15986_15996 = G__16003;
chunk__15987_15997 = G__16004;
count__15988_15998 = G__16005;
i__15989_15999 = G__16006;
continue;
} else {
var temp__4406__auto___16007 = cljs.core.seq(seq__15986_15996);
if(temp__4406__auto___16007){
var seq__15986_16008__$1 = temp__4406__auto___16007;
if(cljs.core.chunked_seq_QMARK_(seq__15986_16008__$1)){
var c__5984__auto___16009 = cljs.core.chunk_first(seq__15986_16008__$1);
var G__16010 = cljs.core.chunk_rest(seq__15986_16008__$1);
var G__16011 = c__5984__auto___16009;
var G__16012 = cljs.core.count(c__5984__auto___16009);
var G__16013 = (0);
seq__15986_15996 = G__16010;
chunk__15987_15997 = G__16011;
count__15988_15998 = G__16012;
i__15989_15999 = G__16013;
continue;
} else {
var vec__15991_16014 = cljs.core.first(seq__15986_16008__$1);
var k_16015 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15991_16014,(0),null);
var v_16016 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15991_16014,(1),null);
(m[cljs.core.key__GT_js(k_16015)] = clj__GT_js(v_16016));

var G__16017 = cljs.core.next(seq__15986_16008__$1);
var G__16018 = null;
var G__16019 = (0);
var G__16020 = (0);
seq__15986_15996 = G__16017;
chunk__15987_15997 = G__16018;
count__15988_15998 = G__16019;
i__15989_15999 = G__16020;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__15992_16021 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__15993_16022 = null;
var count__15994_16023 = (0);
var i__15995_16024 = (0);
while(true){
if((i__15995_16024 < count__15994_16023)){
var x_16025__$1 = chunk__15993_16022.cljs$core$IIndexed$_nth$arity$2(null,i__15995_16024);
arr.push(x_16025__$1);

var G__16026 = seq__15992_16021;
var G__16027 = chunk__15993_16022;
var G__16028 = count__15994_16023;
var G__16029 = (i__15995_16024 + (1));
seq__15992_16021 = G__16026;
chunk__15993_16022 = G__16027;
count__15994_16023 = G__16028;
i__15995_16024 = G__16029;
continue;
} else {
var temp__4406__auto___16030 = cljs.core.seq(seq__15992_16021);
if(temp__4406__auto___16030){
var seq__15992_16031__$1 = temp__4406__auto___16030;
if(cljs.core.chunked_seq_QMARK_(seq__15992_16031__$1)){
var c__5984__auto___16032 = cljs.core.chunk_first(seq__15992_16031__$1);
var G__16033 = cljs.core.chunk_rest(seq__15992_16031__$1);
var G__16034 = c__5984__auto___16032;
var G__16035 = cljs.core.count(c__5984__auto___16032);
var G__16036 = (0);
seq__15992_16021 = G__16033;
chunk__15993_16022 = G__16034;
count__15994_16023 = G__16035;
i__15995_16024 = G__16036;
continue;
} else {
var x_16037__$1 = cljs.core.first(seq__15992_16031__$1);
arr.push(x_16037__$1);

var G__16038 = cljs.core.next(seq__15992_16031__$1);
var G__16039 = null;
var G__16040 = (0);
var G__16041 = (0);
seq__15992_16021 = G__16038;
chunk__15993_16022 = G__16039;
count__15994_16023 = G__16040;
i__15995_16024 = G__16041;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj16043 = {};
return obj16043;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__5185__auto__ = x;
if(and__5185__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__5185__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__5841__auto__ = (((x == null))?null:x);
return (function (){var or__5197__auto__ = (cljs.core._js__GT_clj[(function (){var G__16047 = x__5841__auto__;
return goog.typeOf(G__16047);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
 * Recursively transforms JavaScript arrays into ClojureScript
 * vectors, and JavaScript objects into ClojureScript maps.  With
 * option ':keywordize-keys true' will convert object fields from
 * strings to keywords.
 * @param {...*} var_args
 */
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__16104__delegate = function (x,opts){
var map__16077 = opts;
var map__16077__$1 = ((cljs.core.seq_QMARK_(map__16077))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__16077):map__16077);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__16077__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__16077,map__16077__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__16093 = x__$1;
if(G__16093){
var bit__5878__auto__ = null;
if(cljs.core.truth_((function (){var or__5197__auto__ = bit__5878__auto__;
if(cljs.core.truth_(or__5197__auto__)){
return or__5197__auto__;
} else {
return G__16093.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__16093.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__16093);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__16093);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__5953__auto__ = ((function (map__16077,map__16077__$1,keywordize_keys,keyfn){
return (function iter__16094(s__16095){
return (new cljs.core.LazySeq(null,((function (map__16077,map__16077__$1,keywordize_keys,keyfn){
return (function (){
var s__16095__$1 = s__16095;
while(true){
var temp__4406__auto__ = cljs.core.seq(s__16095__$1);
if(temp__4406__auto__){
var s__16095__$2 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s__16095__$2)){
var c__5951__auto__ = cljs.core.chunk_first(s__16095__$2);
var size__5952__auto__ = cljs.core.count(c__5951__auto__);
var b__16097 = cljs.core.chunk_buffer(size__5952__auto__);
if((function (){var i__16096 = (0);
while(true){
if((i__16096 < size__5952__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__5951__auto__,i__16096);
cljs.core.chunk_append(b__16097,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__16102 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__16102) : keyfn.call(null,G__16102));
})(),thisfn((x__$1[k]))], null));

var G__16105 = (i__16096 + (1));
i__16096 = G__16105;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__16097),iter__16094(cljs.core.chunk_rest(s__16095__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__16097),null);
}
} else {
var k = cljs.core.first(s__16095__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__16103 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__16103) : keyfn.call(null,G__16103));
})(),thisfn((x__$1[k]))], null),iter__16094(cljs.core.rest(s__16095__$2)));
}
} else {
return null;
}
break;
}
});})(map__16077,map__16077__$1,keywordize_keys,keyfn))
,null,null));
});})(map__16077,map__16077__$1,keywordize_keys,keyfn))
;
return iter__5953__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__16077,map__16077__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__16104 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__16106__i = 0, G__16106__a = new Array(arguments.length -  1);
while (G__16106__i < G__16106__a.length) {G__16106__a[G__16106__i] = arguments[G__16106__i + 1]; ++G__16106__i;}
  opts = new cljs.core.IndexedSeq(G__16106__a,0);
} 
return G__16104__delegate.call(this,x,opts);};
G__16104.cljs$lang$maxFixedArity = 1;
G__16104.cljs$lang$applyTo = (function (arglist__16107){
var x = cljs.core.first(arglist__16107);
var opts = cljs.core.rest(arglist__16107);
return G__16104__delegate(x,opts);
});
G__16104.cljs$core$IFn$_invoke$arity$variadic = G__16104__delegate;
return G__16104;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__16108 = null;
if (arguments.length > 1) {
var G__16109__i = 0, G__16109__a = new Array(arguments.length -  1);
while (G__16109__i < G__16109__a.length) {G__16109__a[G__16109__i] = arguments[G__16109__i + 1]; ++G__16109__i;}
G__16108 = new cljs.core.IndexedSeq(G__16109__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__16108);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
 * Returns a memoized version of a referentially transparent function. The
 * memoized version of the function keeps a cache of the mapping from arguments
 * to results and, when calls with the same arguments are repeated often, has
 * higher performance at the expense of higher memory use.
 */
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__16112 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__16112) : cljs.core.atom.call(null,G__16112));
})();
return ((function (mem){
return (function() { 
var G__16114__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__16113 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16113) : cljs.core.deref.call(null,G__16113));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__16114 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__16115__i = 0, G__16115__a = new Array(arguments.length -  0);
while (G__16115__i < G__16115__a.length) {G__16115__a[G__16115__i] = arguments[G__16115__i + 0]; ++G__16115__i;}
  args = new cljs.core.IndexedSeq(G__16115__a,0);
} 
return G__16114__delegate.call(this,args);};
G__16114.cljs$lang$maxFixedArity = 0;
G__16114.cljs$lang$applyTo = (function (arglist__16116){
var args = cljs.core.seq(arglist__16116);
return G__16114__delegate(args);
});
G__16114.cljs$core$IFn$_invoke$arity$variadic = G__16114__delegate;
return G__16114;
})()
;
;})(mem))
});
/**
 * trampoline can be used to convert algorithms requiring mutual
 * recursion without stack consumption. Calls f with supplied args, if
 * any. If f returns a fn, calls that fn with no arguments, and
 * continues to repeat, until the return value is not a fn, then
 * returns that non-fn value. Note that if you want to return a fn as a
 * final value, you must wrap it in some data structure and unpack it
 * after trampoline returns.
 * @param {...*} var_args
 */
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__16118 = ret;
f = G__16118;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__16119__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__16119 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__16120__i = 0, G__16120__a = new Array(arguments.length -  1);
while (G__16120__i < G__16120__a.length) {G__16120__a[G__16120__i] = arguments[G__16120__i + 1]; ++G__16120__i;}
  args = new cljs.core.IndexedSeq(G__16120__a,0);
} 
return G__16119__delegate.call(this,f,args);};
G__16119.cljs$lang$maxFixedArity = 1;
G__16119.cljs$lang$applyTo = (function (arglist__16121){
var f = cljs.core.first(arglist__16121);
var args = cljs.core.rest(arglist__16121);
return G__16119__delegate(f,args);
});
G__16119.cljs$core$IFn$_invoke$arity$variadic = G__16119__delegate;
return G__16119;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__16122 = null;
if (arguments.length > 1) {
var G__16123__i = 0, G__16123__a = new Array(arguments.length -  1);
while (G__16123__i < G__16123__a.length) {G__16123__a[G__16123__i] = arguments[G__16123__i + 1]; ++G__16123__i;}
G__16122 = new cljs.core.IndexedSeq(G__16123__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__16122);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
 * Returns a random floating point number between 0 (inclusive) and
 * n (default 1) (exclusive).
 */
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
 * Returns a random integer between 0 (inclusive) and n (exclusive).
 */
cljs.core.rand_int = (function rand_int(n){
var G__16126 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__16126) : Math.floor.call(null,G__16126));
});
/**
 * Return a random element of the (sequential) collection. Will have
 * the same performance characteristics as nth for the given
 * collection.
 */
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
 * Returns a map of the elements of coll keyed by the result of
 * f on each element. The value at each key will be a vector of the
 * corresponding elements, in the order they appeared in coll.
 */
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__16128 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16128) : f.call(null,G__16128));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
 * Creates a hierarchy object for use with derive, isa? etc.
 */
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__16130 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__16130) : cljs.core.atom.call(null,G__16130));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
 * @param {...*} var_args
 */
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__16131__i = 0, G__16131__a = new Array(arguments.length -  1);
while (G__16131__i < G__16131__a.length) {G__16131__a[G__16131__i] = arguments[G__16131__i + 1]; ++G__16131__i;}
  args = new cljs.core.IndexedSeq(G__16131__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__16132){
var f = cljs.core.first(arglist__16132);
var args = cljs.core.rest(arglist__16132);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
 * Returns true if (= child parent), or child is directly or indirectly derived from
 * parent, either via a JavaScript type inheritance relationship or a
 * relationship established via derive. h must be a hierarchy obtained
 * from make-hierarchy, if not supplied defaults to the global
 * hierarchy
 */
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__16197 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16197) : cljs.core.deref.call(null,G__16197));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__5197__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
var and__5185__auto__ = cljs.core.vector_QMARK_(parent);
if(and__5185__auto__){
var and__5185__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__5185__auto____$1){
var and__5185__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__5185__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__16222 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__16220 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__16220) : child.call(null,G__16220));
})(),(function (){var G__16221 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__16221) : parent.call(null,G__16221));
})());
var G__16223 = (i + (1));
ret = G__16222;
i = G__16223;
continue;
}
break;
}
} else {
return and__5185__auto____$2;
}
} else {
return and__5185__auto____$1;
}
} else {
return and__5185__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
 * Returns the immediate parents of tag, either via a JavaScript type
 * inheritance relationship or a relationship established via derive. h
 * must be a hierarchy obtained from make-hierarchy, if not supplied
 * defaults to the global hierarchy
 */
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__16227 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16227) : cljs.core.deref.call(null,G__16227));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
 * Returns the immediate and indirect parents of tag, either via a JavaScript type
 * inheritance relationship or a relationship established via derive. h
 * must be a hierarchy obtained from make-hierarchy, if not supplied
 * defaults to the global hierarchy
 */
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__16231 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16231) : cljs.core.deref.call(null,G__16231));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
 * Returns the immediate and indirect children of tag, through a
 * relationship established via derive. h must be a hierarchy obtained
 * from make-hierarchy, if not supplied defaults to the global
 * hierarchy. Note: does not work on JavaScript type inheritance
 * relationships.
 */
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__16235 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16235) : cljs.core.deref.call(null,G__16235));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
 * Establishes a parent/child relationship between parent and
 * tag. Parent must be a namespace-qualified symbol or keyword and
 * child can be either a namespace-qualified symbol or keyword or a
 * class. h must be a hierarchy obtained from make-hierarchy, if not
 * supplied defaults to, and modifies, the global hierarchy.
 */
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__16244 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__16244) : targets.call(null,G__16244));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__16245 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__16245) : sources.call(null,G__16245));
})()));
});})(tp,td,ta))
;
var or__5197__auto__ = ((cljs.core.contains_QMARK_((function (){var G__16249 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__16249) : tp.call(null,G__16249));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__16250 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__16250) : ta.call(null,G__16250));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__16251 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__16251) : ta.call(null,G__16251));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__5197__auto__)){
return or__5197__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
 * Removes a parent/child relationship between parent and
 * tag. h must be a hierarchy obtained from make-hierarchy, if not
 * supplied defaults to, and modifies, the global hierarchy.
 */
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__16258 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__16258) : parentMap.call(null,G__16258));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__16259 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__16259) : parentMap.call(null,G__16259));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__16252_SHARP_){
return cljs.core.cons(cljs.core.first(p1__16252_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__16252_SHARP_),cljs.core.second(p1__16252_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__16260 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__16260) : parentMap.call(null,G__16260));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__16253_SHARP_,p2__16254_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__16253_SHARP_,p2__16254_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__16263 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16263) : cljs.core.deref.call(null,G__16263));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__16264 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16264) : cljs.core.deref.call(null,G__16264));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__16280 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16280) : cljs.core.deref.call(null,G__16280));
})().call(null,x);
var or__5197__auto__ = (cljs.core.truth_((function (){var and__5185__auto__ = xprefs;
if(cljs.core.truth_(and__5185__auto__)){
var G__16282 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__16282) : xprefs.call(null,G__16282));
} else {
return and__5185__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__5197__auto__)){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__16283 = cljs.core.rest(ps);
ps = G__16283;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__5197__auto____$1)){
return or__5197__auto____$1;
} else {
var or__5197__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__16284 = cljs.core.rest(ps);
ps = G__16284;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__5197__auto____$2)){
return or__5197__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__5197__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__5197__auto__)){
return or__5197__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__16298){
var vec__16299 = p__16298;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16299,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16299,(1),null);
var e = vec__16299;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__16300 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16300) : cljs.core.deref.call(null,G__16300));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__5197__auto__ = (be == null);
if(or__5197__auto__){
return or__5197__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__16301 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16301) : cljs.core.deref.call(null,G__16301));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__16302 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16302) : cljs.core.deref.call(null,G__16302));
})(),(function (){var G__16303 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16303) : cljs.core.deref.call(null,G__16303));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj16305 = {};
return obj16305;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__5185__auto__ = mf;
if(and__5185__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__5185__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__5841__auto__ = (((mf == null))?null:mf);
return (function (){var or__5197__auto__ = (cljs.core._reset[(function (){var G__16309 = x__5841__auto__;
return goog.typeOf(G__16309);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._reset["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__5185__auto__ = mf;
if(and__5185__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__5185__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__5841__auto__ = (((mf == null))?null:mf);
return (function (){var or__5197__auto__ = (cljs.core._add_method[(function (){var G__16313 = x__5841__auto__;
return goog.typeOf(G__16313);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._add_method["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__5185__auto__ = mf;
if(and__5185__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__5185__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__5841__auto__ = (((mf == null))?null:mf);
return (function (){var or__5197__auto__ = (cljs.core._remove_method[(function (){var G__16317 = x__5841__auto__;
return goog.typeOf(G__16317);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._remove_method["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__5185__auto__ = mf;
if(and__5185__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__5185__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__5841__auto__ = (((mf == null))?null:mf);
return (function (){var or__5197__auto__ = (cljs.core._prefer_method[(function (){var G__16321 = x__5841__auto__;
return goog.typeOf(G__16321);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__5185__auto__ = mf;
if(and__5185__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__5185__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__5841__auto__ = (((mf == null))?null:mf);
return (function (){var or__5197__auto__ = (cljs.core._get_method[(function (){var G__16325 = x__5841__auto__;
return goog.typeOf(G__16325);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._get_method["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__5185__auto__ = mf;
if(and__5185__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__5185__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__5841__auto__ = (((mf == null))?null:mf);
return (function (){var or__5197__auto__ = (cljs.core._methods[(function (){var G__16329 = x__5841__auto__;
return goog.typeOf(G__16329);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._methods["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__5185__auto__ = mf;
if(and__5185__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__5185__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__5841__auto__ = (((mf == null))?null:mf);
return (function (){var or__5197__auto__ = (cljs.core._prefers[(function (){var G__16333 = x__5841__auto__;
return goog.typeOf(G__16333);
})()]);
if(or__5197__auto__){
return or__5197__auto__;
} else {
var or__5197__auto____$1 = (cljs.core._prefers["_"]);
if(or__5197__auto____$1){
return or__5197__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__16335 = this$__$1;
return goog.getUid(G__16335);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__16336 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16336) : cljs.core.deref.call(null,G__16336));
})(),(function (){var G__16337 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16337) : cljs.core.deref.call(null,G__16337));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4404__auto__ = (function (){var G__16338 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16338) : cljs.core.deref.call(null,G__16338));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4404__auto__)){
var target_fn = temp__4404__auto__;
return target_fn;
} else {
var temp__4404__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4404__auto____$1)){
var target_fn = temp__4404__auto____$1;
return target_fn;
} else {
return (function (){var G__16339 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16339) : cljs.core.deref.call(null,G__16339));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__16340 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16340) : cljs.core.deref.call(null,G__16340));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__16341 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16341) : cljs.core.deref.call(null,G__16341));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__17182 = null;
var G__17182__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__17182__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16342 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__16342) : self__.dispatch_fn.call(null,G__16342));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16343 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__16343) : target_fn.call(null,G__16343));
});
var G__17182__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16344 = a;
var G__16345 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__16344,G__16345) : self__.dispatch_fn.call(null,G__16344,G__16345));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16346 = a;
var G__16347 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__16346,G__16347) : target_fn.call(null,G__16346,G__16347));
});
var G__17182__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16348 = a;
var G__16349 = b;
var G__16350 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__16348,G__16349,G__16350) : self__.dispatch_fn.call(null,G__16348,G__16349,G__16350));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16351 = a;
var G__16352 = b;
var G__16353 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__16351,G__16352,G__16353) : target_fn.call(null,G__16351,G__16352,G__16353));
});
var G__17182__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16354 = a;
var G__16355 = b;
var G__16356 = c;
var G__16357 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__16354,G__16355,G__16356,G__16357) : self__.dispatch_fn.call(null,G__16354,G__16355,G__16356,G__16357));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16358 = a;
var G__16359 = b;
var G__16360 = c;
var G__16361 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__16358,G__16359,G__16360,G__16361) : target_fn.call(null,G__16358,G__16359,G__16360,G__16361));
});
var G__17182__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16362 = a;
var G__16363 = b;
var G__16364 = c;
var G__16365 = d;
var G__16366 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__16362,G__16363,G__16364,G__16365,G__16366) : self__.dispatch_fn.call(null,G__16362,G__16363,G__16364,G__16365,G__16366));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16367 = a;
var G__16368 = b;
var G__16369 = c;
var G__16370 = d;
var G__16371 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__16367,G__16368,G__16369,G__16370,G__16371) : target_fn.call(null,G__16367,G__16368,G__16369,G__16370,G__16371));
});
var G__17182__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16372 = a;
var G__16373 = b;
var G__16374 = c;
var G__16375 = d;
var G__16376 = e;
var G__16377 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__16372,G__16373,G__16374,G__16375,G__16376,G__16377) : self__.dispatch_fn.call(null,G__16372,G__16373,G__16374,G__16375,G__16376,G__16377));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16378 = a;
var G__16379 = b;
var G__16380 = c;
var G__16381 = d;
var G__16382 = e;
var G__16383 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__16378,G__16379,G__16380,G__16381,G__16382,G__16383) : target_fn.call(null,G__16378,G__16379,G__16380,G__16381,G__16382,G__16383));
});
var G__17182__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16384 = a;
var G__16385 = b;
var G__16386 = c;
var G__16387 = d;
var G__16388 = e;
var G__16389 = f;
var G__16390 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__16384,G__16385,G__16386,G__16387,G__16388,G__16389,G__16390) : self__.dispatch_fn.call(null,G__16384,G__16385,G__16386,G__16387,G__16388,G__16389,G__16390));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16391 = a;
var G__16392 = b;
var G__16393 = c;
var G__16394 = d;
var G__16395 = e;
var G__16396 = f;
var G__16397 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__16391,G__16392,G__16393,G__16394,G__16395,G__16396,G__16397) : target_fn.call(null,G__16391,G__16392,G__16393,G__16394,G__16395,G__16396,G__16397));
});
var G__17182__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16398 = a;
var G__16399 = b;
var G__16400 = c;
var G__16401 = d;
var G__16402 = e;
var G__16403 = f;
var G__16404 = g;
var G__16405 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__16398,G__16399,G__16400,G__16401,G__16402,G__16403,G__16404,G__16405) : self__.dispatch_fn.call(null,G__16398,G__16399,G__16400,G__16401,G__16402,G__16403,G__16404,G__16405));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16406 = a;
var G__16407 = b;
var G__16408 = c;
var G__16409 = d;
var G__16410 = e;
var G__16411 = f;
var G__16412 = g;
var G__16413 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__16406,G__16407,G__16408,G__16409,G__16410,G__16411,G__16412,G__16413) : target_fn.call(null,G__16406,G__16407,G__16408,G__16409,G__16410,G__16411,G__16412,G__16413));
});
var G__17182__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16414 = a;
var G__16415 = b;
var G__16416 = c;
var G__16417 = d;
var G__16418 = e;
var G__16419 = f;
var G__16420 = g;
var G__16421 = h;
var G__16422 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__16414,G__16415,G__16416,G__16417,G__16418,G__16419,G__16420,G__16421,G__16422) : self__.dispatch_fn.call(null,G__16414,G__16415,G__16416,G__16417,G__16418,G__16419,G__16420,G__16421,G__16422));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16423 = a;
var G__16424 = b;
var G__16425 = c;
var G__16426 = d;
var G__16427 = e;
var G__16428 = f;
var G__16429 = g;
var G__16430 = h;
var G__16431 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__16423,G__16424,G__16425,G__16426,G__16427,G__16428,G__16429,G__16430,G__16431) : target_fn.call(null,G__16423,G__16424,G__16425,G__16426,G__16427,G__16428,G__16429,G__16430,G__16431));
});
var G__17182__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16432 = a;
var G__16433 = b;
var G__16434 = c;
var G__16435 = d;
var G__16436 = e;
var G__16437 = f;
var G__16438 = g;
var G__16439 = h;
var G__16440 = i;
var G__16441 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__16432,G__16433,G__16434,G__16435,G__16436,G__16437,G__16438,G__16439,G__16440,G__16441) : self__.dispatch_fn.call(null,G__16432,G__16433,G__16434,G__16435,G__16436,G__16437,G__16438,G__16439,G__16440,G__16441));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16442 = a;
var G__16443 = b;
var G__16444 = c;
var G__16445 = d;
var G__16446 = e;
var G__16447 = f;
var G__16448 = g;
var G__16449 = h;
var G__16450 = i;
var G__16451 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__16442,G__16443,G__16444,G__16445,G__16446,G__16447,G__16448,G__16449,G__16450,G__16451) : target_fn.call(null,G__16442,G__16443,G__16444,G__16445,G__16446,G__16447,G__16448,G__16449,G__16450,G__16451));
});
var G__17182__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16452 = a;
var G__16453 = b;
var G__16454 = c;
var G__16455 = d;
var G__16456 = e;
var G__16457 = f;
var G__16458 = g;
var G__16459 = h;
var G__16460 = i;
var G__16461 = j;
var G__16462 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__16452,G__16453,G__16454,G__16455,G__16456,G__16457,G__16458,G__16459,G__16460,G__16461,G__16462) : self__.dispatch_fn.call(null,G__16452,G__16453,G__16454,G__16455,G__16456,G__16457,G__16458,G__16459,G__16460,G__16461,G__16462));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16463 = a;
var G__16464 = b;
var G__16465 = c;
var G__16466 = d;
var G__16467 = e;
var G__16468 = f;
var G__16469 = g;
var G__16470 = h;
var G__16471 = i;
var G__16472 = j;
var G__16473 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__16463,G__16464,G__16465,G__16466,G__16467,G__16468,G__16469,G__16470,G__16471,G__16472,G__16473) : target_fn.call(null,G__16463,G__16464,G__16465,G__16466,G__16467,G__16468,G__16469,G__16470,G__16471,G__16472,G__16473));
});
var G__17182__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16474 = a;
var G__16475 = b;
var G__16476 = c;
var G__16477 = d;
var G__16478 = e;
var G__16479 = f;
var G__16480 = g;
var G__16481 = h;
var G__16482 = i;
var G__16483 = j;
var G__16484 = k;
var G__16485 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__16474,G__16475,G__16476,G__16477,G__16478,G__16479,G__16480,G__16481,G__16482,G__16483,G__16484,G__16485) : self__.dispatch_fn.call(null,G__16474,G__16475,G__16476,G__16477,G__16478,G__16479,G__16480,G__16481,G__16482,G__16483,G__16484,G__16485));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16486 = a;
var G__16487 = b;
var G__16488 = c;
var G__16489 = d;
var G__16490 = e;
var G__16491 = f;
var G__16492 = g;
var G__16493 = h;
var G__16494 = i;
var G__16495 = j;
var G__16496 = k;
var G__16497 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__16486,G__16487,G__16488,G__16489,G__16490,G__16491,G__16492,G__16493,G__16494,G__16495,G__16496,G__16497) : target_fn.call(null,G__16486,G__16487,G__16488,G__16489,G__16490,G__16491,G__16492,G__16493,G__16494,G__16495,G__16496,G__16497));
});
var G__17182__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16498 = a;
var G__16499 = b;
var G__16500 = c;
var G__16501 = d;
var G__16502 = e;
var G__16503 = f;
var G__16504 = g;
var G__16505 = h;
var G__16506 = i;
var G__16507 = j;
var G__16508 = k;
var G__16509 = l;
var G__16510 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__16498,G__16499,G__16500,G__16501,G__16502,G__16503,G__16504,G__16505,G__16506,G__16507,G__16508,G__16509,G__16510) : self__.dispatch_fn.call(null,G__16498,G__16499,G__16500,G__16501,G__16502,G__16503,G__16504,G__16505,G__16506,G__16507,G__16508,G__16509,G__16510));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16511 = a;
var G__16512 = b;
var G__16513 = c;
var G__16514 = d;
var G__16515 = e;
var G__16516 = f;
var G__16517 = g;
var G__16518 = h;
var G__16519 = i;
var G__16520 = j;
var G__16521 = k;
var G__16522 = l;
var G__16523 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__16511,G__16512,G__16513,G__16514,G__16515,G__16516,G__16517,G__16518,G__16519,G__16520,G__16521,G__16522,G__16523) : target_fn.call(null,G__16511,G__16512,G__16513,G__16514,G__16515,G__16516,G__16517,G__16518,G__16519,G__16520,G__16521,G__16522,G__16523));
});
var G__17182__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16524 = a;
var G__16525 = b;
var G__16526 = c;
var G__16527 = d;
var G__16528 = e;
var G__16529 = f;
var G__16530 = g;
var G__16531 = h;
var G__16532 = i;
var G__16533 = j;
var G__16534 = k;
var G__16535 = l;
var G__16536 = m;
var G__16537 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__16524,G__16525,G__16526,G__16527,G__16528,G__16529,G__16530,G__16531,G__16532,G__16533,G__16534,G__16535,G__16536,G__16537) : self__.dispatch_fn.call(null,G__16524,G__16525,G__16526,G__16527,G__16528,G__16529,G__16530,G__16531,G__16532,G__16533,G__16534,G__16535,G__16536,G__16537));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16538 = a;
var G__16539 = b;
var G__16540 = c;
var G__16541 = d;
var G__16542 = e;
var G__16543 = f;
var G__16544 = g;
var G__16545 = h;
var G__16546 = i;
var G__16547 = j;
var G__16548 = k;
var G__16549 = l;
var G__16550 = m;
var G__16551 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__16538,G__16539,G__16540,G__16541,G__16542,G__16543,G__16544,G__16545,G__16546,G__16547,G__16548,G__16549,G__16550,G__16551) : target_fn.call(null,G__16538,G__16539,G__16540,G__16541,G__16542,G__16543,G__16544,G__16545,G__16546,G__16547,G__16548,G__16549,G__16550,G__16551));
});
var G__17182__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16552 = a;
var G__16553 = b;
var G__16554 = c;
var G__16555 = d;
var G__16556 = e;
var G__16557 = f;
var G__16558 = g;
var G__16559 = h;
var G__16560 = i;
var G__16561 = j;
var G__16562 = k;
var G__16563 = l;
var G__16564 = m;
var G__16565 = n;
var G__16566 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__16552,G__16553,G__16554,G__16555,G__16556,G__16557,G__16558,G__16559,G__16560,G__16561,G__16562,G__16563,G__16564,G__16565,G__16566) : self__.dispatch_fn.call(null,G__16552,G__16553,G__16554,G__16555,G__16556,G__16557,G__16558,G__16559,G__16560,G__16561,G__16562,G__16563,G__16564,G__16565,G__16566));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16567 = a;
var G__16568 = b;
var G__16569 = c;
var G__16570 = d;
var G__16571 = e;
var G__16572 = f;
var G__16573 = g;
var G__16574 = h;
var G__16575 = i;
var G__16576 = j;
var G__16577 = k;
var G__16578 = l;
var G__16579 = m;
var G__16580 = n;
var G__16581 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__16567,G__16568,G__16569,G__16570,G__16571,G__16572,G__16573,G__16574,G__16575,G__16576,G__16577,G__16578,G__16579,G__16580,G__16581) : target_fn.call(null,G__16567,G__16568,G__16569,G__16570,G__16571,G__16572,G__16573,G__16574,G__16575,G__16576,G__16577,G__16578,G__16579,G__16580,G__16581));
});
var G__17182__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16582 = a;
var G__16583 = b;
var G__16584 = c;
var G__16585 = d;
var G__16586 = e;
var G__16587 = f;
var G__16588 = g;
var G__16589 = h;
var G__16590 = i;
var G__16591 = j;
var G__16592 = k;
var G__16593 = l;
var G__16594 = m;
var G__16595 = n;
var G__16596 = o;
var G__16597 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__16582,G__16583,G__16584,G__16585,G__16586,G__16587,G__16588,G__16589,G__16590,G__16591,G__16592,G__16593,G__16594,G__16595,G__16596,G__16597) : self__.dispatch_fn.call(null,G__16582,G__16583,G__16584,G__16585,G__16586,G__16587,G__16588,G__16589,G__16590,G__16591,G__16592,G__16593,G__16594,G__16595,G__16596,G__16597));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16598 = a;
var G__16599 = b;
var G__16600 = c;
var G__16601 = d;
var G__16602 = e;
var G__16603 = f;
var G__16604 = g;
var G__16605 = h;
var G__16606 = i;
var G__16607 = j;
var G__16608 = k;
var G__16609 = l;
var G__16610 = m;
var G__16611 = n;
var G__16612 = o;
var G__16613 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__16598,G__16599,G__16600,G__16601,G__16602,G__16603,G__16604,G__16605,G__16606,G__16607,G__16608,G__16609,G__16610,G__16611,G__16612,G__16613) : target_fn.call(null,G__16598,G__16599,G__16600,G__16601,G__16602,G__16603,G__16604,G__16605,G__16606,G__16607,G__16608,G__16609,G__16610,G__16611,G__16612,G__16613));
});
var G__17182__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16614 = a;
var G__16615 = b;
var G__16616 = c;
var G__16617 = d;
var G__16618 = e;
var G__16619 = f;
var G__16620 = g;
var G__16621 = h;
var G__16622 = i;
var G__16623 = j;
var G__16624 = k;
var G__16625 = l;
var G__16626 = m;
var G__16627 = n;
var G__16628 = o;
var G__16629 = p;
var G__16630 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__16614,G__16615,G__16616,G__16617,G__16618,G__16619,G__16620,G__16621,G__16622,G__16623,G__16624,G__16625,G__16626,G__16627,G__16628,G__16629,G__16630) : self__.dispatch_fn.call(null,G__16614,G__16615,G__16616,G__16617,G__16618,G__16619,G__16620,G__16621,G__16622,G__16623,G__16624,G__16625,G__16626,G__16627,G__16628,G__16629,G__16630));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16631 = a;
var G__16632 = b;
var G__16633 = c;
var G__16634 = d;
var G__16635 = e;
var G__16636 = f;
var G__16637 = g;
var G__16638 = h;
var G__16639 = i;
var G__16640 = j;
var G__16641 = k;
var G__16642 = l;
var G__16643 = m;
var G__16644 = n;
var G__16645 = o;
var G__16646 = p;
var G__16647 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__16631,G__16632,G__16633,G__16634,G__16635,G__16636,G__16637,G__16638,G__16639,G__16640,G__16641,G__16642,G__16643,G__16644,G__16645,G__16646,G__16647) : target_fn.call(null,G__16631,G__16632,G__16633,G__16634,G__16635,G__16636,G__16637,G__16638,G__16639,G__16640,G__16641,G__16642,G__16643,G__16644,G__16645,G__16646,G__16647));
});
var G__17182__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16648 = a;
var G__16649 = b;
var G__16650 = c;
var G__16651 = d;
var G__16652 = e;
var G__16653 = f;
var G__16654 = g;
var G__16655 = h;
var G__16656 = i;
var G__16657 = j;
var G__16658 = k;
var G__16659 = l;
var G__16660 = m;
var G__16661 = n;
var G__16662 = o;
var G__16663 = p;
var G__16664 = q;
var G__16665 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__16648,G__16649,G__16650,G__16651,G__16652,G__16653,G__16654,G__16655,G__16656,G__16657,G__16658,G__16659,G__16660,G__16661,G__16662,G__16663,G__16664,G__16665) : self__.dispatch_fn.call(null,G__16648,G__16649,G__16650,G__16651,G__16652,G__16653,G__16654,G__16655,G__16656,G__16657,G__16658,G__16659,G__16660,G__16661,G__16662,G__16663,G__16664,G__16665));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16666 = a;
var G__16667 = b;
var G__16668 = c;
var G__16669 = d;
var G__16670 = e;
var G__16671 = f;
var G__16672 = g;
var G__16673 = h;
var G__16674 = i;
var G__16675 = j;
var G__16676 = k;
var G__16677 = l;
var G__16678 = m;
var G__16679 = n;
var G__16680 = o;
var G__16681 = p;
var G__16682 = q;
var G__16683 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__16666,G__16667,G__16668,G__16669,G__16670,G__16671,G__16672,G__16673,G__16674,G__16675,G__16676,G__16677,G__16678,G__16679,G__16680,G__16681,G__16682,G__16683) : target_fn.call(null,G__16666,G__16667,G__16668,G__16669,G__16670,G__16671,G__16672,G__16673,G__16674,G__16675,G__16676,G__16677,G__16678,G__16679,G__16680,G__16681,G__16682,G__16683));
});
var G__17182__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16684 = a;
var G__16685 = b;
var G__16686 = c;
var G__16687 = d;
var G__16688 = e;
var G__16689 = f;
var G__16690 = g;
var G__16691 = h;
var G__16692 = i;
var G__16693 = j;
var G__16694 = k;
var G__16695 = l;
var G__16696 = m;
var G__16697 = n;
var G__16698 = o;
var G__16699 = p;
var G__16700 = q;
var G__16701 = r;
var G__16702 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__16684,G__16685,G__16686,G__16687,G__16688,G__16689,G__16690,G__16691,G__16692,G__16693,G__16694,G__16695,G__16696,G__16697,G__16698,G__16699,G__16700,G__16701,G__16702) : self__.dispatch_fn.call(null,G__16684,G__16685,G__16686,G__16687,G__16688,G__16689,G__16690,G__16691,G__16692,G__16693,G__16694,G__16695,G__16696,G__16697,G__16698,G__16699,G__16700,G__16701,G__16702));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16703 = a;
var G__16704 = b;
var G__16705 = c;
var G__16706 = d;
var G__16707 = e;
var G__16708 = f;
var G__16709 = g;
var G__16710 = h;
var G__16711 = i;
var G__16712 = j;
var G__16713 = k;
var G__16714 = l;
var G__16715 = m;
var G__16716 = n;
var G__16717 = o;
var G__16718 = p;
var G__16719 = q;
var G__16720 = r;
var G__16721 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__16703,G__16704,G__16705,G__16706,G__16707,G__16708,G__16709,G__16710,G__16711,G__16712,G__16713,G__16714,G__16715,G__16716,G__16717,G__16718,G__16719,G__16720,G__16721) : target_fn.call(null,G__16703,G__16704,G__16705,G__16706,G__16707,G__16708,G__16709,G__16710,G__16711,G__16712,G__16713,G__16714,G__16715,G__16716,G__16717,G__16718,G__16719,G__16720,G__16721));
});
var G__17182__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16722 = a;
var G__16723 = b;
var G__16724 = c;
var G__16725 = d;
var G__16726 = e;
var G__16727 = f;
var G__16728 = g;
var G__16729 = h;
var G__16730 = i;
var G__16731 = j;
var G__16732 = k;
var G__16733 = l;
var G__16734 = m;
var G__16735 = n;
var G__16736 = o;
var G__16737 = p;
var G__16738 = q;
var G__16739 = r;
var G__16740 = s;
var G__16741 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__16722,G__16723,G__16724,G__16725,G__16726,G__16727,G__16728,G__16729,G__16730,G__16731,G__16732,G__16733,G__16734,G__16735,G__16736,G__16737,G__16738,G__16739,G__16740,G__16741) : self__.dispatch_fn.call(null,G__16722,G__16723,G__16724,G__16725,G__16726,G__16727,G__16728,G__16729,G__16730,G__16731,G__16732,G__16733,G__16734,G__16735,G__16736,G__16737,G__16738,G__16739,G__16740,G__16741));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16742 = a;
var G__16743 = b;
var G__16744 = c;
var G__16745 = d;
var G__16746 = e;
var G__16747 = f;
var G__16748 = g;
var G__16749 = h;
var G__16750 = i;
var G__16751 = j;
var G__16752 = k;
var G__16753 = l;
var G__16754 = m;
var G__16755 = n;
var G__16756 = o;
var G__16757 = p;
var G__16758 = q;
var G__16759 = r;
var G__16760 = s;
var G__16761 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__16742,G__16743,G__16744,G__16745,G__16746,G__16747,G__16748,G__16749,G__16750,G__16751,G__16752,G__16753,G__16754,G__16755,G__16756,G__16757,G__16758,G__16759,G__16760,G__16761) : target_fn.call(null,G__16742,G__16743,G__16744,G__16745,G__16746,G__16747,G__16748,G__16749,G__16750,G__16751,G__16752,G__16753,G__16754,G__16755,G__16756,G__16757,G__16758,G__16759,G__16760,G__16761));
});
var G__17182__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__17182 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__17182__1.call(this,self__);
case 2:
return G__17182__2.call(this,self__,a);
case 3:
return G__17182__3.call(this,self__,a,b);
case 4:
return G__17182__4.call(this,self__,a,b,c);
case 5:
return G__17182__5.call(this,self__,a,b,c,d);
case 6:
return G__17182__6.call(this,self__,a,b,c,d,e);
case 7:
return G__17182__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__17182__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__17182__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__17182__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__17182__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__17182__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__17182__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__17182__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__17182__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__17182__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__17182__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__17182__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__17182__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__17182__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__17182__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__17182__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17182.cljs$core$IFn$_invoke$arity$1 = G__17182__1;
G__17182.cljs$core$IFn$_invoke$arity$2 = G__17182__2;
G__17182.cljs$core$IFn$_invoke$arity$3 = G__17182__3;
G__17182.cljs$core$IFn$_invoke$arity$4 = G__17182__4;
G__17182.cljs$core$IFn$_invoke$arity$5 = G__17182__5;
G__17182.cljs$core$IFn$_invoke$arity$6 = G__17182__6;
G__17182.cljs$core$IFn$_invoke$arity$7 = G__17182__7;
G__17182.cljs$core$IFn$_invoke$arity$8 = G__17182__8;
G__17182.cljs$core$IFn$_invoke$arity$9 = G__17182__9;
G__17182.cljs$core$IFn$_invoke$arity$10 = G__17182__10;
G__17182.cljs$core$IFn$_invoke$arity$11 = G__17182__11;
G__17182.cljs$core$IFn$_invoke$arity$12 = G__17182__12;
G__17182.cljs$core$IFn$_invoke$arity$13 = G__17182__13;
G__17182.cljs$core$IFn$_invoke$arity$14 = G__17182__14;
G__17182.cljs$core$IFn$_invoke$arity$15 = G__17182__15;
G__17182.cljs$core$IFn$_invoke$arity$16 = G__17182__16;
G__17182.cljs$core$IFn$_invoke$arity$17 = G__17182__17;
G__17182.cljs$core$IFn$_invoke$arity$18 = G__17182__18;
G__17182.cljs$core$IFn$_invoke$arity$19 = G__17182__19;
G__17182.cljs$core$IFn$_invoke$arity$20 = G__17182__20;
G__17182.cljs$core$IFn$_invoke$arity$21 = G__17182__21;
G__17182.cljs$core$IFn$_invoke$arity$22 = G__17182__22;
return G__17182;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args16334){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16334)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16762 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__16762) : self__.dispatch_fn.call(null,G__16762));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16763 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__16763) : target_fn.call(null,G__16763));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16764 = a;
var G__16765 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__16764,G__16765) : self__.dispatch_fn.call(null,G__16764,G__16765));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16766 = a;
var G__16767 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__16766,G__16767) : target_fn.call(null,G__16766,G__16767));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16768 = a;
var G__16769 = b;
var G__16770 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__16768,G__16769,G__16770) : self__.dispatch_fn.call(null,G__16768,G__16769,G__16770));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16771 = a;
var G__16772 = b;
var G__16773 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__16771,G__16772,G__16773) : target_fn.call(null,G__16771,G__16772,G__16773));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16774 = a;
var G__16775 = b;
var G__16776 = c;
var G__16777 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__16774,G__16775,G__16776,G__16777) : self__.dispatch_fn.call(null,G__16774,G__16775,G__16776,G__16777));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16778 = a;
var G__16779 = b;
var G__16780 = c;
var G__16781 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__16778,G__16779,G__16780,G__16781) : target_fn.call(null,G__16778,G__16779,G__16780,G__16781));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16782 = a;
var G__16783 = b;
var G__16784 = c;
var G__16785 = d;
var G__16786 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__16782,G__16783,G__16784,G__16785,G__16786) : self__.dispatch_fn.call(null,G__16782,G__16783,G__16784,G__16785,G__16786));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16787 = a;
var G__16788 = b;
var G__16789 = c;
var G__16790 = d;
var G__16791 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__16787,G__16788,G__16789,G__16790,G__16791) : target_fn.call(null,G__16787,G__16788,G__16789,G__16790,G__16791));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16792 = a;
var G__16793 = b;
var G__16794 = c;
var G__16795 = d;
var G__16796 = e;
var G__16797 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__16792,G__16793,G__16794,G__16795,G__16796,G__16797) : self__.dispatch_fn.call(null,G__16792,G__16793,G__16794,G__16795,G__16796,G__16797));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16798 = a;
var G__16799 = b;
var G__16800 = c;
var G__16801 = d;
var G__16802 = e;
var G__16803 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__16798,G__16799,G__16800,G__16801,G__16802,G__16803) : target_fn.call(null,G__16798,G__16799,G__16800,G__16801,G__16802,G__16803));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16804 = a;
var G__16805 = b;
var G__16806 = c;
var G__16807 = d;
var G__16808 = e;
var G__16809 = f;
var G__16810 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__16804,G__16805,G__16806,G__16807,G__16808,G__16809,G__16810) : self__.dispatch_fn.call(null,G__16804,G__16805,G__16806,G__16807,G__16808,G__16809,G__16810));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16811 = a;
var G__16812 = b;
var G__16813 = c;
var G__16814 = d;
var G__16815 = e;
var G__16816 = f;
var G__16817 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__16811,G__16812,G__16813,G__16814,G__16815,G__16816,G__16817) : target_fn.call(null,G__16811,G__16812,G__16813,G__16814,G__16815,G__16816,G__16817));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16818 = a;
var G__16819 = b;
var G__16820 = c;
var G__16821 = d;
var G__16822 = e;
var G__16823 = f;
var G__16824 = g;
var G__16825 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__16818,G__16819,G__16820,G__16821,G__16822,G__16823,G__16824,G__16825) : self__.dispatch_fn.call(null,G__16818,G__16819,G__16820,G__16821,G__16822,G__16823,G__16824,G__16825));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16826 = a;
var G__16827 = b;
var G__16828 = c;
var G__16829 = d;
var G__16830 = e;
var G__16831 = f;
var G__16832 = g;
var G__16833 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__16826,G__16827,G__16828,G__16829,G__16830,G__16831,G__16832,G__16833) : target_fn.call(null,G__16826,G__16827,G__16828,G__16829,G__16830,G__16831,G__16832,G__16833));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16834 = a;
var G__16835 = b;
var G__16836 = c;
var G__16837 = d;
var G__16838 = e;
var G__16839 = f;
var G__16840 = g;
var G__16841 = h;
var G__16842 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__16834,G__16835,G__16836,G__16837,G__16838,G__16839,G__16840,G__16841,G__16842) : self__.dispatch_fn.call(null,G__16834,G__16835,G__16836,G__16837,G__16838,G__16839,G__16840,G__16841,G__16842));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16843 = a;
var G__16844 = b;
var G__16845 = c;
var G__16846 = d;
var G__16847 = e;
var G__16848 = f;
var G__16849 = g;
var G__16850 = h;
var G__16851 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__16843,G__16844,G__16845,G__16846,G__16847,G__16848,G__16849,G__16850,G__16851) : target_fn.call(null,G__16843,G__16844,G__16845,G__16846,G__16847,G__16848,G__16849,G__16850,G__16851));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16852 = a;
var G__16853 = b;
var G__16854 = c;
var G__16855 = d;
var G__16856 = e;
var G__16857 = f;
var G__16858 = g;
var G__16859 = h;
var G__16860 = i;
var G__16861 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__16852,G__16853,G__16854,G__16855,G__16856,G__16857,G__16858,G__16859,G__16860,G__16861) : self__.dispatch_fn.call(null,G__16852,G__16853,G__16854,G__16855,G__16856,G__16857,G__16858,G__16859,G__16860,G__16861));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16862 = a;
var G__16863 = b;
var G__16864 = c;
var G__16865 = d;
var G__16866 = e;
var G__16867 = f;
var G__16868 = g;
var G__16869 = h;
var G__16870 = i;
var G__16871 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__16862,G__16863,G__16864,G__16865,G__16866,G__16867,G__16868,G__16869,G__16870,G__16871) : target_fn.call(null,G__16862,G__16863,G__16864,G__16865,G__16866,G__16867,G__16868,G__16869,G__16870,G__16871));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16872 = a;
var G__16873 = b;
var G__16874 = c;
var G__16875 = d;
var G__16876 = e;
var G__16877 = f;
var G__16878 = g;
var G__16879 = h;
var G__16880 = i;
var G__16881 = j;
var G__16882 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__16872,G__16873,G__16874,G__16875,G__16876,G__16877,G__16878,G__16879,G__16880,G__16881,G__16882) : self__.dispatch_fn.call(null,G__16872,G__16873,G__16874,G__16875,G__16876,G__16877,G__16878,G__16879,G__16880,G__16881,G__16882));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16883 = a;
var G__16884 = b;
var G__16885 = c;
var G__16886 = d;
var G__16887 = e;
var G__16888 = f;
var G__16889 = g;
var G__16890 = h;
var G__16891 = i;
var G__16892 = j;
var G__16893 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__16883,G__16884,G__16885,G__16886,G__16887,G__16888,G__16889,G__16890,G__16891,G__16892,G__16893) : target_fn.call(null,G__16883,G__16884,G__16885,G__16886,G__16887,G__16888,G__16889,G__16890,G__16891,G__16892,G__16893));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16894 = a;
var G__16895 = b;
var G__16896 = c;
var G__16897 = d;
var G__16898 = e;
var G__16899 = f;
var G__16900 = g;
var G__16901 = h;
var G__16902 = i;
var G__16903 = j;
var G__16904 = k;
var G__16905 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__16894,G__16895,G__16896,G__16897,G__16898,G__16899,G__16900,G__16901,G__16902,G__16903,G__16904,G__16905) : self__.dispatch_fn.call(null,G__16894,G__16895,G__16896,G__16897,G__16898,G__16899,G__16900,G__16901,G__16902,G__16903,G__16904,G__16905));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16906 = a;
var G__16907 = b;
var G__16908 = c;
var G__16909 = d;
var G__16910 = e;
var G__16911 = f;
var G__16912 = g;
var G__16913 = h;
var G__16914 = i;
var G__16915 = j;
var G__16916 = k;
var G__16917 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__16906,G__16907,G__16908,G__16909,G__16910,G__16911,G__16912,G__16913,G__16914,G__16915,G__16916,G__16917) : target_fn.call(null,G__16906,G__16907,G__16908,G__16909,G__16910,G__16911,G__16912,G__16913,G__16914,G__16915,G__16916,G__16917));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16918 = a;
var G__16919 = b;
var G__16920 = c;
var G__16921 = d;
var G__16922 = e;
var G__16923 = f;
var G__16924 = g;
var G__16925 = h;
var G__16926 = i;
var G__16927 = j;
var G__16928 = k;
var G__16929 = l;
var G__16930 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__16918,G__16919,G__16920,G__16921,G__16922,G__16923,G__16924,G__16925,G__16926,G__16927,G__16928,G__16929,G__16930) : self__.dispatch_fn.call(null,G__16918,G__16919,G__16920,G__16921,G__16922,G__16923,G__16924,G__16925,G__16926,G__16927,G__16928,G__16929,G__16930));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16931 = a;
var G__16932 = b;
var G__16933 = c;
var G__16934 = d;
var G__16935 = e;
var G__16936 = f;
var G__16937 = g;
var G__16938 = h;
var G__16939 = i;
var G__16940 = j;
var G__16941 = k;
var G__16942 = l;
var G__16943 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__16931,G__16932,G__16933,G__16934,G__16935,G__16936,G__16937,G__16938,G__16939,G__16940,G__16941,G__16942,G__16943) : target_fn.call(null,G__16931,G__16932,G__16933,G__16934,G__16935,G__16936,G__16937,G__16938,G__16939,G__16940,G__16941,G__16942,G__16943));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16944 = a;
var G__16945 = b;
var G__16946 = c;
var G__16947 = d;
var G__16948 = e;
var G__16949 = f;
var G__16950 = g;
var G__16951 = h;
var G__16952 = i;
var G__16953 = j;
var G__16954 = k;
var G__16955 = l;
var G__16956 = m;
var G__16957 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__16944,G__16945,G__16946,G__16947,G__16948,G__16949,G__16950,G__16951,G__16952,G__16953,G__16954,G__16955,G__16956,G__16957) : self__.dispatch_fn.call(null,G__16944,G__16945,G__16946,G__16947,G__16948,G__16949,G__16950,G__16951,G__16952,G__16953,G__16954,G__16955,G__16956,G__16957));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16958 = a;
var G__16959 = b;
var G__16960 = c;
var G__16961 = d;
var G__16962 = e;
var G__16963 = f;
var G__16964 = g;
var G__16965 = h;
var G__16966 = i;
var G__16967 = j;
var G__16968 = k;
var G__16969 = l;
var G__16970 = m;
var G__16971 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__16958,G__16959,G__16960,G__16961,G__16962,G__16963,G__16964,G__16965,G__16966,G__16967,G__16968,G__16969,G__16970,G__16971) : target_fn.call(null,G__16958,G__16959,G__16960,G__16961,G__16962,G__16963,G__16964,G__16965,G__16966,G__16967,G__16968,G__16969,G__16970,G__16971));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16972 = a;
var G__16973 = b;
var G__16974 = c;
var G__16975 = d;
var G__16976 = e;
var G__16977 = f;
var G__16978 = g;
var G__16979 = h;
var G__16980 = i;
var G__16981 = j;
var G__16982 = k;
var G__16983 = l;
var G__16984 = m;
var G__16985 = n;
var G__16986 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__16972,G__16973,G__16974,G__16975,G__16976,G__16977,G__16978,G__16979,G__16980,G__16981,G__16982,G__16983,G__16984,G__16985,G__16986) : self__.dispatch_fn.call(null,G__16972,G__16973,G__16974,G__16975,G__16976,G__16977,G__16978,G__16979,G__16980,G__16981,G__16982,G__16983,G__16984,G__16985,G__16986));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16987 = a;
var G__16988 = b;
var G__16989 = c;
var G__16990 = d;
var G__16991 = e;
var G__16992 = f;
var G__16993 = g;
var G__16994 = h;
var G__16995 = i;
var G__16996 = j;
var G__16997 = k;
var G__16998 = l;
var G__16999 = m;
var G__17000 = n;
var G__17001 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__16987,G__16988,G__16989,G__16990,G__16991,G__16992,G__16993,G__16994,G__16995,G__16996,G__16997,G__16998,G__16999,G__17000,G__17001) : target_fn.call(null,G__16987,G__16988,G__16989,G__16990,G__16991,G__16992,G__16993,G__16994,G__16995,G__16996,G__16997,G__16998,G__16999,G__17000,G__17001));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17002 = a;
var G__17003 = b;
var G__17004 = c;
var G__17005 = d;
var G__17006 = e;
var G__17007 = f;
var G__17008 = g;
var G__17009 = h;
var G__17010 = i;
var G__17011 = j;
var G__17012 = k;
var G__17013 = l;
var G__17014 = m;
var G__17015 = n;
var G__17016 = o;
var G__17017 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__17002,G__17003,G__17004,G__17005,G__17006,G__17007,G__17008,G__17009,G__17010,G__17011,G__17012,G__17013,G__17014,G__17015,G__17016,G__17017) : self__.dispatch_fn.call(null,G__17002,G__17003,G__17004,G__17005,G__17006,G__17007,G__17008,G__17009,G__17010,G__17011,G__17012,G__17013,G__17014,G__17015,G__17016,G__17017));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17018 = a;
var G__17019 = b;
var G__17020 = c;
var G__17021 = d;
var G__17022 = e;
var G__17023 = f;
var G__17024 = g;
var G__17025 = h;
var G__17026 = i;
var G__17027 = j;
var G__17028 = k;
var G__17029 = l;
var G__17030 = m;
var G__17031 = n;
var G__17032 = o;
var G__17033 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__17018,G__17019,G__17020,G__17021,G__17022,G__17023,G__17024,G__17025,G__17026,G__17027,G__17028,G__17029,G__17030,G__17031,G__17032,G__17033) : target_fn.call(null,G__17018,G__17019,G__17020,G__17021,G__17022,G__17023,G__17024,G__17025,G__17026,G__17027,G__17028,G__17029,G__17030,G__17031,G__17032,G__17033));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17034 = a;
var G__17035 = b;
var G__17036 = c;
var G__17037 = d;
var G__17038 = e;
var G__17039 = f;
var G__17040 = g;
var G__17041 = h;
var G__17042 = i;
var G__17043 = j;
var G__17044 = k;
var G__17045 = l;
var G__17046 = m;
var G__17047 = n;
var G__17048 = o;
var G__17049 = p;
var G__17050 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__17034,G__17035,G__17036,G__17037,G__17038,G__17039,G__17040,G__17041,G__17042,G__17043,G__17044,G__17045,G__17046,G__17047,G__17048,G__17049,G__17050) : self__.dispatch_fn.call(null,G__17034,G__17035,G__17036,G__17037,G__17038,G__17039,G__17040,G__17041,G__17042,G__17043,G__17044,G__17045,G__17046,G__17047,G__17048,G__17049,G__17050));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17051 = a;
var G__17052 = b;
var G__17053 = c;
var G__17054 = d;
var G__17055 = e;
var G__17056 = f;
var G__17057 = g;
var G__17058 = h;
var G__17059 = i;
var G__17060 = j;
var G__17061 = k;
var G__17062 = l;
var G__17063 = m;
var G__17064 = n;
var G__17065 = o;
var G__17066 = p;
var G__17067 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__17051,G__17052,G__17053,G__17054,G__17055,G__17056,G__17057,G__17058,G__17059,G__17060,G__17061,G__17062,G__17063,G__17064,G__17065,G__17066,G__17067) : target_fn.call(null,G__17051,G__17052,G__17053,G__17054,G__17055,G__17056,G__17057,G__17058,G__17059,G__17060,G__17061,G__17062,G__17063,G__17064,G__17065,G__17066,G__17067));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17068 = a;
var G__17069 = b;
var G__17070 = c;
var G__17071 = d;
var G__17072 = e;
var G__17073 = f;
var G__17074 = g;
var G__17075 = h;
var G__17076 = i;
var G__17077 = j;
var G__17078 = k;
var G__17079 = l;
var G__17080 = m;
var G__17081 = n;
var G__17082 = o;
var G__17083 = p;
var G__17084 = q;
var G__17085 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__17068,G__17069,G__17070,G__17071,G__17072,G__17073,G__17074,G__17075,G__17076,G__17077,G__17078,G__17079,G__17080,G__17081,G__17082,G__17083,G__17084,G__17085) : self__.dispatch_fn.call(null,G__17068,G__17069,G__17070,G__17071,G__17072,G__17073,G__17074,G__17075,G__17076,G__17077,G__17078,G__17079,G__17080,G__17081,G__17082,G__17083,G__17084,G__17085));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17086 = a;
var G__17087 = b;
var G__17088 = c;
var G__17089 = d;
var G__17090 = e;
var G__17091 = f;
var G__17092 = g;
var G__17093 = h;
var G__17094 = i;
var G__17095 = j;
var G__17096 = k;
var G__17097 = l;
var G__17098 = m;
var G__17099 = n;
var G__17100 = o;
var G__17101 = p;
var G__17102 = q;
var G__17103 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__17086,G__17087,G__17088,G__17089,G__17090,G__17091,G__17092,G__17093,G__17094,G__17095,G__17096,G__17097,G__17098,G__17099,G__17100,G__17101,G__17102,G__17103) : target_fn.call(null,G__17086,G__17087,G__17088,G__17089,G__17090,G__17091,G__17092,G__17093,G__17094,G__17095,G__17096,G__17097,G__17098,G__17099,G__17100,G__17101,G__17102,G__17103));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17104 = a;
var G__17105 = b;
var G__17106 = c;
var G__17107 = d;
var G__17108 = e;
var G__17109 = f;
var G__17110 = g;
var G__17111 = h;
var G__17112 = i;
var G__17113 = j;
var G__17114 = k;
var G__17115 = l;
var G__17116 = m;
var G__17117 = n;
var G__17118 = o;
var G__17119 = p;
var G__17120 = q;
var G__17121 = r;
var G__17122 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__17104,G__17105,G__17106,G__17107,G__17108,G__17109,G__17110,G__17111,G__17112,G__17113,G__17114,G__17115,G__17116,G__17117,G__17118,G__17119,G__17120,G__17121,G__17122) : self__.dispatch_fn.call(null,G__17104,G__17105,G__17106,G__17107,G__17108,G__17109,G__17110,G__17111,G__17112,G__17113,G__17114,G__17115,G__17116,G__17117,G__17118,G__17119,G__17120,G__17121,G__17122));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17123 = a;
var G__17124 = b;
var G__17125 = c;
var G__17126 = d;
var G__17127 = e;
var G__17128 = f;
var G__17129 = g;
var G__17130 = h;
var G__17131 = i;
var G__17132 = j;
var G__17133 = k;
var G__17134 = l;
var G__17135 = m;
var G__17136 = n;
var G__17137 = o;
var G__17138 = p;
var G__17139 = q;
var G__17140 = r;
var G__17141 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__17123,G__17124,G__17125,G__17126,G__17127,G__17128,G__17129,G__17130,G__17131,G__17132,G__17133,G__17134,G__17135,G__17136,G__17137,G__17138,G__17139,G__17140,G__17141) : target_fn.call(null,G__17123,G__17124,G__17125,G__17126,G__17127,G__17128,G__17129,G__17130,G__17131,G__17132,G__17133,G__17134,G__17135,G__17136,G__17137,G__17138,G__17139,G__17140,G__17141));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17142 = a;
var G__17143 = b;
var G__17144 = c;
var G__17145 = d;
var G__17146 = e;
var G__17147 = f;
var G__17148 = g;
var G__17149 = h;
var G__17150 = i;
var G__17151 = j;
var G__17152 = k;
var G__17153 = l;
var G__17154 = m;
var G__17155 = n;
var G__17156 = o;
var G__17157 = p;
var G__17158 = q;
var G__17159 = r;
var G__17160 = s;
var G__17161 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__17142,G__17143,G__17144,G__17145,G__17146,G__17147,G__17148,G__17149,G__17150,G__17151,G__17152,G__17153,G__17154,G__17155,G__17156,G__17157,G__17158,G__17159,G__17160,G__17161) : self__.dispatch_fn.call(null,G__17142,G__17143,G__17144,G__17145,G__17146,G__17147,G__17148,G__17149,G__17150,G__17151,G__17152,G__17153,G__17154,G__17155,G__17156,G__17157,G__17158,G__17159,G__17160,G__17161));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17162 = a;
var G__17163 = b;
var G__17164 = c;
var G__17165 = d;
var G__17166 = e;
var G__17167 = f;
var G__17168 = g;
var G__17169 = h;
var G__17170 = i;
var G__17171 = j;
var G__17172 = k;
var G__17173 = l;
var G__17174 = m;
var G__17175 = n;
var G__17176 = o;
var G__17177 = p;
var G__17178 = q;
var G__17179 = r;
var G__17180 = s;
var G__17181 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__17162,G__17163,G__17164,G__17165,G__17166,G__17167,G__17168,G__17169,G__17170,G__17171,G__17172,G__17173,G__17174,G__17175,G__17176,G__17177,G__17178,G__17179,G__17180,G__17181) : target_fn.call(null,G__17162,G__17163,G__17164,G__17165,G__17166,G__17167,G__17168,G__17169,G__17170,G__17171,G__17172,G__17173,G__17174,G__17175,G__17176,G__17177,G__17178,G__17179,G__17180,G__17181));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
 * Removes all of the methods of multimethod.
 */
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
 * Removes the method of multimethod associated with dispatch-value.
 */
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
 * Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
 * when there is a conflict
 */
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
 * Given a multimethod, returns a map of dispatch values -> dispatch fns
 */
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
 * Given a multimethod and a dispatch value, returns the dispatch fn
 * that would apply to that value, or nil if none apply and no default
 */
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
 * Given a multimethod, returns a map of preferred value -> set of other values
 */
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__17183 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__17183);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__5784__auto__,writer__5785__auto__,opt__5786__auto__){
return cljs.core._write(writer__5785__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
 * @constructor
 */
cljs.core.ExceptionInfo = (function ExceptionInfo(message,data,cause){
var e = (new Error());
var this$ = this;
this$.message = message;

this$.data = data;

this$.cause = cause;

this$.name = e.name;

this$.description = e.description;

this$.number = e.number;

this$.fileName = e.fileName;

this$.lineNumber = e.lineNumber;

this$.columnNumber = e.columnNumber;

this$.stack = e.stack;

return this$;
});
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});
cljs.core.ExceptionInfo.prototype.toString = (function (){
var this$ = this;
return cljs.core.pr_str_STAR_(this$);
});
/**
 * Alpha - subject to change.
 * Create an instance of ExceptionInfo, an Error type that carries a
 * map of additional data.
 */
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
 * Alpha - subject to change.
 * Returns exception data (a map) if ex is an ExceptionInfo.
 * Otherwise returns nil.
 */
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
 * Alpha - subject to change.
 * Returns the message attached to the given Error / ExceptionInfo object.
 * For non-Errors returns nil.
 */
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
 * Alpha - subject to change.
 * Returns exception cause (an Error / ExceptionInfo) if ex is an
 * ExceptionInfo.
 * Otherwise returns nil.
 */
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
 * Returns an JavaScript compatible comparator based upon pred.
 */
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__17191 = x;
var G__17192 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__17191,G__17192) : pred.call(null,G__17191,G__17192));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__17193 = y;
var G__17194 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__17193,G__17194) : pred.call(null,G__17193,G__17194));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
 * test [v] finds fn at key :test in var metadata and calls it,
 * presuming failure will throw exception
 */
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map